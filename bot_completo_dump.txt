

//----- INICIO DEL ARCHIVO: ./app.json -----//

{
  "name": "MoJiTo-MD",
  "description": "Todo Sistema es Vulnerable",
  "repository": "https://github.com/MoJiTo/MoJiTo-MD",
  "logo": "https://raw.githubusercontent.com/MoJiTo/MoJiTo-MD/master/Menu2.jpg",
  "keywords": ["java", "bot", "whatsapp-bot", "whatsapp-automation"],
  "buildpacks": [
  {
    "url": "heroku/nodejs"
  },
  {
    "url": "https://github.com/jonathanong/heroku-buildpack-ffmpeg-latest.git"
  },
  {
    "url": "https://github.com/DuckyTeam/heroku-buildpack-imagemagick.git"
  },
  {
    "url": "https://github.com/clhuang/heroku-buildpack-webp-binaries.git"
  }    
 ]
}

//----- FIN DEL ARCHIVO: ./app.json -----//



//----- INICIO DEL ARCHIVO: ./config.js -----//

import { watchFile, unwatchFile } from 'fs'
import chalk from 'chalk'
import { fileURLToPath } from 'url'
import fs from 'fs'


global.owner = [
  ['5521989050540', '¬©„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö', true],
  ['526644760679', 'Chanell', true]
] // Cambia los numeros que quieras
global.mods = [] 
global.prems = [] 
global.APIs = { // API Prefix
  // name: 'https://website'
  amel: 'https://melcanz.com',
  bx: 'https://bx-hunter.herokuapp.com',
  nrtm: 'https://nurutomo.herokuapp.com',
  xteam: 'https://api.xteam.xyz',
  nzcha: 'http://nzcha-apii.herokuapp.com',
  bg: 'http://bochil.ddns.net',
  fdci: 'https://api.fdci.se',
  dzx: 'https://api.dhamzxploit.my.id',
  bsbt: 'https://bsbt-api-rest.herokuapp.com',
  zahir: 'https://zahirr-web.herokuapp.com',
  zeks: 'https://api.zeks.me',
  hardianto: 'https://hardianto-chan.herokuapp.com',
  pencarikode: 'https://pencarikode.xyz', 
  LeysCoder: 'https://leyscoders-api.herokuapp.com',
  adiisus: 'https://adiixyzapi.herokuapp.com',
  lol: 'https://api.lolhuman.xyz',
  pencarikode: 'https://pencarikode.xyz',
  Velgrynd: 'https://velgrynd.herokuapp.com',
  rey: 'https://server-api-rey.herokuapp.com',
  hardianto: 'http://hardianto-chan.herokuapp.com',
  shadow: 'https://api.reysekha.xyz',
  apialc: 'https://api-alc.herokuapp.com',
  botstyle: 'https://botstyle-api.herokuapp.com',
  neoxr: 'https://neoxr-api.herokuapp.com',
  ana: 'https://anabotofc.herokuapp.com/',
  kanx: 'https://kannxapi.herokuapp.com/',
  dhnjing: 'https://dhnjing.xyz',
  violetics: 'https://violetics.pw'
},
global.APIKeys = { // APIKey Here
  // 'https://website': 'apikey'
  'https://api-alc.herokuapp.com': 'ConfuMods',
  'https://api.reysekha.xyz': 'apirey',
  'https://melcanz.com': 'F3bOrWzY',
  'https://bx-hunter.herokuapp.com': 'Ikyy69',
  'https://api.xteam.xyz': '5bd33b276d41d6b4',
  'https://zahirr-web.herokuapp.com': 'zahirgans',
  'https://bsbt-api-rest.herokuapp.com': 'benniismael',
  'https://api.zeks.me': 'apivinz',
  'https://hardianto-chan.herokuapp.com': 'hardianto',
  'https://pencarikode.xyz': 'pais', 
  'https://leyscoders-api.herokuapp.com': 'MIMINGANZ', 
  'https://server-api-rey.herokuapp.com': 'apirey',
  'https://api.lolhuman.xyz': '9b817532fadff8fc7cb86862',
  'https://botstyle-api.herokuapp.com': 'Eyar749L',
  'https://neoxr-api.herokuapp.com': 'yntkts',
  'https://anabotofc.herokuapp.com/': 'AnaBot',
  'https://violetics.pw': 'beta'
}

// Sticker WM
global.packname = '‚òÖùêå√∏…â…®≈ß√∏‚òÖ'
global.author = 'ùêÅ·µ£·µ¢‚Çê‚Çô‚ô•'

global.wm = '¬©„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö'
global.igfg = 'bk_lyric'
global.wait = '*‚åõ _Cargando..._ ‚ñ¨‚ñ¨‚ñ¨‚ñ≠*'

global.imagen1 = fs.readFileSync('./Menu2.jpg')
global.imagen2 = fs.readFileSync('./src/newbot.jpg') 
global.imagen3 = fs.readFileSync('./src/Tilin.gif')

global.multiplier = 9999 

global.rpg = {
  emoticon(string) {
    string = string.toLowerCase()
    let emot = {
      level: 'üèÜ',
      limit: 'üíé',
      exp: 'üïπÔ∏è'
    }
    let results = Object.keys(emot).map(v => [v, new RegExp(v, 'gi')]).filter(v => v[1].test(string))
    if (!results.length) return ''
    else return emot[results[0][0]]
  }
}


let file = fileURLToPath(import.meta.url)
watchFile(file, () => {
  unwatchFile(file)
  console.log(chalk.redBright("Update 'config.js'"))
  import(`${file}?update=${Date.now()}`)
})

//----- FIN DEL ARCHIVO: ./config.js -----//



//----- INICIO DEL ARCHIVO: ./handler.js -----//







import { smsg } from './lib/simple.js'
import { format } from 'util'
import path, { join } from 'path'
import { pathToFileURL, fileURLToPath } from 'url'

// ‚úÖ Carga din√°mica de plugins
import { unwatchFile, watchFile } from 'fs'
import chalk from 'chalk'
import fs from 'fs'
const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)
const ___dirname = path.join(__dirname, './plugins')  // <== Agrega esta l√≠nea


const { proto } = (await import('@whiskeysockets/baileys')).default
const isNumber = x => typeof x === 'number' && !isNaN(x)
const delay = ms => isNumber(ms) && new Promise(resolve => setTimeout(function () {
    clearTimeout(this)
    resolve()
}, ms))

export async function handler(chatUpdate, conn) {
  conn.msgqueque = conn.msgqueque || []
  if (!chatUpdate?.messages?.length || typeof chatUpdate.messages[0] !== 'object') return

  let m
  try {
    const messages = chatUpdate.messages
    m = messages[messages.length - 1]

    if (!m.message) return
    if (m.key.fromMe && typeof m.message?.conversation === 'string' && !new RegExp(global.prefix).test(m.message.conversation)) return

    // --- FILTRO PARA SILENCIADOS ---
    if (m.isGroup) {
      const chat = global.db.data.chats[m.chat]
      if (chat?.mutedUsers?.includes(m.sender)) {
        try {
          await conn.sendMessage(m.chat, { delete: m.key })
          return // No procesar m√°s este mensaje
        } catch (e) {
          return // Ignorar si no se puede borrar
        }
      }
    }
    // --- FIN FILTRO ---

    if (!global.db.data) {
      await global.loadDatabase()
    }

    const msg = smsg(conn, m) || m
    m = msg
    try {
      if (!global.db._msgCache) global.db._msgCache = {}
      const cache = global.db._msgCache[m.chat] ||= []
      cache.push(m)
      if (cache.length > 100) cache.shift()
    } catch (e) {
      console.error('[‚ùå Error guardando mensajes en cach√©]', e)
    }
    msg.exp = 0
    msg.limit = false

    // üßπ Registrar mensajes enviados por el bot (para limpieza posterior)
    global.botMessages = global.botMessages || {}
    if (!global.botMessages[m.chat]) global.botMessages[m.chat] = []

    // Resto del handler...

if (m.key.fromMe && m.message) {
  global.botMessages[m.chat].push(m.key)
  if (global.botMessages[m.chat].length > 30) global.botMessages[m.chat].shift()
}

    // üîá AUTODELETE A USUARIOS MUTEADOS (callados)
try {
  const chatId = m.chat
  const senderId = m.sender
  const isGroup = m.isGroup

  const muted = global.db?.data?.chats?.[chatId]?.mutedUsers || []

  if (isGroup && muted.includes(senderId)) {
    await conn.sendMessage(chatId, {
      delete: {
        remoteJid: chatId,
        fromMe: false,
        id: m.key.id,
        participant: m.participant || m.key.participant || m.sender
      }
    })
    return
  }
} catch (err) {
  console.error('[‚ùå Error auto-delete muteado]:', err)
}
    try {
      global.db.data.users[m.sender] = global.db.data.users[m.sender] || {}
      global.db.data.chats[m.chat] = global.db.data.chats[m.chat] || {}
      global.db.data.settings[conn.user.jid] = global.db.data.settings[conn.user.jid] || {}

      const user = global.db.data.users[m.sender]
      const chat = global.db.data.chats[m.chat]
      const settings = global.db.data.settings[conn.user.jid]

      if (user.exp == null) user.exp = 0
      if (user.limit == null) user.limit = 10
      if (user.lastclaim == null) user.lastclaim = 0
      if (user.registered == null) user.registered = false
      if (!user.registered) {
        if (user.name == null) user.name = m.name
        if (user.age == null) user.age = -1
        if (user.regTime == null) user.regTime = -1
      }
      if (user.afk == null) user.afk = -1
      if (user.afkReason == null) user.afkReason = ''
      if (user.banned == null) user.banned = false
      if (user.warn == null) user.warn = 0
      if (user.level == null) user.level = 0
      if (user.role == null) user.role = 'Novato'
      if (user.autolevelup == null) user.autolevelup = true
      if (user.money == null) user.money = 0
      if (user.health == null) user.health = 100
      if (user.potion == null) user.potion = 0
      if (user.trash == null) user.trash = 0
      if (user.wood == null) user.wood = 0
      if (user.rock == null) user.rock = 0
      if (user.string == null) user.string = 0
      if (user.petFood == null) user.petFood = 0
      if (user.emerald == null) user.emerald = 0
      if (user.diamond == null) user.diamond = 0
      if (user.gold == null) user.gold = 0
      if (user.iron == null) user.iron = 0
      if (user.common == null) user.common = 0
      if (user.uncommon == null) user.uncommon = 0
      if (user.mythic == null) user.mythic = 0
      if (user.legendary == null) user.legendary = 0
      if (user.pet == null) user.pet = 0
      if (user.horse == null) user.horse = 0
      if (user.horseexp == null) user.horseexp = 0
      if (user.cat == null) user.cat = 0
      if (user.catexp == null) user.catexp = 0
      if (user.fox == null) user.fox = 0
      if (user.foxexp == null) user.foxexp = 0
      if (user.dog == null) user.dog = 0
      if (user.dogexp == null) user.dogexp = 0
      if (user.horselastfeed == null) user.horselastfeed = 0
      if (user.catlastfeed == null) user.catlastfeed = 0
      if (user.foxlastfeed == null) user.foxlastfeed = 0
      if (user.doglastfeed == null) user.doglastfeed = 0
      if (user.armor == null) user.armor = 0
      if (user.armordurability == null) user.armordurability = 0
      if (user.sword == null) user.sword = 0
      if (user.sworddurability == null) user.sworddurability = 0
      if (user.pickaxe == null) user.pickaxe = 0
      if (user.pickaxedurability == null) user.pickaxedurability = 0
      if (user.fishingrod == null) user.fishingrod = 0
      if (user.fishingroddurability == null) user.fishingroddurability = 0
      if (user.lastadventure == null) user.lastadventure = 0
      if (user.lastfishing == null) user.lastfishing = 0
      if (user.lastdungeon == null) user.lastdungeon = 0
      if (user.lastduel == null) user.lastduel = 0
      if (user.lastmining == null) user.lastmining = 0
      if (user.lasthunt == null) user.lasthunt = 0
      if (user.lastweekly == null) user.lastweekly = 0
      if (user.lastmonthly == null) user.lastmonthly = 0

      if (chat.isBanned == null) chat.isBanned = false
      if (chat.welcome == null) chat.welcome = true
      if (chat.detect == null) chat.detect = true
      if (chat.sWelcome == null) chat.sWelcome = ''
      if (chat.sBye == null) chat.sBye = ''
      if (chat.sPromote == null) chat.sPromote = ''
      if (chat.sDemote == null) chat.sDemote = ''
      if (chat.delete == null) chat.delete = true
      if (chat.modohorny == null) chat.modohorny = false
      if (chat.autosticker == null) chat.autosticker = false
      if (chat.audios == null) chat.audios = false
      if (chat.antiLink == null) chat.antiLink = false
      if (chat.antiLink2 == null) chat.antiLink2 = false
      if (chat.antiviewonce == null) chat.antiviewonce = false
      if (chat.antiToxic == null) chat.antiToxic = false
      if (chat.expired == null) chat.expired = 0

      if (settings.self == null) settings.self = false
      if (settings.autoread == null) settings.autoread = false
      if (settings.restrict == null) settings.restrict = true

    } catch (e) {
      console.error(e)
    }


    if (opts['nyimak']) return
    if (!m.fromMe && opts['self']) return
    if (opts['pconly'] && m.chat.endsWith('g.us')) return
    if (opts['gconly'] && !m.chat.endsWith('g.us')) return
    if (opts['swonly'] && m.chat !== 'status@broadcast') return
    if (typeof m.text !== 'string') m.text = ''

        const normalizeJid = jid => jid.replace(/:\d+/, '')
const isROwner = [
  normalizeJid(conn.decodeJid(global.conn?.user?.id || conn.user?.id || '')), 
  ...(Array.isArray(global.owner) ? global.owner.map(([n]) => normalizeJid(n + '@s.whatsapp.net')) : [])
].includes(normalizeJid(m.sender))


        const isOwner = isROwner || m.fromMe
        const isMods = isOwner || global.mods.map(v => v.replace(/[^0-9]/g, '') + '@s.whatsapp.net').includes(m.sender)
        const isPrems = isROwner || global.prems.map(v => v.replace(/[^0-9]/g, '') + '@s.whatsapp.net').includes(m.sender)

        if (opts['queque'] && m.text && !(isMods || isPrems)) {
            let queque = this.msgqueque || (this.msgqueque = [])
let time = 1000 * 5
const previousID = queque.length ? queque[queque.length - 1] : null

            queque.push(m.id || m.key.id)
            setInterval(async function () {
                if (previousID && queque.indexOf(previousID) === -1) clearInterval(this)

                await delay(time)
            }, time)
        }

        if (m.isBaileys)
            return
        m.exp += Math.ceil(Math.random() * 10)

        let usedPrefix
let _user = global.db.data && global.db.data.users && global.db.data.users[m.sender]

conn.chats = conn.chats || {}

// ‚úÖ Aseg√∫rate de definir groupMetadata primero
const groupMetadata = (m.isGroup ? ((conn.chats?.[m.chat] || {}).metadata || await conn.groupMetadata(m.chat).catch(_ => null)) : {}) || {}
const participants = (m.isGroup ? groupMetadata.participants : []) || []

// ‚úÖ Ahora s√≠ puedes usar conn.decodeJid correctamente
const cleanSender = (conn.decodeJid?.(m.sender) || m.sender || '').replace(/:\d+/, '') // ‚Üê actualiza m.sender globalmente
const sender = m.sender // ‚Üê ya est√° limpio aqu√≠

const botNumber = (conn.decodeJid?.(conn.user?.id || '') || conn.user?.id || '').replace(/:\d+/, '')

const user = (m.isGroup ? participants.find(u => conn.decodeJid(u.id) === sender) : {}) || {}
const bot = (m.isGroup
  ? participants.find(u => conn.decodeJid(u.id).replace(/:\d+/, '') === botNumber)
  : {}) || {}

const isRAdmin = user?.admin === 'superadmin' || false
const isAdmin = isRAdmin || user?.admin === 'admin' || false
const isBotAdmin = bot?.admin === 'admin' || bot?.admin === 'superadmin' || false

        
        
        for (let name in global.plugins) {
  let plugin = global.plugins[name]
  if (!plugin || plugin.disabled) continue

  const __filename = join(___dirname, name)
  const __dirname = ___dirname

  if (typeof plugin.all === 'function') {
    try {
      await plugin.all.call(this, m, {
        chatUpdate,
        __dirname,
        __filename
      })
    } catch (e) {
      console.error(e)
      for (let [jid] of global.owner.filter(([number, _, isDev]) => isDev && number)) {
        let data = (await conn.onWhatsApp(jid))[0] || {}
        if (data.exists)
          m.reply(`PLUGIN: ${name}\nUSUARIO: ${m.sender}\nCOMANDO: ${m.text}\n\nERROR:\n${format(e)}`, data.jid)
      }
    }
  }
            if (!opts['restrict'])
  if (plugin.tags && plugin.tags.includes('admin')) {
    continue
  }

const str2Regex = str => str.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&')

let _prefix = plugin.customPrefix
  ? plugin.customPrefix
  : conn.prefix
  ? conn.prefix
  : global.prefix

let match = (_prefix instanceof RegExp
  ? [[_prefix.exec(m.text), _prefix]]
  : Array.isArray(_prefix)
  ? _prefix.map(p => {
      let re = p instanceof RegExp ? p : new RegExp(str2Regex(p))
      return [re.exec(m.text), re]
    })
  : typeof _prefix === 'string'
  ? [[new RegExp(str2Regex(_prefix)).exec(m.text), new RegExp(str2Regex(_prefix))]]
  : [[[], new RegExp()]])
  .find(p => p[1] && p[0])

// Permitir comandos sin prefijo si el plugin no lo requiere
let allowNoPrefix = false

let executed = false

if (!executed && !m.isCommand) {
  for (let name in global.plugins) {
    let plugin = global.plugins[name]
    if (!plugin || plugin.disabled) continue

    const _prefix = plugin.customPrefix
    if (!_prefix || plugin.command !== false) continue

    let matched = false
    let usedPrefix = ''

    if (_prefix instanceof RegExp) {
      matched = _prefix.test(m.text)
    }

    if (matched) {
    //  console.log(`[‚úÖ Ejecutando plugin con customPrefix]: ${name} | Texto: ${m.text}`)
      try {
        const pluginFunction =
          typeof plugin === 'function'
            ? plugin
            : plugin.default || plugin.handler

        await pluginFunction.call(conn, m, {
          args: [],
          text: m.text,
          command: '',
          usedPrefix,
          conn,
        })

        m.isCommand = true
        m.plugin = name
        executed = true
        break
      } catch (e) {
        console.error(e)
        m.reply('*‚ùó Error en plugin customPrefix:* ' + e.message)
      }
    }
  }
}

if (!executed && !match) continue

if (typeof plugin.before === 'function') {
  const shouldSkip = await plugin.before.call(this, m, {
    match,
    conn: this,
    participants,
    groupMetadata,
    user,
    bot,
    isROwner,
    isOwner,
    isRAdmin,
    isAdmin,
    isBotAdmin,
    isPrems,
    chatUpdate,
    __dirname: ___dirname,
    __filename
  })
  if (shouldSkip) return
}

if (typeof plugin !== 'function' && typeof plugin !== 'object') return

const pluginFunction = typeof plugin === 'function' ? plugin : (typeof plugin.default === 'function' ? plugin.default : null)

if (!pluginFunction) return

let noPrefix = m.text || ''
let command = ''
let args = []
let text = ''
let isCustomPrefix = false

if (plugin.customPrefix) {
  const matchCustom = (
    (plugin.customPrefix instanceof RegExp && plugin.customPrefix.test(noPrefix)) ||
    (typeof plugin.customPrefix === 'function' && plugin.customPrefix(noPrefix)) ||
    (Array.isArray(plugin.customPrefix) && plugin.customPrefix.some(p => typeof p === 'string' ? p === noPrefix : p instanceof RegExp && p.test(noPrefix))) ||
    (typeof plugin.customPrefix === 'string' && plugin.customPrefix === noPrefix)
  )

  if (matchCustom) {
    command = noPrefix
    args = []
    text = ''
    isCustomPrefix = true
  }
}

if (!isCustomPrefix && match && (usedPrefix = (match[0] || '')[0])) {
  noPrefix = m.text.replace(usedPrefix, '')
  let _args = noPrefix.trim().split(/\s+/g)
  command = (_args.shift() || '').toLowerCase()
  args = _args
  text = _args.join(' ')


  let fail = plugin.fail || global.dfail

  let isAccept =
  !plugin.command ? true :  // ‚Üê Si no hay command (por ejemplo, cuando solo usa customPrefix), se acepta
  plugin.command instanceof RegExp
    ? plugin.command.test(command)
    : Array.isArray(plugin.command)
    ? plugin.command.some(cmd => cmd instanceof RegExp ? cmd.test(command) : cmd === command)
    : typeof plugin.command === 'string'
    ? plugin.command === command
    : false

                if (!isAccept)
                    continue
                m.plugin = name
                if (m.chat in global.db.data.chats || m.sender in global.db.data.users) {
                    let chat = global.db.data.chats[m.chat]
                    let user = global.db.data.users[m.sender]
                    if (name != 'owner-unbanchat.js' && chat?.isBanned)
                        return // Except this
                    if (name != 'owner-unbanuser.js' && user?.banned)
                        return
                }
                if (plugin.rowner && plugin.owner && !(isROwner || isOwner)) { // Both Owner
                    fail('owner', m, this)
                    continue
                }
                if (plugin.rowner && !isROwner) { // Real Owner
                    fail('rowner', m, this)
                    continue
                }
                if (plugin.owner && !isOwner) { // Number Owner
                    fail('owner', m, this)
                    continue
                }
                if (plugin.mods && !isMods) { // Moderator
                    fail('mods', m, this)
                    continue
                }
                if (plugin.premium && !isPrems) { // Premium
                    fail('premium', m, this)
                    continue
                }
                if (plugin.group && !m.isGroup) { // Group Only
                    fail('group', m, this)
                    continue
                } else if (plugin.botAdmin && !isBotAdmin) { // You Admin
                    fail('botAdmin', m, this)
                    continue
                } else if (plugin.admin && !isAdmin) { // User Admin
                    fail('admin', m, this)
                    continue
                }
                if (plugin.private && m.isGroup) { // Private Chat Only
                    fail('private', m, this)
                    continue
                }
                if (plugin.register == true && _user.registered == false) { // Butuh daftar?
                    fail('unreg', m, this)
                    continue
                }
                m.isCommand = true
                let xp = 'exp' in plugin ? parseInt(plugin.exp) : 17 // XP Earning per command
                if (xp > 200)
                    m.reply('Ngecit -_-') // Hehehe
                else
                    m.exp += xp
                if (!isPrems && plugin.limit && global.db.data.users[m.sender].limit < plugin.limit * 1) {
                    this.reply(m.chat, `*[‚ùóùêàùêçùêÖùêé ‚ùó] ùöÇùöÑùöÇ ùô≥ùô∏ùô∞ùôºùô∞ùôΩùöÉùô¥ùöÇ ùöÇùô¥ ùô∑ùô∞ùôΩ ùô∞ùô∂ùôæùöÉùô∞ùô≥ùôæ, ùôøùöÑùô¥ùô≥ùô¥ ùô≤ùôæùôºùôøùöÅùô∞ùöÅ ùôºùô∞ùöÇ ùöÑùöÇùô∞ùôΩùô≥ùôæ ùô¥ùôª ùô≤ùôæùôºùô∞ùôΩùô≥ùôæ ${usedPrefix}buy <cantidad>*`, m)
                    continue // Limit habis
                }
                if (plugin.level > _user.level) {
                    this.reply(m.chat, `*[‚ùóùêàùêçùêÖùêé ‚ùó] ùöÇùô¥ ùöÅùô¥ùöÄùöÑùô∏ùô¥ùöÅùô¥ ùô¥ùôª ùôΩùô∏ùöÖùô¥ùôª ${plugin.level} ùôøùô∞ùöÅùô∞ ùöÑùöÇùô∞ùöÅ ùô¥ùöÇùöÉùô¥ ùô≤ùôæùôºùô∞ùôΩùô≥ùôæ. ùöÉùöÑ ùôΩùô∏ùöÖùô¥ùôª ùô¥ùöÇ ${_user.level}*`, m)
                    continue // If the level has not been reached
                }
                let extra = {
                    match,
                    usedPrefix,
                    noPrefix,
                    _args,
                    args,
                    command,
                    text,
                    conn: this,
                    participants,
                    groupMetadata,
                    user,
                    bot,
                    isROwner,
                    isOwner,
                    isRAdmin,
                    isAdmin,
                    isBotAdmin,
                    isPrems,
                    chatUpdate,
                    __dirname: ___dirname,
                    __filename
                }
                try {
                    // Asignar al mensaje las propiedades necesarias para los plugins modernos
m.usedPrefix = usedPrefix
m.command = command
m.args = args
console.log('[üîé Ejecutando plugin]:', name)
await pluginFunction.call(this, m, extra)


                    if (!isPrems)
                        m.limit = m.limit || plugin.limit || false
                } catch (e) {
                    // Error occured
                    m.error = e
                    console.error(e)
                    if (e) {
                        let text = format(e)
                        for (let key of Object.values(global.APIKeys))
                            text = text.replace(new RegExp(key, 'g'), '#HIDDEN#')
                        if (e.name)
                            for (let [jid] of global.owner.filter(([number, _, isDeveloper]) => isDeveloper && number)) {
                                let data = (await conn.onWhatsApp(jid))[0] || {}
                                if (data.exists)
                                    m.reply(`*[ ‚ö†Ô∏è ùöÅùô¥ùôøùôæùöÅùöÉùô¥ ùô≥ùô¥ ùô≤ùôæùôºùô∞ùôΩùô≥ùôæ ùô≤ùôæùôΩ ùôµùô∞ùôªùôªùôæùöÇ ‚ö†Ô∏è ]*\n\n*‚Äî‚óâ ùôøùôªùöÑùô∂ùô∏ùôΩ:* ${m.plugin}\n*‚Äî‚óâ ùöÑùöÇùöÑùô∞ùöÅùô∏ùôæ:* ${m.sender}\n*‚Äî‚óâ ùô≤ùôæùôºùô∞ùôΩùô≥ùôæ:* ${usedPrefix}${command} ${args.join(' ')}\n\n\`\`\`${text}\`\`\`\n\n*[‚ùó] ùöÅùô¥ùôøùôæùöÅùöÉùô¥ùôªùôæ ùô∞ùôª ùô≤ùöÅùô¥ùô∞ùô≥ùôæùöÅ ùô≥ùô¥ùôª ùô±ùôæùöÉ ùôøùô∞ùöÅùô∞ ùô≥ùô∞ùöÅùôªùô¥ ùöÑùôΩùô∞ ùöÇùôæùôªùöÑùô≤ùô∏ùôæùôΩ, ùôøùöÑùô¥ùô≥ùô¥ ùöÑùöÇùô∞ùöÅ ùô¥ùôª ùô≤ùôæùôºùô∞ùôΩùô≥ùôæ #reporte*`.trim(), data.jid)
                            }
                        m.reply(text)
                    }
                } finally {
                    // m.reply(util.format(_user))
                    if (typeof plugin.after === 'function') {
                        try {
                            await plugin.after.call(this, m, extra)
                        } catch (e) {
                            console.error(e)
                        }
                    }
                    if (m.limit)
                        m.reply(+m.limit + 'Diamante Usado üíé')
                }
                break
            }
        }
    } catch (e) {
        console.error(e)
    } finally {
        if (opts['queque'] && m.text) {
            const quequeIndex = this.msgqueque.indexOf(m.id || m.key.id)
            if (quequeIndex !== -1)
                this.msgqueque.splice(quequeIndex, 1)
        }
        //console.log(global.db.data.users[m.sender])
        let user, stats = global.db.data.stats
        if (m) {
            if (m.sender && (user = global.db.data.users[m.sender])) {
                user.exp += m.exp
                user.limit -= m.limit * 1
            }

            let stat
            if (m.plugin) {
                let now = +new Date
                if (m.plugin in stats) {
                    stat = stats[m.plugin]
                    if (!isNumber(stat.total))
                        stat.total = 1
                    if (!isNumber(stat.success))
                        stat.success = m.error != null ? 0 : 1
                    if (!isNumber(stat.last))
                        stat.last = now
                    if (!isNumber(stat.lastSuccess))
                        stat.lastSuccess = m.error != null ? 0 : now
                } else
                    stat = stats[m.plugin] = {
                        total: 1,
                        success: m.error != null ? 0 : 1,
                        last: now,
                        lastSuccess: m.error != null ? 0 : now
                    }
                stat.total += 1
                stat.last = now
                if (m.error == null) {
                    stat.success += 1
                    stat.lastSuccess = now
                }
            }
        }

        try {
            if (!opts['noprint']) await (await import(`./lib/print.js`)).default(m, this)
        } catch (e) {
            console.log(m, m.quoted, e)
        }
        if (opts['autoread'])
    await this.readMessages([m.key])

try {
    if (typeof m !== 'undefined' && m && !m.fromMem && typeof m.text === 'string' && m.text.match(/(¬©„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö|MoJiTo-MD|¬©„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö - bot|the¬©„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö-bot)/gi)) {
        let emot = pickRandom(["üéÉ", "‚ù§", "üòò", "üòç", "üíï", "üòé", "üôå", "‚≠ê", "üëª", "üî•"])
        this.sendMessage(m.chat, { react: { text: emot, key: m.key }})
    }
} catch (e) {}
        function pickRandom(list) { return list[Math.floor(Math.random() * list.length)]}
    }
}

export async function participantsUpdate({ id, participants, action }, conn) {
  try {
    const chat = global.db.data.chats[id] || {};
    const groupMetadata = await conn.groupMetadata(id);
    
    
    if (!global.db.data.chats[id]) global.db.data.chats[id] = {}
    global.db.data.chats[id].subject = groupMetadata.subject
    global.db.data.chats[id].metadata = groupMetadata


    console.log('\n[üë• EVENTO PARTICIPANTS UPDATE]')
    console.log('üìå Grupo:', id)
    console.log('üë§ Participantes:', participants)
    console.log('üéØ Acci√≥n:', action)
    console.log('üõ†Ô∏è chat.detect:', chat.detect)
    console.log('üõ†Ô∏è chat.welcome:', chat.welcome)

    let text = '', mentions = [];

    for (const user of participants) {
      const userName = await conn.getName(user);
      const mention = `@${user.split('@')[0]}`;
      mentions.push(user);

      switch (action) {
        case 'add':
          if (chat.welcome) {
            text = `üëã Bienvenido/a ${mention} al grupo *${groupMetadata.subject}*`;
          }
          break;
        case 'remove':
          if (chat.welcome) {
            text = `üëã Adi√≥s ${mention}, te extra√±aremos`;
          }
          break;
        case 'promote':
          if (chat.detect) {
            text = `üëë ${userName} (${mention}) ahora es *admin* del grupo.`;
          }
          break;
        case 'demote':
          if (chat.detect) {
            text = `üë§ ${userName} (${mention}) ya no es admin.`;
          }
          break;
      }

      console.log('üßæ Texto generado:', text || '(vac√≠o)')

      if (text) {
        await conn.sendMessage(id, { text, mentions });
        console.log('‚úÖ Mensaje enviado al grupo.')
      } else {
        console.log('‚ö†Ô∏è No se envi√≥ mensaje (vac√≠o o desactivado).')
      }
    }
  } catch (e) {
    console.error('[‚ùå ERROR EN participantsUpdate]:', e)
  }
}

export async function deleteUpdate(message, conn) {
  try {
    const { fromMe, id, participant, chat } = message;
    if (fromMe) return;

    // Si quieres usar un sistema de cache para cargar mensajes anteriores,
    // implementa aqu√≠ la carga. Si no, usa directamente 'message'.
    const msg = message;

    let chatData = global.db.data.chats[msg.chat] || {};
    if (chatData.delete) return;

    await conn.reply(msg.chat, `
‚îÅ‚îÅ‚îÅ‚îÅ‚¨£  ùòºùôâùôèùôÑ ùòøùôÄùôáùôÄùôèùôÄ  ‚¨£‚îÅ‚îÅ‚îÅ‚îÅ
*‚ñ† Nombre:* @${participant.split`@`[0]}
*‚ñ† Enviando el mensaje..*
*‚ñ† Para desactivar esta funci√≥n escriba el comando:*
*‚Äî‚óâ #disable antidelete*
*‚Äî‚óâ #enable delete*
‚îÅ‚îÅ‚îÅ‚îÅ‚¨£  ùòºùôâùôèùôÑ ùòøùôÄùôáùôÄùôèùôÄ  ‚¨£‚îÅ‚îÅ‚îÅ‚îÅ
`.trim(), msg, {
      mentions: [participant]
    });

    await conn.copyNForward(msg.chat, msg);
  } catch (e) {
    console.error(e);
  }
}

global.dfail = (type, m, conn) => {
  const messages = {
    rowner: `‚ùóÔ∏è‚ö° *ALERTA DE PROPIETARIO* ‚ö°‚ùóÔ∏è\n\nüö´ Este comando solo puede ser usado por\nüëë *EL PROPIETARIO DEL BOT* üëë`,
    owner: `‚ùóÔ∏è‚ö° *ATENCI√ìN PROPIETARIO* ‚ö°‚ùóÔ∏è\n\nüö´ Solo el/La *PROPIETARIO(A)* puede ejecutar este comando.`,
    mods: `üî∞ *MODO MODERADOR* üî∞\n\nEste comando est√° reservado para\nüõ°Ô∏è *MODERADORES* y *PROPIETARIO(A)* del bot.`,
    premium: `‚ú® *USUARIO PREMIUM* ‚ú®\n\nSolo usuarios con *PREMIUM* y\nüëë el/la *PROPIETARIO(A)* pueden usar este comando.`,
    group: `üë• *COMANDO DE GRUPO* üë•\n\nEste comando solo funciona en *GRUPOS*.`,
    private: `üì© *COMANDO PRIVADO* üì©\n\nEste comando solo puede usarse en *CHAT PRIVADO*.`,
    admin: `‚öîÔ∏è *RESTRICCI√ìN DE ADMIN* ‚öîÔ∏è\n\nSolo *ADMINISTRADORES* del grupo pueden usar este comando.`,
    botAdmin: `ü§ñ *BOT NECESITA SER ADMIN* ü§ñ\n\nPara usar este comando, el bot debe\nser *ADMINISTRADOR* del grupo.`,
    unreg: `üö´ *NO REGISTRADO* üö´\n\nPara usar este comando debes estar registrado.\nUsa el comando: *#verificar* para registrarte.`,
    restrict: `‚õî *COMANDO RESTRINGIDO* ‚õî\n\nEste comando est√° desactivado o restringido\npor decisi√≥n del propietario.`
  }

  let text = messages[type]
  if (text) return m.reply(text)
}
let file = __filename
watchFile(file, async () => {
    unwatchFile(file)
    console.log(chalk.redBright("Update 'handler.js'"))
    if (global.reloadHandler) console.log(await global.reloadHandler())
})

//----- FIN DEL ARCHIVO: ./handler.js -----//



//----- INICIO DEL ARCHIVO: ./index.js -----//

import cluster from 'cluster';
import { dirname } from 'path';
import { fileURLToPath } from 'url';
import cfonts from 'cfonts';
import { createInterface } from 'readline';
import yargs from 'yargs';
import chalk from 'chalk';
import gradient from 'gradient-string';
import ora from 'ora';
import { setTimeout as wait } from 'timers/promises';

const __dirname = dirname(fileURLToPath(import.meta.url));
const rl = createInterface(process.stdin, process.stdout);

if (cluster.isPrimary) {
  (async () => {
    // Animaci√≥n tipo consola tecnol√≥gica
    const boot = ora(chalk.cyanBright('Inicializando sistema neural...')).start();
    await wait(800);
    boot.text = chalk.magenta('Cargando m√≥dulos de defensa...');
    await wait(800);
    boot.text = chalk.blueBright('Conectando al n√∫cleo principal...');
    await wait(800);
    boot.text = chalk.green('Estableciendo conexi√≥n con el bot...');
    await wait(1000);
    boot.succeed(chalk.greenBright('‚úÖ Entorno listo'));

    // Separador visual superior
    console.log(gradient.pastel('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ'));

    // Tu banner original, estilo marcador/cartel
    cfonts.say('¬© MoJiTo', {
      font: 'block',
      align: 'center',
      colors: ['red', 'magenta'],
      background: 'transparent',
      letterSpacing: 1,
      lineHeight: 1,
      space: true,
      maxLength: '0'
    });

    // Subt√≠tulo t√©cnico
    cfonts.say('WhatsApp Bot MD', {
      font: 'console',
      align: 'center',
      colors: ['cyan'],
      space: false
    });

    console.log(chalk.magenta.bold('\nüîÆ Bot creado por Brian Martins'));
    console.log(gradient.atlas('üíª Terminal operativa - Bot ejecut√°ndose...\n'));
    console.log(gradient.pastel('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n'));

    // Inicia el worker
    let worker = cluster.fork();

    worker.on('message', (data) => {
      console.log(chalk.blueBright('[DATA]'), data);
      switch (data) {
        case 'reset':
          console.log(chalk.yellow('üîÑ Reiniciando worker...'));
          worker.process.kill();
          worker = cluster.fork();
          break;
        case 'uptime':
          worker.send(process.uptime());
          break;
        default:
          console.log(chalk.redBright('‚ö† Entrada desconocida del worker ‚Üí'), data);
      }
    });

    worker.on('exit', (code, signal) => {
      console.error(chalk.red(`‚ùå Worker finalizado (c√≥digo ${code}, se√±al ${signal})`));
      console.log(chalk.yellow('‚ôª Reiniciando autom√°ticamente...'));
      worker = cluster.fork();
    });

    const opts = yargs(process.argv.slice(2)).exitProcess(false).parse();

    if (!opts['test']) {
      if (!rl.listenerCount()) {
        rl.on('line', line => {
          if (worker.isConnected()) {
            worker.send(line.trim());
          }
        });
      }
    }
  })();
} else {
  import('./main.js');
}
//----- FIN DEL ARCHIVO: ./index.js -----//



//----- INICIO DEL ARCHIVO: ./lib/canvas.js -----//

import { spawn } from 'child_process'
import { join } from 'path'

const __dirname = global.__dirname(import.meta.url)
/**
 * Levelup image
 * @param {String} teks 
 * @param {Number} level 
 * @returns {Promise<Buffer>}
 */
export function levelup(teks, level) {
    return new Promise(async (resolve, reject) => {
        if (!(global.support.convert || global.support.magick || global.support.gm)) return reject('Not Support!')
        const font = join(__dirname, '../src/font')
        let fontLevel = join(font, './level_c.otf')
        let fontTexts = join(font, './texts.otf')
        let xtsx = join(__dirname, '../src/lvlup_template.jpg')
        let anotations = '+1385+260' // gapake else if kadang error
        if (level > 2) anotations = '+1370+260'
        if (level > 10) anotations = '+1330+260'
        if (level > 50) anotations = '+1310+260'
        if (level > 100) anotations = '+1260+260'
        
        const [_spawnprocess, ..._spawnargs] = [...(global.support.gm ? ['gm'] : global.support.magick ? ['magick'] : []),
            'convert',
            xtsx,
            '-font',
            fontTexts,
            '-fill',
            '#0F3E6A',
            '-size',
            '1024x784',
            '-pointsize',
            '68',
            '-interline-spacing',
            '-7.5',
            '-annotate',
            '+153+200',
            teks,
            //original together
            '-font',
            fontLevel,
            '-fill',
            '#0A2A48',
            '-size',
            '1024x784',
            '-pointsize',
            '140',
            '-interline-spacing',
            '-1.2',
            '-annotate',
            anotations,
            level,
            '-append',
            'jpg:-'
        ]
        let bufs = []
        spawn(_spawnprocess, _spawnargs)
            .on('error', reject)
            .on('close', () => {
                return resolve(Buffer.concat(bufs))
            })
            .stdout.on('data', chunk => bufs.push(chunk))
    })
}
//----- FIN DEL ARCHIVO: ./lib/canvas.js -----//



//----- INICIO DEL ARCHIVO: ./lib/cloudDBAdapter.js -----//

import got from 'got'

const stringify = obj => JSON.stringify(obj, null, 2)
const parse = str => JSON.parse(str, (_, v) => {
    if (
        v !== null &&
        typeof v === 'object' &&
        'type' in v &&
        v.type === 'Buffer' &&
        'data' in v &&
        Array.isArray(v.data)) {
        return Buffer.from(v.data)
    }
    return v
})
class CloudDBAdapter {
    constructor(url, {
        serialize = stringify,
        deserialize = parse,
        fetchOptions = {}
    } = {}) {
        this.url = url
        this.serialize = serialize
        this.deserialize = deserialize
        this.fetchOptions = fetchOptions
    }

    async read() {
        try {
            let res = await got(this.url, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json;q=0.9,text/plain'
                },
                ...this.fetchOptions
            })
            if (res.statusCode !== 200) throw res.statusMessage
            return this.deserialize(res.body)
        } catch (e) {
            return null
        }
    }

    async write(obj) {
        let res = await got(this.url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            ...this.fetchOptions,
            body: this.serialize(obj)
        })
        if (res.statusCode !== 200) throw res.statusMessage
        return res.body
    }
}

export default CloudDBAdapter

//----- FIN DEL ARCHIVO: ./lib/cloudDBAdapter.js -----//



//----- INICIO DEL ARCHIVO: ./lib/converter.js -----//

import { promises } from 'fs'
import { join } from 'path'
import { spawn } from 'child_process'

function ffmpeg(buffer, args = [], ext = '', ext2 = '') {
  return new Promise(async (resolve, reject) => {
    try {
      let tmp = join(global.__dirname(import.meta.url), '../tmp', + new Date + '.' + ext)
      let out = tmp + '.' + ext2
      await promises.writeFile(tmp, buffer)
      spawn('ffmpeg', [
        '-y',
        '-i', tmp,
        ...args,
        out
      ])
        .on('error', reject)
        .on('close', async (code) => {
          try {
            await promises.unlink(tmp)
            if (code !== 0) return reject(code)
            resolve({
              data: await promises.readFile(out),
              filename: out,
              delete() {
                return promises.unlink(out)
              }
            })
          } catch (e) {
            reject(e)
          }
        })
    } catch (e) {
      reject(e)
    }
  })
}

/**
 * Convert Audio to Playable WhatsApp Audio
 * @param {Buffer} buffer Audio Buffer
 * @param {String} ext File Extension 
 * @returns {Promise<{data: Buffer, filename: String, delete: Function}>}
 */
function toPTT(buffer, ext) {
  return ffmpeg(buffer, [
    '-vn',
    '-c:a', 'libopus',
    '-b:a', '128k',
    '-vbr', 'on',
  ], ext, 'ogg')
}

/**
 * Convert Audio to Playable WhatsApp PTT
 * @param {Buffer} buffer Audio Buffer
 * @param {String} ext File Extension 
 * @returns {Promise<{data: Buffer, filename: String, delete: Function}>}
 */
function toAudio(buffer, ext) {
  return ffmpeg(buffer, [
    '-vn',
    '-c:a', 'libopus',
    '-b:a', '128k',
    '-vbr', 'on',
    '-compression_level', '10'
  ], ext, 'opus')
}

/**
 * Convert Audio to Playable WhatsApp Video
 * @param {Buffer} buffer Video Buffer
 * @param {String} ext File Extension 
 * @returns {Promise<{data: Buffer, filename: String, delete: Function}>}
 */
function toVideo(buffer, ext) {
  return ffmpeg(buffer, [
    '-c:v', 'libx264',
    '-c:a', 'aac',
    '-ab', '128k',
    '-ar', '44100',
    '-crf', '32',
    '-preset', 'slow'
  ], ext, 'mp4')
}

export {
  toAudio,
  toPTT,
  toVideo,
  ffmpeg,
}
//----- FIN DEL ARCHIVO: ./lib/converter.js -----//



//----- INICIO DEL ARCHIVO: ./lib/database.js -----//

import { resolve, dirname as _dirname } from 'path'
import _fs, { existsSync, readFileSync } from 'fs'
const { promises: fs } = _fs

class Database {
    /**
     * Create new Database
     * @param {String} filepath Path to specified json database
     * @param  {...any} args JSON.stringify arguments
     */
    constructor(filepath, ...args) {
        this.file = resolve(filepath)
        this.logger = console
        
        this._load()

        this._jsonargs = args
        this._state = false
        this._queue = []
        this._interval = setInterval(async () => {
          if (!this._state && this._queue && this._queue[0]) {
            this._state = true
            await this[this._queue.shift()]().catch(this.logger.error)
            this._state = false
          }
        }, 1000)
        
    }

    get data() {
        return this._data
    }

    set data(value) {
        this._data = value
        this.save()
    }

    /**
     * Queue Load
     */
    load() {
        this._queue.push('_load')
    }

    /**
     * Queue Save
     */
    save() {
        this._queue.push('_save')
    }

    _load() {
        try {
          return this._data = existsSync(this.file) ? JSON.parse(readFileSync(this.file)) : {}
        } catch (e) {
          this.logger.error(e)
          return this._data = {}
        }
    }

    async _save() {
        let dirname = _dirname(this.file)
        if (!existsSync(dirname)) await fs.mkdir(dirname, { recursive: true })
        await fs.writeFile(this.file, JSON.stringify(this._data, ...this._jsonargs))
        return this.file
    }
}

export default Database


//----- FIN DEL ARCHIVO: ./lib/database.js -----//



//----- INICIO DEL ARCHIVO: ./lib/gdrive.js -----//

import { join } from 'path'
import { promises as fs } from 'fs'
import { promisify } from 'util'
import { google } from 'googleapis'


// If modifying these scopes, delete token.json.
const SCOPES = ['https://www.googleapis.com/auth/drive.metadata.readonly']
// The file token.json stores the user's access and refresh tokens, and is
// created automatically when the authorization flow completes for the first
// time.
const TOKEN_PATH = join(__dirname, '..', 'token.json')

class GoogleAuth extends EventEmitter {
  constructor() {
    super()
  }

  async authorize(credentials) {
    let token
    const { client_secret, client_id } = credentials
    const oAuth2Client = new google.auth.OAuth2(client_id, client_secret, `http://localhost:${port}`)
    try {
      token = JSON.parse(await fs.readFile(TOKEN_PATH))
    } catch (e) {
      const authUrl = oAuth2Client.generateAuthUrl({
        access_type: 'offline',
        scope: SCOPES
      })
      this.emit('auth', authUrl)
      let code = await promisify(this.once).bind(this)('token')
      token = await oAuth2Client.getToken(code)
      await fs.writeFile(TOKEN_PATH, JSON.stringify(token))
    } finally {
      await oAuth2Client.setCredentials(token)
    }
  }

  token(code) {
    this.emit('token', code)
  }
}

class GoogleDrive extends GoogleAuth {
  constructor() {
    super()
    this.path = '/drive/api'
  }

  async getFolderID(path) {

  }

  async infoFile(path) {

  }

  async folderList(path) {

  }

  async downloadFile(path) {

  }

  async uploadFile(path) {

  }
}

export  {
  GoogleAuth,
  GoogleDrive,
}

//----- FIN DEL ARCHIVO: ./lib/gdrive.js -----//



//----- INICIO DEL ARCHIVO: ./lib/levelling.js -----//

export const growth = Math.pow(Math.PI / Math.E, 1.618) * Math.E * .75
export function xpRange(level, multiplier = global.multiplier || 1) {
    if (level < 0)
        throw new TypeError('level cannot be negative value')
    level = Math.floor(level)
    let min = level === 0 ? 0 : Math.round(Math.pow(level, growth) * multiplier) + 1
    let max = Math.round(Math.pow(++level, growth) * multiplier)
    return {
        min,
        max,
        xp: max - min
    }
}
export function findLevel(xp, multiplier = global.multiplier || 1) {
    if (xp === Infinity)
        return Infinity
    if (isNaN(xp))
        return NaN
    if (xp <= 0)
        return -1
    let level = 0
    do
        level++
    while (xpRange(level, multiplier).min <= xp)
    return --level
}
export function canLevelUp(level, xp, multiplier = global.multiplier || 1) {
    if (level < 0)
        return false
    if (xp === Infinity)
        return true
    if (isNaN(xp))
        return false
    if (xp <= 0)
        return false
    return level < findLevel(xp, multiplier)
}
//----- FIN DEL ARCHIVO: ./lib/levelling.js -----//



//----- INICIO DEL ARCHIVO: ./lib/logs.js -----//

let stdouts = []
export default (maxLength = 200) => {
  let oldWrite = process.stdout.write.bind(process.stdout)
  module.exports.disable = () => {
    module.exports.isModified = false
    return process.stdout.write = oldWrite
  }
  process.stdout.write = (chunk, encoding, callback) => {
    stdouts.push(Buffer.from(chunk, encoding))
    oldWrite(chunk, encoding, callback)
    if (stdouts.length > maxLength) stdouts.shift()
  }
  module.exports.isModified = true
  return module.exports
}

export const isModified = false
export function logs() { return Buffer.concat(stdouts)}


//----- FIN DEL ARCHIVO: ./lib/logs.js -----//



//----- INICIO DEL ARCHIVO: ./lib/mongoDB.js -----//

import mongoose from 'mongoose'

const { Schema, connect, model: _model } = mongoose
const defaultOptions = { useNewUrlParser: true, useUnifiedTopology: true }

export class mongoDB {
  constructor(url, options = defaultOptions) {
    /**
     * @type {string}
     */
    this.url = url
    /**
     * @type {mongoose.ConnectOptions}
     */
    this.options = options
    this.data = this._data = {}
    /**
     * @type {mongoose.Schema}
     */
    this._schema = {}
    /**
     * @type {mongoose.Model}
     */
    this._model = {}
    /**
     * @type {Promise<typeof mongoose>}
     */
    this.db = connect(this.url, { ...this.options }).catch(console.error)
  }
  async read() {
    this.conn = await this.db
    let schema = this._schema = new Schema({
      data: {
        type: Object,
        required: true, //depends on whether the field is mandatory or not
        default: {}
      }
    })
    try { this._model = _model('data', schema) } catch { this._model = _model('data') }
    this._data = await this._model.findOne({})
    if (!this._data) {
      this.data = {}
      const [_, _data] = await Promise.all([
        this.write(this.data),
        this._model.findOne({})
      ])
      this._data = _data
    } else this.data = this._data.data
    return this.data
  }

  write(data) {
    return new Promise(async (resolve, reject) => {
      if (!data) return reject(data)
      if (!this._data) return resolve((new this._model({ data })).save())
      this._model.findById(this._data._id, (err, docs) => {
        if (err) return reject(err)
        if (!docs.data) docs.data = {}
        docs.data = data
        this.data = {}
        return docs.save(resolve)
      })
    })
  }
}

export const mongoDBV2 = class MongoDBV2 {
  constructor(url, options = defaultOptions) {
    /**
     * @type {string}
     */
    this.url = url
    /**
     * @type {mongoose.ConnectOptions}
     */
    this.options = options
    /**
     * @type {{ name: string, model: mongoose.Model}[]}
     */
    this.models = []
    /**
     * @type {{ [Key: string]: any }}
     */
    this.data = {}
    this.lists
    /**
     * @type {mongoose.Model}
     */
    this.list
    /**
     * @type {Promise<typeof mongoose>}
     */
    this.db = connect(this.url, { ...this.options }).catch(console.error)
  }
  async read() {
    this.conn = await this.db
    let schema = new Schema({
      data: [{
        name: String,
      }]
    })
    try { this.list = _model('lists', schema) } catch (e) { this.list = _model('lists') }
    this.lists = await this.list.findOne({})
    if (!lists?.data) {
      await this.list.create({ data: [] })
      // await (new this.list({ data: [] })).save()
      this.lists = await this.list.findOne({})
    }
    let garbage = []
    for (let { name } of this.lists.data) { // get data from list
      /**
       * @type {mongoose.Model}
       */
      let collection
      try { collection = _model(name, new Schema({ data: Array })) } catch (e) {
        console.error(e)
        try { collection = _model(name) } catch (e) {
          garbage.push(name)
          console.error(e)
        }
      }
      if (collection) {
        this.models.push({ name, model: collection })
        let collectionsData = await collection.find({})
        this.data[name] = Object.fromEntries(collectionsData.map(v => v.data))
      }
    }
    try {
      // Delete list if not exist
      let del = await this.list.findById(this.lists._id)
      del.data = del.data.filter(v => !garbage.includes(v.name))
      await del.save()
    } catch (e) {
      console.error(e)
    }

    return this.data
  }
  write(data) {
    return new Promise(async (resolve, reject) => {
      if (!this.lists || !data) return reject(data || this.lists)
      let collections = Object.keys(data), listDoc = [], index = 0
      for (let key of collections) {
        // Update if exist
        if ((index = this.models.findIndex(v => v.name === key)) !== -1) {
          let doc = this.models[index].model
          await doc.deleteMany().catch(console.error) // alwasy insert, no matter delete error
          await doc.insertMany(Object.entries(data[key]).map(v => ({ data: v })))
          if (doc && key) listDoc.push({ name: key })
        } else { // if not exist, create new model
          let schema = new Schema({
            data: Array
          })
          /**
           * @type {mongoose.Model}
           */
          let doc
          try {
            doc = _model(key, schema)
          } catch (e) {
            console.error(e)
            doc = _model(key)
          }
          index = this.models.findIndex(v => v.name === key)
          this.models[index === -1 ? this.models.length : index] = { name: key, model: doc }
          await doc.insertMany(Object.entries(data[key]).map(v => ({ data: v })))
          if (doc && key) listDoc.push({ name: key })
        }
      }

      // save list
      this.list.findById(this.lists._id, function (err, doc) {
        if (err) return reject(err)
        doc.data = listDoc
        this.data = {}
        return doc.save(resolve)
      })
      return resolve(true)
    })
  }
}
//----- FIN DEL ARCHIVO: ./lib/mongoDB.js -----//



//----- INICIO DEL ARCHIVO: ./lib/print.js -----//

import chalk from 'chalk'
import PhoneNumber from 'awesome-phonenumber'
import terminalImage from 'terminal-image'
import { watchFile, writeFileSync, unlinkSync, existsSync } from 'fs'
import { tmpdir } from 'os'
import { join } from 'path'
import Jimp from 'jimp'
import ffmpeg from 'fluent-ffmpeg'
import { downloadContentFromMessage } from '@whiskeysockets/baileys'

export default async function printMessage(m, conn = {}) {
  const getName = async (jid) => {
    try {
      if (!jid) return '(Desconocido)'
      if (jid === conn.user?.jid) return conn.user?.name || 'Yo'
      if (global.db?.data?.users?.[jid]?.name) return global.db.data.users[jid].name
      if (global.db?.data?.chats?.[jid]?.subject) return global.db.data.chats[jid].subject
      if (global.db?.data?.chats?.[jid]?.name) return global.db.data.chats[jid].name
      if (conn.groupMetadata && jid.endsWith('@g.us')) {
        const metadata = await conn.groupMetadata(jid).catch(() => null)
        if (metadata?.subject) return metadata.subject
      }
      if (conn.getName) {
        const name = await conn.getName(jid)
        if (name && name !== jid) return name
      }
      return jid.split('@')[0]
    } catch {
      return jid.split('@')[0]
    }
  }

  const timeStr = new Date().toLocaleTimeString()
  const senderJid = (m.sender || '').replace(/:\d+/, '')
  const senderNum = senderJid.replace(/@.*/, '')
  const sender = PhoneNumber('+' + senderNum).getNumber('international') || senderNum
  const chatId = (m.chat || '').replace(/:\d+/, '')
  const isGroup = chatId.endsWith('@g.us')

  const chatName = await getName(chatId)
  const senderName = await getName(senderJid)

  console.log(chalk.cyanBright('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ'))
  console.log(chalk.cyanBright(`‚îÇ üì§ De: `) + chalk.green(senderName))
  console.log(chalk.cyanBright(`‚îÇ üß≠ Chat: `) + chalk.yellow(chatName))
  console.log(chalk.cyanBright(`‚îÇ üïí Hora: `) + chalk.magenta(timeStr))
  console.log(chalk.cyanBright(`‚îÇ üóÇÔ∏è Tipo: `) + chalk.blueBright((m.mtype || '').toUpperCase()))
  if (m.text) console.log(chalk.cyanBright(`‚îÇ üí¨ Texto: `) + chalk.whiteBright(m.text.slice(0, 200)))
  console.log(chalk.cyanBright('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ'))

  const mostrarImagen = async (buf, isWebp = false, isAnimated = false) => {
    try {
      if (isAnimated) {
        console.log(chalk.yellow('‚ö†Ô∏è'))
        return
      }
      if (isWebp) {
        const input = join(tmpdir(), `sticker_${Date.now()}.webp`)
        const output = input.replace('.webp', '.png')
        writeFileSync(input, buf)

        await new Promise((resolve, reject) => {
          ffmpeg(input)
            .outputOptions(['-vcodec', 'png'])
            .save(output)
            .on('end', resolve)
            .on('error', (err) => {
              if (err.message.includes('code 69')) {
                console.log(chalk.yellow('‚ö†Ô∏è ffmpeg no pudo convertir este sticker (c√≥digo 69), se omite la imagen.'))
                resolve()
              } else reject(err)
            })
        })

        try {
          if (existsSync(output)) {
            buf = await Jimp.read(output).then(img => img.getBufferAsync(Jimp.MIME_PNG))
          } else {
            console.log(chalk.yellow('‚ö†Ô∏è No se cre√≥ archivo PNG, se omite la imagen.'))
          }
        } catch {
          // si falla lectura, buf queda igual
        }

        if (existsSync(input)) unlinkSync(input)
        if (existsSync(output)) unlinkSync(output)
      } else {
        const img = await Jimp.read(buf)
        buf = await img.getBufferAsync(Jimp.MIME_PNG)
      }

      if (buf) process.stdout.write(await terminalImage.buffer(buf, { width: '20%' }) + '\n')
    } catch (err) {
      console.log(chalk.red('‚ö†Ô∏è Error mostrando imagen/sticker:'), err.message)
    }
  }

  const tipo = m.mtype || ''
  const mime = (m.msg || m)?.mimetype || m.mediaType || ''

  if (tipo.includes('image')) {
    try {
      const stream = await downloadContentFromMessage(m.msg || m.message?.imageMessage, 'image')
      let buf = Buffer.from([])
      for await (const chunk of stream) buf = Buffer.concat([buf, chunk])
      if (buf?.length) await mostrarImagen(buf)
      else console.log(chalk.yellow('‚ö†Ô∏è Imagen vac√≠a o no disponible.'))
    } catch (err) {
      console.log(chalk.red('‚ö†Ô∏è Error mostrando imagen:'), err.message)
    }
  } else if (tipo.includes('sticker')) {
    try {
      const msgContent = m.msg || m.message?.stickerMessage
      const isAnimated = msgContent?.isAnimated || false
      const stream = await downloadContentFromMessage(msgContent, 'sticker')
      let buf = Buffer.from([])
      for await (const chunk of stream) buf = Buffer.concat([buf, chunk])

      if (buf?.length) {
      //  console.log(`üì¶ Sticker buffer OK (${buf.length} bytes)`)
        await mostrarImagen(buf, true, isAnimated)
      } else {
        console.log(chalk.yellow('‚ö†Ô∏è Sticker vac√≠o o no disponible.'))
      }
    } catch (err) {
      console.log(chalk.red('‚ö†Ô∏è Error mostrando sticker:'), err.message)
    }
  }

  if (m.error) {
    console.log(chalk.bgRedBright('üí• ERROR:'), chalk.red(m.error))
  }

  if (Array.isArray(m.mentionedJid)) {
    for (const jid of m.mentionedJid) {
      const cleanJid = jid.replace(/:\d+/, '')
      const name = await getName(cleanJid)
      const user = PhoneNumber('+' + cleanJid.replace(/@.*/, '')).getNumber('international')
      console.log(chalk.cyan(`üîî Mencionado: ${user} ${name ? '~ ' + name : ''}`))
    }
  }

  console.log()
}

watchFile(import.meta.url, () => {
  console.log(chalk.redBright("üîÑ Se actualiz√≥ 'lib/print.js'"))
})
//----- FIN DEL ARCHIVO: ./lib/print.js -----//



//----- INICIO DEL ARCHIVO: ./lib/simple.js -----//

import path from 'path'
import { toAudio } from './converter.js'
import chalk from 'chalk'
import fetch from 'node-fetch'
import PhoneNumber from 'awesome-phonenumber'
import fs from 'fs'
import util from 'util'
import { fileTypeFromBuffer } from 'file-type'
import { format } from 'util'
import { fileURLToPath } from 'url'
import store from './store.js'
import { extractMessageContent } from '@whiskeysockets/baileys';
const __dirname = path.dirname(fileURLToPath(import.meta.url))

import baileys from '@whiskeysockets/baileys';
const {
  default: makeWASocket,
  makeInMemoryStore,
  useMultiFileAuthState,
  DisconnectReason,
  fetchLatestBaileysVersion,
  PHONENUMBER_MCC,
  makeCacheableSignalKeyStore,
  makeCacheableCreds,
  Browsers,
  delay,
  getAggregateVotesInPollMessage,
  getContentType,
  generateForwardMessageContent,
  generateWAMessage,
  generateWAMessageFromContent,
  prepareWAMessageMedia,
  downloadContentFromMessage,
  areJidsSameUser,
  jidNormalizedUser,
  proto,
  BufferJSON,
  WA_DEFAULT_EPHEMERAL
} = baileys;


export function jidDecode(jid = '') {
  if (!jid || typeof jid !== 'string') return jid || null;
  // Ejemplo b√°sico, adaptalo si usas otros formatos:
  return jid.split(':')[0] + '@s.whatsapp.net';
}

export function createWASocket(connectionOptions, options = {}) {
  // 1) Creamos la conexi√≥n sin fallback legacy
  let conn = makeWASocket(connectionOptions)

  // 2) Definimos propiedades extra, incluido reply
  let sock = Object.defineProperties(conn, {
    chats: {
      value: { ...(options.chats || {}) },
      writable: true,
    },
    decodeJid: {
      value(jid) {
        if (!jid || typeof jid !== 'string') return jid || null
        return jid
      },
    },
    reply: {
      /**
       * Responde a un mensaje
       * @param {String} jid
       * @param {String|Buffer} text
       * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} quoted
       * @param {Object} options
       */
      value(jid, text = '', quoted, opts = {}) {
        if (Buffer.isBuffer(text)) {
          return conn.sendFile(jid, text, 'file', '', quoted, false, opts)
        }
        return conn.sendMessage(
          jid,
          { text, ...opts },
          { quoted, ...opts }
        )
      }
    },
    logger: {
      get() {
        return {
          info(...args) {
            console.log(
              chalk.bold.bgRgb(255, 153, 0)('WARNING '),
              `[${chalk.rgb(255, 255, 255)(new Date().toUTCString())}]:`,
              chalk.redBright(format(...args))
            )
          },
          trace(...args) {
            console.log(
              chalk.grey('TRACE '),
              `[${chalk.rgb(255, 255, 255)(new Date().toUTCString())}]:`,
              chalk.white(format(...args))
            )
          },
          debug(...args) {
            console.log(
              chalk.bold.bgRgb(66, 167, 245)('DEBUG '),
              `[${chalk.rgb(255, 255, 255)(new Date().toUTCString())}]:`,
              chalk.white(format(...args))
            )
          }
        }
      },
    },
    getFile: {
      value: async function (PATH, saveToFile = false) {
        let res, filename
        const data = Buffer.isBuffer(PATH)
          ? PATH
          : PATH instanceof ArrayBuffer
          ? Buffer.from(PATH)
          : /^data:.*?\/.*?;base64,/i.test(PATH)
          ? Buffer.from(PATH.split(',')[1], 'base64')
          : /^https?:\/\//.test(PATH)
          ? await (res = await fetch(PATH)).buffer()
          : fs.existsSync(PATH)
          ? (filename = PATH, fs.readFileSync(PATH))
          : typeof PATH === 'string'
          ? Buffer.from(PATH)
          : Buffer.alloc(0)

        if (!Buffer.isBuffer(data)) throw new TypeError('Result is not a buffer')

        const type = await fileTypeFromBuffer(data) || {
          mime: 'application/octet-stream',
          ext: 'bin'
        }

        if (data && saveToFile && !filename) {
          filename = path.join(__dirname, '../tmp/' + new Date().getTime() + '.' + type.ext)
          await fs.promises.writeFile(filename, data)
        }

        return {
          res,
          filename,
          ...type,
          data,
          deleteFile() {
            return filename && fs.promises.unlink(filename)
          }
        }
      },
      enumerable: true
    },
    waitEvent: {
      /**
       * waitEvent
       * @param {String} eventName 
       * @param {Boolean} is 
       * @param {Number} maxTries 
       */
      value(eventName, is = () => true, maxTries = 25) {
        return new Promise((resolve, reject) => {
          let tries = 0
          let on = (...args) => {
            if (++tries > maxTries) reject('Max tries reached')
            else if (is()) {
              conn.ev.off(eventName, on)
              resolve(...args)
            }
          }
          conn.ev.on(eventName, on)
        })
      },
      enumerable: true
    },
    sendFile: {
      /**
       * Send Media/File with Automatic Type Specifier
       * @param {String} jid
       * @param {String|Buffer} path
       * @param {String} filename
       * @param {String} caption
       * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} quoted
       * @param {Boolean} ptt
       * @param {Object} options
       */
      async value(jid, path, filename = '', caption = '', quoted, ptt = false, options = {}) {
        let type = await conn.getFile(path, true)
        let { res, data: file, filename: pathFile } = type
        if (res && res.status !== 200 || file.length <= 65536) {
          try { throw { json: JSON.parse(file.toString()) } }
          catch (e) { if (e.json) throw e.json }
        }
                //const fileSize = fs.statSync(pathFile).size / 1024 / 1024
                //if (fileSize >= 100) throw new Error('File size is too big!')
                let opt = {}
                if (quoted) opt.quoted = quoted
                if (!type) options.asDocument = true
                let mtype = '', mimetype = options.mimetype || type.mime, convert
                if (/webp/.test(type.mime) || (/image/.test(type.mime) && options.asSticker)) mtype = 'sticker'
                else if (/image/.test(type.mime) || (/webp/.test(type.mime) && options.asImage)) mtype = 'image'
                else if (/video/.test(type.mime)) mtype = 'video'
                else if (/audio/.test(type.mime)) (
                    convert = await toAudio(file, type.ext),
                    file = convert.data,
                    pathFile = convert.filename,
                    mtype = 'audio',
                    mimetype = options.mimetype || 'audio/ogg; codecs=opus'
                )
                else mtype = 'document'
                if (options.asDocument) mtype = 'document'

                delete options.asSticker
                delete options.asLocation
                delete options.asVideo
                delete options.asDocument
                delete options.asImage

                let message = {
                    ...options,
                    caption,
                    ptt,
                    [mtype]: { url: pathFile },
                    mimetype,
                    fileName: filename || pathFile.split('/').pop()
                }
                /**
                 * @type {import('@whiskeysockets/baileys').proto.WebMessageInfo}
                 */
                let m
                try {
                    m = await conn.sendMessage(jid, message, { ...opt, ...options })
                } catch (e) {
                    console.error(e)
                    m = null
                } finally {
                    if (!m) m = await conn.sendMessage(jid, { ...message, [mtype]: file }, { ...opt, ...options })
                    file = null // releasing the memory
                    return m
                }
            },
            enumerable: true
        },
        sendContact: {
            /**
             * Send Contact
             * @param {String} jid 
             * @param {String[][]|String[]} data
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} quoted 
             * @param {Object} options 
             */
            async value(jid, data, quoted, options) {
                if (!Array.isArray(data[0]) && typeof data[0] === 'string') data = [data]
                let contacts = []
                for (let [number, name] of data) {
                    number = number.replace(/[^0-9]/g, '')
                    let njid = number + '@s.whatsapp.net'
                    let biz = await conn.getBusinessProfile(njid).catch(_ => null) || {}
                    let vcard = `
BEGIN:VCARD
VERSION:3.0
N:;${name.replace(/\n/g, '\\n')};;;
FN:${name.replace(/\n/g, '\\n')}
TEL;type=CELL;type=VOICE;waid=${number}:${PhoneNumber('+' + number).getNumber('international')}${biz.description ? `
X-WA-BIZ-NAME:${(conn.chats[njid]?.vname || conn.getName(njid) || name).replace(/\n/, '\\n')}
X-WA-BIZ-DESCRIPTION:${biz.description.replace(/\n/g, '\\n')}
`.trim() : ''}
END:VCARD
        `.trim()
                    contacts.push({ vcard, displayName: name })

                }
                return await conn.sendMessage(jid, {
                    ...options,
                    contacts: {
                        ...options,
                        displayName: (contacts.length >= 2 ? `${contacts.length} kontak` : contacts[0].displayName) || null,
                        contacts,
                    }
                }, { quoted, ...options })
            },
            enumerable: true
        },
        reply: {
            /**
             * Reply to a message
             * @param {String} jid
             * @param {String|Buffer} text
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} quoted
             * @param {Object} options
             */
            value(jid, text = '', quoted, options) {
                return Buffer.isBuffer(text) ? conn.sendFile(jid, text, 'file', '', quoted, false, options) : conn.sendMessage(jid, { ...options, text }, { quoted, ...options })
            }
        },
        sendButton: {
            /**
             * send Button
             * @param {String} jid
             * @param {String} text
             * @param {String} footer
             * @param {Buffer} buffer
             * @param {String[] | String[][]} buttons
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} quoted
             * @param {Object} options
             */
            async value(jid, text = '', footer = '', buffer, buttons, quoted, options) {
                let type
                if (Array.isArray(buffer)) (options = quoted, quoted = buttons, buttons = buffer, buffer = null)
                else if (buffer) try { (type = await conn.getFile(buffer), buffer = type.data) } catch { buffer = null }
                if (!Array.isArray(buttons[0]) && typeof buttons[0] === 'string') buttons = [buttons]
                if (!options) options = {}
                let message = {
                    ...options,
                    [buffer ? 'caption' : 'text']: text || '',
                    footer,
                    buttons: buttons.map(btn => ({
                        buttonId: !nullish(btn[1]) && btn[1] || !nullish(btn[0]) && btn[0] || '',
                        buttonText: {
                            displayText: !nullish(btn[0]) && btn[0] || !nullish(btn[1]) && btn[1] || ''
                        }
                    })),
                    ...(buffer ?
                        options.asLocation && /image/.test(type.mime) ? {
                            location: {
                                ...options,
                                jpegThumbnail: buffer
                            }
                        } : {
                            [/video/.test(type.mime) ? 'video' : /image/.test(type.mime) ? 'image' : 'document']: buffer
                        } : {})
                }

                return await conn.sendMessage(jid, message, {
                    quoted,
                    upload: conn.waUploadToServer,
                    ...options
                })
            },
            enumerable: true
        },
        sendHydrated: {
            /**
             * 
             * @param {String} jid 
             * @param {String} text 
             * @param {String} footer 
             * @param {fs.PathLike} buffer
             * @param {String|string[]} url
             * @param {String|string[]} urlText
             * @param {String|string[]} call
             * @param {String|string[]} callText
             * @param {String[][]} buttons
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} quoted
             * @param {Object} options
             */
            async value(jid, text = '', footer = '', buffer, url, urlText, call, callText, buttons, quoted, options) {
                let type
                if (buffer) try { (type = await conn.getFile(buffer), buffer = type.data) } catch { buffer = buffer }
                if (buffer && !Buffer.isBuffer(buffer) && (typeof buffer === 'string' || Array.isArray(buffer))) (options = quoted, quoted = buttons, buttons = callText, callText = call, call = urlText, urlText = url, url = buffer, buffer = null)
                if (!options) options = {}
                let templateButtons = []
                if (url || urlText) {
                    if (!Array.isArray(url)) url = [url]
                    if (!Array.isArray(urlText)) urlText = [urlText]
                    templateButtons.push(...(
                        url.map((v, i) => [v, urlText[i]])
                            .map(([url, urlText], i) => ({
                                index: templateButtons.length + i + 1,
                                urlButton: {
                                    displayText: !nullish(urlText) && urlText || !nullish(url) && url || '',
                                    url: !nullish(url) && url || !nullish(urlText) && urlText || ''
                                }
                            })) || []
                    ))
                }
                if (call || callText) {
                    if (!Array.isArray(call)) call = [call]
                    if (!Array.isArray(callText)) callText = [callText]
                    templateButtons.push(...(
                        call.map((v, i) => [v, callText[i]])
                            .map(([call, callText], i) => ({
                                index: templateButtons.length + i + 1,
                                callButton: {
                                    displayText: !nullish(callText) && callText || !nullish(call) && call || '',
                                    phoneNumber: !nullish(call) && call || !nullish(callText) && callText || ''
                                }
                            })) || []
                    ))
                }
                if (buttons.length) {
                    if (!Array.isArray(buttons[0])) buttons = [buttons]
                    templateButtons.push(...(
                        buttons.map(([text, id], index) => ({
                            index: templateButtons.length + index + 1,
                            quickReplyButton: {
                                displayText: !nullish(text) && text || !nullish(id) && id || '',
                                id: !nullish(id) && id || !nullish(text) && text || ''
                            }
                        })) || []
                    ))
                }
                let message = {
                    ...options,
                    [buffer ? 'caption' : 'text']: text || '',
                    footer,
                    templateButtons,
                    ...(buffer ?
                        options.asLocation && /image/.test(type.mime) ? {
                            location: {
                                ...options,
                                jpegThumbnail: buffer
                            }
                        } : {
                            [/video/.test(type.mime) ? 'video' : /image/.test(type.mime) ? 'image' : 'document']: buffer
                        } : {})
                }
                return await conn.sendMessage(jid, message, {
                    quoted,
                    upload: conn.waUploadToServer,
                    ...options
                })
            },
            enumerable: true
        },
          sendHydrated2: {
            /**
             * 
             * @param {String} jid 
             * @param {String} text 
             * @param {String} footer 
             * @param {fs.PathLike} buffer
             * @param {String|string[]} url
             * @param {String|string[]} urlText
             * @param {String|string[]} call
             * @param {String|string[]} callText
             * @param {String[][]} buttons
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} quoted
             * @param {Object} options
             */
            async value(jid, text = '', footer = '', buffer, url, urlText, url2, urlText2, buttons, quoted, options) {
                let type
                if (buffer) try { (type = await conn.getFile(buffer), buffer = type.data) } catch { buffer = buffer }
                if (buffer && !Buffer.isBuffer(buffer) && (typeof buffer === 'string' || Array.isArray(buffer))) (options = quoted, quoted = buttons, buttons = callText, callText = call, call = urlText, urlText = url, url = buffer, buffer = null)
                if (!options) options = {}
                let templateButtons = []
                if (url || urlText) {
                    if (!Array.isArray(url)) url = [url]
                    if (!Array.isArray(urlText)) urlText = [urlText]
                    templateButtons.push(...(
                        url.map((v, i) => [v, urlText[i]])
                            .map(([url, urlText], i) => ({
                                index: templateButtons.length + i + 1,
                                urlButton: {
                                    displayText: !nullish(urlText) && urlText || !nullish(url) && url || '',
                                    url: !nullish(url) && url || !nullish(urlText) && urlText || ''
                                }
                            })) || []
                    ))
                }
                if (url2 || urlText2) {
                    if (!Array.isArray(url2)) url2 = [url2]
                    if (!Array.isArray(urlText2)) urlText2 = [urlText2]
                    templateButtons.push(...(
                        url2.map((v, i) => [v, urlText2[i]])
                            .map(([url2, urlText2], i) => ({
                                index: templateButtons.length + i + 1,
                                urlButton: {
                                    displayText: !nullish(urlText2) && urlText2 || !nullish(url2) && url2 || '',
                                    url: !nullish(url2) && url2 || !nullish(urlText2) && urlText2 || ''
                                }
                            })) || []
                    ))
                }
                if (buttons.length) {
                    if (!Array.isArray(buttons[0])) buttons = [buttons]
                    templateButtons.push(...(
                        buttons.map(([text, id], index) => ({
                            index: templateButtons.length + index + 1,
                            quickReplyButton: {
                                displayText: !nullish(text) && text || !nullish(id) && id || '',
                                id: !nullish(id) && id || !nullish(text) && text || ''
                            }
                        })) || []
                    ))
                }
                let message = {
                    ...options,
                    [buffer ? 'caption' : 'text']: text || '',
                    footer,
                    templateButtons,
                    ...(buffer ?
                        options.asLocation && /image/.test(type.mime) ? {
                            location: {
                                ...options,
                                jpegThumbnail: buffer
                            }
                        } : {
                            [/video/.test(type.mime) ? 'video' : /image/.test(type.mime) ? 'image' : 'document']: buffer
                        } : {})
                }
                return await conn.sendMessage(jid, message, {
                    quoted,
                    upload: conn.waUploadToServer,
                    ...options
                })
            },
            enumerable: true
        },        
        cMod: {
            /**
             * cMod
             * @param {String} jid 
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} message 
             * @param {String} text 
             * @param {String} sender 
             * @param {*} options 
             * @returns 
             */
            value(jid, message, text = '', sender = conn.user.jid, options = {}) {
                if (options.mentions && !Array.isArray(options.mentions)) options.mentions = [options.mentions]
                let copy = message.toJSON()
                delete copy.message.messageContextInfo
                delete copy.message.senderKeyDistributionMessage
                let mtype = Object.keys(copy.message)[0]
                let msg = copy.message
                let content = msg[mtype]
                if (typeof content === 'string') msg[mtype] = text || content
                else if (content.caption) content.caption = text || content.caption
                else if (content.text) content.text = text || content.text
                if (typeof content !== 'string') {
                    msg[mtype] = { ...content, ...options }
                    msg[mtype].contextInfo = {
                        ...(content.contextInfo || {}),
                        mentionedJid: options.mentions || content.contextInfo?.mentionedJid || []
                    }
                }
                if (copy.participant) sender = copy.participant = sender || copy.participant
                else if (copy.key.participant) sender = copy.key.participant = sender || copy.key.participant
                if (copy.key.remoteJid.includes('@s.whatsapp.net')) sender = sender || copy.key.remoteJid
                else if (copy.key.remoteJid.includes('@broadcast')) sender = sender || copy.key.remoteJid
                copy.key.remoteJid = jid
                copy.key.fromMe = areJidsSameUser(sender, conn.user.id) || false
                return proto.WebMessageInfo.fromObject(copy)
            },
            enumerable: true
        },
        copyNForward: {
            /**
             * Exact Copy Forward
             * @param {String} jid
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} message
             * @param {Boolean|Number} forwardingScore
             * @param {Object} options
             */
            async value(jid, message, forwardingScore = true, options = {}) {
                let vtype
                if (options.readViewOnce && message.message.viewOnceMessage?.message) {
                    vtype = Object.keys(message.message.viewOnceMessage.message)[0]
                    delete message.message.viewOnceMessage.message[vtype].viewOnce
                    message.message = proto.Message.fromObject(
                        JSON.parse(JSON.stringify(message.message.viewOnceMessage.message))
                    )
                    message.message[vtype].contextInfo = message.message.viewOnceMessage.contextInfo
                }
                let mtype = Object.keys(message.message)[0]
                let m = generateForwardMessageContent(message, !!forwardingScore)
                let ctype = Object.keys(m)[0]
                if (forwardingScore && typeof forwardingScore === 'number' && forwardingScore > 1) m[ctype].contextInfo.forwardingScore += forwardingScore
                m[ctype].contextInfo = {
                    ...(message.message[mtype].contextInfo || {}),
                    ...(m[ctype].contextInfo || {})
                }
                m = generateWAMessageFromContent(jid, m, {
                    ...options,
                    userJid: conn.user.jid
                })
                await conn.relayMessage(jid, m.message, { messageId: m.key.id, additionalAttributes: { ...options } })
                return m
            },
            enumerable: true
        },
        fakeReply: {
            /**
             * Fake Replies
             * @param {String} jid
             * @param {String|Object} text
             * @param {String} fakeJid
             * @param {String} fakeText
             * @param {String} fakeGroupJid
             * @param {String} options
             */
            value(jid, text = '', fakeJid = this.user.jid, fakeText = '', fakeGroupJid, options) {
                return conn.reply(jid, text, { key: { fromMe: areJidsSameUser(fakeJid, conn.user.id), participant: fakeJid, ...(fakeGroupJid ? { remoteJid: fakeGroupJid } : {}) }, message: { conversation: fakeText }, ...options })
            }
        },
        downloadM: {
            /**
             * Download media message
             * @param {Object} m
             * @param {String} type
             * @param {fs.PathLike | fs.promises.FileHandle} saveToFile
             * @returns {Promise<fs.PathLike | fs.promises.FileHandle | Buffer>}
             */
            async value(m, type, saveToFile) {
                let filename
                if (!m || !(m.url || m.directPath)) return Buffer.alloc(0)
                const stream = await downloadContentFromMessage(m, type)
                let buffer = Buffer.from([])
                for await (const chunk of stream) {
                    buffer = Buffer.concat([buffer, chunk])
                }
                if (saveToFile) ({ filename } = await conn.getFile(buffer, true))
                return saveToFile && fs.existsSync(filename) ? filename : buffer
            },
            enumerable: true
        },
        parseMention: {
            /**
             * Parses string into mentionedJid(s)
             * @param {String} text
             * @returns {Array<String>}
             */
            value(text = '') {
                return [...text.matchAll(/@([0-9]{5,16}|0)/g)].map(v => v[1] + '@s.whatsapp.net')
            },
            enumerable: true
        },
        getName: {
            /**
             * Get name from jid
             * @param {String} jid
             * @param {Boolean} withoutContact
             */
            value(jid = '', withoutContact = false) {
                jid = conn.decodeJid(jid)
                withoutContact = conn.withoutContact || withoutContact
           let v
if (jid.endsWith('@g.us')) return new Promise(async (resolve) => {
    v = conn.chats[jid] || {}
  if (!(v.name || v.subject)) {
  if (jid.endsWith('@g.us')) {
    v = {} // evitar groupMetadata si ya hay rate-limit
  } else {
    try {
      v = await conn.groupMetadata(jid) || {}
    } catch (e) {
      console.warn('[ERROR] groupMetadata:', e?.message || e)
      v = {}
    }
  }
}


    resolve(v.name || v.subject || PhoneNumber('+' + jid.replace('@s.whatsapp.net', '')).getNumber('international'))
})

                else v = jid === '0@s.whatsapp.net' ? {
                    jid,
                    vname: 'WhatsApp'
                } : areJidsSameUser(jid, conn.user.id) ?
                    conn.user :
                    (conn.chats[jid] || {})
                return (withoutContact ? '' : v.name) || v.subject || v.vname || v.notify || v.verifiedName || PhoneNumber('+' + jid.replace('@s.whatsapp.net', '')).getNumber('international')
            },
            enumerable: true
        },
        loadMessage: {
            /**
             * 
             * @param {String} messageID 
             * @returns {import('@whiskeysockets/baileys').proto.WebMessageInfo}
             */
            value(messageID) {
                return Object.entries(conn.chats)
                    .filter(([_, { messages }]) => typeof messages === 'object')
                    .find(([_, { messages }]) => Object.entries(messages)
                        .find(([k, v]) => (k === messageID || v.key?.id === messageID)))
                    ?.[1].messages?.[messageID]
            },
            enumerable: true
        },
        sendGroupV4Invite: {
            /**
             * sendGroupV4Invite
             * @param {String} jid 
             * @param {*} participant 
             * @param {String} inviteCode 
             * @param {Number} inviteExpiration 
             * @param {String} groupName 
             * @param {String} caption 
             * @param {Buffer} jpegThumbnail
             * @param {*} options 
             */
            async value(jid, participant, inviteCode, inviteExpiration, groupName = 'unknown subject', caption = 'Invitation to join my WhatsApp group', jpegThumbnail, options = {}) {
                const msg = proto.Message.fromObject({
                    groupInviteMessage: proto.GroupInviteMessage.fromObject({
                        inviteCode,
                        inviteExpiration: parseInt(inviteExpiration) || + new Date(new Date + (3 * 86400000)),
                        groupJid: jid,
                        groupName: (groupName || '').toString().trim() || 'Grupo',

                        jpegThumbnail: Buffer.isBuffer(jpegThumbnail) ? jpegThumbnail : null,
                        caption
                    })
                })
                const message = generateWAMessageFromContent(participant, msg, options)
                await conn.relayMessage(participant, message.message, { messageId: message.key.id, additionalAttributes: { ...options } })
                return message
            },
            enumerable: true
        },
        processMessageStubType: {
            /**
             * to process MessageStubType
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} m 
             */
            async value(m) {
                if (!m.messageStubType) return
                const chat = conn.decodeJid(m.key.remoteJid || m.message?.senderKeyDistributionMessage?.groupId || '')
                if (!chat || chat === 'status@broadcast') return
                const emitGroupUpdate = (update) => {
                    ev.emit('groups.update', [{ id: chat, ...update }])
                }
                switch (m.messageStubType) {
                    case proto.WebMessageInfo.StubType.REVOKE:
                    case proto.WebMessageInfo.StubType.GROUP_CHANGE_INVITE_LINK:
                        emitGroupUpdate({ revoke: m.messageStubParameters[0] })
                        break
                    case proto.WebMessageInfo.StubType.GROUP_CHANGE_ICON:
                        emitGroupUpdate({ icon: m.messageStubParameters[0] })
                        break
                    default: {
                        console.log({
                            messageStubType: m.messageStubType,
                            messageStubParameters: m.messageStubParameters,
                            type: proto.WebMessageInfo.StubType[m.messageStubType]
                        })
                        break
                    }
                }
                const isGroup = chat.endsWith('@g.us')
                if (!isGroup) return
                let chats = conn.chats[chat]
                if (!chats) chats = conn.chats[chat] = { id: chat }
                chats.isChats = true
                const metadata = await conn.groupMetadata(chat).catch(_ => null)
                if (!metadata) return
                chats.subject = metadata.subject
                chats.metadata = metadata
            }
        },
        insertAllGroup: {
            async value() {
                const groups = await conn.groupFetchAllParticipating().catch(_ => null) || {}
                for (const group in groups) conn.chats[group] = { ...(conn.chats[group] || {}), id: group, subject: groups[group].subject, isChats: true, metadata: groups[group] }
                return conn.chats
            },
        },
        pushMessage: {
            /**
             * pushMessage
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo[]} m 
             */
            async value(m) {
                if (!m) return
                if (!Array.isArray(m)) m = [m]
                for (const message of m) {
                    try {
                        // if (!(message instanceof proto.WebMessageInfo)) continue // https://github.com/adiwajshing/Baileys/pull/696/commits/6a2cb5a4139d8eb0a75c4c4ea7ed52adc0aec20f
                        if (!message) continue
                        if (message.messageStubType && message.messageStubType != proto.WebMessageInfo.StubType.CIPHERTEXT) conn.processMessageStubType(message).catch(console.error)
                        const _mtype = Object.keys(message.message || {})
                        const mtype = (!['senderKeyDistributionMessage', 'messageContextInfo'].includes(_mtype[0]) && _mtype[0]) ||
                            (_mtype.length >= 3 && _mtype[1] !== 'messageContextInfo' && _mtype[1]) ||
                            _mtype[_mtype.length - 1]
                        const chat = conn.decodeJid(message.key.remoteJid || message.message?.senderKeyDistributionMessage?.groupId || '')
                        if (message.message?.[mtype]?.contextInfo?.quotedMessage) {
                            /**
                             * @type {import('@whiskeysockets/baileys').proto.IContextInfo}
                             */
                            let context = message.message[mtype].contextInfo
                            let participant = conn.decodeJid(context.participant)
                            const remoteJid = conn.decodeJid(context.remoteJid || participant)
                            /**
                             * @type {import('@whiskeysockets/baileys').proto.IMessage}
                             * 
                             */
                            let quoted = message.message[mtype].contextInfo.quotedMessage
                            if ((remoteJid && remoteJid !== 'status@broadcast') && quoted) {
                                let qMtype = Object.keys(quoted)[0]
                                if (qMtype == 'conversation') {
                                    quoted.extendedTextMessage = { text: quoted[qMtype] }
                                    delete quoted.conversation
                                    qMtype = 'extendedTextMessage'
                                }
                                if (!quoted[qMtype].contextInfo) quoted[qMtype].contextInfo = {}
                                quoted[qMtype].contextInfo.mentionedJid = context.mentionedJid || quoted[qMtype].contextInfo.mentionedJid || []
                                const isGroup = remoteJid.endsWith('g.us')
                                if (isGroup && !participant) participant = remoteJid
                                const qM = {
                                    key: {
                                        remoteJid,
                                        fromMe: areJidsSameUser(conn.user.jid, remoteJid),
                                        id: context.stanzaId,
                                        participant,
                                    },
                                    message: JSON.parse(JSON.stringify(quoted)),
                                    ...(isGroup ? { participant } : {})
                                }
                                let qChats = conn.chats[participant]
                                if (!qChats) qChats = conn.chats[participant] = { id: participant, isChats: !isGroup }
                                if (!qChats.messages) qChats.messages = {}
                                if (!qChats.messages[context.stanzaId] && !qM.key.fromMe) qChats.messages[context.stanzaId] = qM
                                let qChatsMessages
                                if ((qChatsMessages = Object.entries(qChats.messages)).length > 40) qChats.messages = Object.fromEntries(qChatsMessages.slice(30, qChatsMessages.length)) // maybe avoid memory leak
                            }
                        }
                        if (!chat || chat === 'status@broadcast') continue
                        const isGroup = chat.endsWith('@g.us')
                        let chats = conn.chats[chat]
                        if (!chats) {
                            if (isGroup) await conn.insertAllGroup().catch(console.error)
                            chats = conn.chats[chat] = { id: chat, isChats: true, ...(conn.chats[chat] || {}) }
                        }
                        let metadata, sender
                        if (isGroup) {
                            if (!chats.subject || !chats.metadata) {
                                metadata = await conn.groupMetadata(chat).catch(_ => ({})) || {}
                                if (!chats.subject) chats.subject = metadata.subject || ''
                                if (!chats.metadata) chats.metadata = metadata
                            }
                            sender = conn.decodeJid(message.key?.fromMe && conn.user.id || message.participant || message.key?.participant || chat || '')
                            if (sender !== chat) {
                                let chats = conn.chats[sender]
                                if (!chats) chats = conn.chats[sender] = { id: sender }
                                if (!chats.name) chats.name = message.pushName || chats.name || ''
                            }
                        } else if (!chats.name) chats.name = message.pushName || chats.name || ''
                        if (['senderKeyDistributionMessage', 'messageContextInfo'].includes(mtype)) continue
                        chats.isChats = true
                        if (!chats.messages) chats.messages = {}
                        const fromMe = message.key.fromMe || areJidsSameUser(sender || chat, conn.user.id)
                        if (!['protocolMessage'].includes(mtype) && !fromMe && message.messageStubType != proto.WebMessageInfo.StubType.CIPHERTEXT && message.message) {
                            delete message.message.messageContextInfo
                            delete message.message.senderKeyDistributionMessage
                            chats.messages[message.key.id] = JSON.parse(JSON.stringify(message, null, 2))
                            let chatsMessages
                            if ((chatsMessages = Object.entries(chats.messages)).length > 40) chats.messages = Object.fromEntries(chatsMessages.slice(30, chatsMessages.length))
                        }
                    } catch (e) {
                        console.error(e)
                    }
                }
            }
        },
        serializeM: {
            /**
             * Serialize Message, so it easier to manipulate
             * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} m
             */
            value(m) {
                return smsg(conn, m)
            }
        },
        ...(typeof conn.chatRead !== 'function' ? {
            chatRead: {
                /**
                 * Read message
                 * @param {String} jid 
                 * @param {String|undefined|null} participant 
                 * @param {String} messageID 
                 */
                value(jid, participant = conn.user.jid, messageID) {
                    return conn.sendReadReceipt(jid, participant, [messageID])
                },
                enumerable: true
            }
        } : {}),
        ...(typeof conn.setStatus !== 'function' ? {
            setStatus: {
                /**
                 * setStatus bot
                 * @param {String} status 
                 */
                value(status) {
                    return conn.query({
                        tag: 'iq',
                        attrs: {
                            to: S_WHATSAPP_NET,
                            type: 'set',
                            xmlns: 'status',
                        },
                        content: [
                            {
                                tag: 'status',
                                attrs: {},
                                content: Buffer.from(status, 'utf-8')
                            }
                        ]
                    })
                },
                enumerable: true
            }
        } : {})
    })
    if (sock.user?.id) sock.user.jid = sock.decodeJid(sock.user.id)
    store.bind(sock)
    return sock
}
/**
 * Serialize Message
 * @param {ReturnType<typeof makeWASocket>} conn 
 * @param {import('@whiskeysockets/baileys').proto.WebMessageInfo} m 
 * @param {Boolean} hasParent 
 */
export function smsg(conn, m, hasParent) {
    if (!m) return m
    /**
     * @type {import('@whiskeysockets/baileys').proto.WebMessageInfo}
     */
    let M = proto.WebMessageInfo
    m = M.fromObject(m)
    m.conn = conn
    let protocolMessageKey
    if (m.message) {
        if (m.mtype == 'protocolMessage' && m.msg.key) {
            protocolMessageKey = m.msg.key
            if (protocolMessageKey == 'status@broadcast') protocolMessageKey.remoteJid = m.chat
            if (!protocolMessageKey.participant || protocolMessageKey.participant == 'status_me') protocolMessageKey.participant = m.sender
            protocolMessageKey.fromMe = conn.decodeJid(protocolMessageKey.participant) === conn.decodeJid(conn.user.id)
            if (!protocolMessageKey.fromMe && protocolMessageKey.remoteJid === conn.decodeJid(conn.user.id)) protocolMessageKey.remoteJid = m.sender
        }
        if (m.quoted) if (!m.quoted.mediaMessage) delete m.quoted.download
    }
    if (!m.mediaMessage) delete m.download

    try {
        if (protocolMessageKey && m.mtype == 'protocolMessage') conn.ev.emit('message.delete', protocolMessageKey)
    } catch (e) {
        console.error(e)
    }
    return m
}

// https://github.com/Nurutomo/wabot-aq/issues/490
export function serialize() {
    const MediaType = ['imageMessage', 'videoMessage', 'audioMessage', 'stickerMessage', 'documentMessage']
    return Object.defineProperties(proto.WebMessageInfo.prototype, {
        conn: {
            value: undefined,
            enumerable: false,
            writable: true
        },
        id: {
            get() {
                return this.key?.id
            }
        },
        isBaileys: {
            get() {
                return this.id?.length === 16 || this.id?.startsWith('3EB0') && this.id?.length === 12 || false
            }
        },
        chat: {
            get() {
                const senderKeyDistributionMessage = this.message?.senderKeyDistributionMessage?.groupId
                return (
                    this.key?.remoteJid ||
                    (senderKeyDistributionMessage &&
                        senderKeyDistributionMessage !== 'status@broadcast'
                    ) || ''
                ).decodeJid()
            }
        },
        isGroup: {
            get() {
                return this.chat.endsWith('@g.us')
            },
            enumerable: true
        },
        sender: {
    get() {
        const rawSender = this.conn?.decodeJid(
            this.key?.fromMe && this.conn?.user.id ||
            this.participant ||
            this.key.participant ||
            this.chat || ''
        )
        return rawSender ? rawSender.replace(/:\d+/, '') : rawSender
    },
    enumerable: true
},
        fromMe: {
            get() {
                return this.key?.fromMe || areJidsSameUser(this.conn?.user.id, this.sender) || false
            }
        },
        mtype: {
            get() {
                if (!this.message) return ''
                const type = Object.keys(this.message)
                return (!['senderKeyDistributionMessage', 'messageContextInfo'].includes(type[0]) && type[0]) || // Sometimes message in the front
                    (type.length >= 3 && type[1] !== 'messageContextInfo' && type[1]) || // Sometimes message in midle if mtype length is greater than or equal to 3
                    type[type.length - 1] // common case
            },
            enumerable: true
        },
        msg: {
            get() {
                if (!this.message) return null
                return this.message[this.mtype]
            }
        },
        mediaMessage: {
            get() {
                if (!this.message) return null
                const Message = ((this.msg?.url || this.msg?.directPath) ? { ...this.message } : extractMessageContent(this.message)) || null
                if (!Message) return null
                const mtype = Object.keys(Message)[0]
                return MediaType.includes(mtype) ? Message : null
            },
            enumerable: true
        },
        mediaType: {
            get() {
                let message
                if (!(message = this.mediaMessage)) return null
                return Object.keys(message)[0]
            },
            enumerable: true,
        },
        quoted: {
            get() {
                /**
                 * @type {ReturnType<typeof makeWASocket>}
                 */
                const self = this
                const msg = self.msg
                const contextInfo = msg?.contextInfo
                const quoted = contextInfo?.quotedMessage
                if (!msg || !contextInfo || !quoted) return null
                const type = Object.keys(quoted)[0]
                let q = quoted[type]
                const text = typeof q === 'string' ? q : q.text
                return Object.defineProperties(JSON.parse(JSON.stringify(typeof q === 'string' ? { text: q } : q)), {
                    mtype: {
                        get() {
                            return type
                        },
                        enumerable: true
                    },
                    mediaMessage: {
                        get() {
                            const Message = ((q.url || q.directPath) ? { ...quoted } : extractMessageContent(quoted)) || null
                            if (!Message) return null
                            const mtype = Object.keys(Message)[0]
                            return MediaType.includes(mtype) ? Message : null
                        },
                        enumerable: true
                    },
                    mediaType: {
                        get() {
                            let message
                            if (!(message = this.mediaMessage)) return null
                            return Object.keys(message)[0]
                        },
                        enumerable: true,
                    },
                    id: {
                        get() {
                            return contextInfo.stanzaId
                        },
                        enumerable: true
                    },
                    chat: {
                        get() {
                            return contextInfo.remoteJid || self.chat
                        },
                        enumerable: true
                    },
                    isBaileys: {
                        get() {
                            return this.id?.length === 16 || this.id?.startsWith('3EB0') && this.id.length === 12 || false
                        },
                        enumerable: true
                    },
                    sender: {
                        get() {
                            return (contextInfo.participant || this.chat || '').decodeJid()
                        },
                        enumerable: true
                    },
                    fromMe: {
                        get() {
                            return areJidsSameUser(this.sender, self.conn?.user.jid)
                        },
                        enumerable: true,
                    },
                    text: {
                        get() {
                            return text || this.caption || this.contentText || this.selectedDisplayText || ''
                        },
                        enumerable: true
                    },
                    mentionedJid: {
                        get() {
                            return q.contextInfo?.mentionedJid || self.getQuotedObj()?.mentionedJid || []
                        },
                        enumerable: true
                    },
                    name: {
                        get() {
                            const sender = this.sender
                            return sender ? self.conn?.getName(sender) : null
                        },
                        enumerable: true

                    },
                    vM: {
                        get() {
                            return proto.WebMessageInfo.fromObject({
                                key: {
                                    fromMe: this.fromMe,
                                    remoteJid: this.chat,
                                    id: this.id
                                },
                                message: quoted,
                                ...(self.isGroup ? { participant: this.sender } : {})
                            })
                        }
                    },
                    fakeObj: {
                        get() {
                            return this.vM
                        }
                    },
                    download: {
    value(saveToFile = false) {
        const mtype = this.mediaType
        if (!mtype || !this.mediaMessage || !this.mediaMessage[mtype]) return null
        return this.conn?.downloadM(this.mediaMessage[mtype], mtype.replace(/message/i, ''), saveToFile)
    },
    enumerable: true,
    configurable: true
},
                    reply: {
                        /**
                         * Reply to quoted message
                         * @param {String|Object} text
                         * @param {String|false} chatId
                         * @param {Object} options
                         */
                        value(text, chatId, options) {
                            return self.conn?.reply(chatId ? chatId : this.chat, text, this.vM, options)
                        },
                        enumerable: true,
                    },
                    copy: {
                        /**
                         * Copy quoted message
                         */
                        value() {
                            const M = proto.WebMessageInfo
                            return smsg(conn, M.fromObject(M.toObject(this.vM)))
                        },
                        enumerable: true,
                    },
                    forward: {
                        /**
                         * Forward quoted message
                         * @param {String} jid
                         *  @param {Boolean} forceForward
                         */
                        value(jid, force = false, options) {
                            return self.conn?.sendMessage(jid, {
                                forward: this.vM, force, ...options
                            }, { ...options })
                        },
                        enumerable: true,
                    },
                    copyNForward: {
                        /**
                         * Exact Forward quoted message
                         * @param {String} jid
                         * @param {Boolean|Number} forceForward
                         * @param {Object} options
                         */
                        value(jid, forceForward = false, options) {
                            return self.conn?.copyNForward(jid, this.vM, forceForward, options)
                        },
                        enumerable: true,

                    },
                    cMod: {
                        /**
                         * Modify quoted Message
                         * @param {String} jid
                         * @param {String} text
                         * @param {String} sender
                         * @param {Object} options
                         */
                        value(jid, text = '', sender = this.sender, options = {}) {
                            return self.conn?.cMod(jid, this.vM, text, sender, options)
                        },
                        enumerable: true,

                    },
                    delete: {
                        /**
                         * Delete quoted message
                         */
                        value() {
                            return self.conn?.sendMessage(this.chat, { delete: this.vM.key })
                        },
                        enumerable: true,

                    }
                })
            },
            enumerable: true
        },
        _text: {
            value: null,
            writable: true,
        },
        text: {
            get() {
                const msg = this.msg
                const text = (typeof msg === 'string' ? msg : msg?.text) || msg?.caption || msg?.contentText || ''
                return typeof this._text === 'string' ? this._text : '' || (typeof text === 'string' ? text : (
                    text?.selectedDisplayText ||
                    text?.hydratedTemplate?.hydratedContentText ||
                    text
                )) || ''
            },
            set(str) {
                return this._text = str
            },
            enumerable: true
        },
        mentionedJid: {
            get() {
                return this.msg?.contextInfo?.mentionedJid?.length && this.msg.contextInfo.mentionedJid || []
            },
            enumerable: true
        },
        name: {
            get() {
                return !nullish(this.pushName) && this.pushName || this.conn?.getName(this.sender)
            },
            enumerable: true
        },
  download: {
    async value(saveToFile = false) {
        const msg = this.message || {}
        const mtype =
            msg.imageMessage ? 'image' :
            msg.videoMessage ? 'video' :
            msg.audioMessage ? 'audio' :
            msg.documentMessage ? 'document' : null

        if (!mtype) return null

        try {
            const stream = await downloadContentFromMessage(msg[`${mtype}Message`], mtype)
            let buffer = Buffer.from([])
            for await (const chunk of stream) {
                buffer = Buffer.concat([buffer, chunk])
            }
            if (saveToFile) {
                const filePath = `./tmp-${Date.now()}.${mtype}`
                await fs.promises.writeFile(filePath, buffer)
                return filePath
            }
            return buffer
        } catch (err) {
            console.error('‚ùå Error al descargar mensaje:', err)
            return null
        }
    },
    enumerable: true,
    configurable: true
},
reply: {
    async value(text, chatId, options) {
        const conn = global.conn || globalThis.conn // Asegura referencia
        if (!conn) throw new Error('‚ùå Conexi√≥n no encontrada (conn)')
        return await conn.reply(chatId || this.chat, text, this, options)
    },
    enumerable: true,
    configurable: true
},
        copy: {
            value() {
                const M = proto.WebMessageInfo
                return smsg(this.conn, M.fromObject(M.toObject(this)))
            },
            enumerable: true
        },
        forward: {
            value(jid, force = false, options = {}) {
                return this.conn?.sendMessage(jid, {
                    forward: this, force, ...options
                }, { ...options })
            },
            enumerable: true
        },
        copyNForward: {
            value(jid, forceForward = false, options = {}) {
                return this.conn?.copyNForward(jid, this, forceForward, options)
            },
            enumerable: true
        },
        cMod: {
            value(jid, text = '', sender = this.sender, options = {}) {
                return this.conn?.cMod(jid, this, text, sender, options)
            },
            enumerable: true
        },
        getQuotedObj: {
            value() {
                if (!this.quoted.id) return null
                const q = proto.WebMessageInfo.fromObject(this.conn?.loadMessage(this.quoted.id) || this.quoted.vM)
                return smsg(this.conn, q)
            },
            enumerable: true
        },
        getQuotedMessage: {
            get() {
                return this.getQuotedObj
            }
        },
        delete: {
            value() {
                return this.conn?.sendMessage(this.chat, { delete: this.key })
            },
            enumerable: true
        }
    })
}

export function logic(check, inp, out) {
    if (inp.length !== out.length) throw new Error('Input and Output must have same length')
    for (let i in inp) if (util.isDeepStrictEqual(check, inp[i])) return out[i]
    return null
}

export function protoType() {
    Buffer.prototype.toArrayBuffer = function toArrayBufferV2() {
        const ab = new ArrayBuffer(this.length);
        const view = new Uint8Array(ab);
        for (let i = 0; i < this.length; ++i) {
            view[i] = this[i];
        }
        return ab;
    }
    /**
     * @returns {ArrayBuffer}
     */
    Buffer.prototype.toArrayBufferV2 = function toArrayBuffer() {
        return this.buffer.slice(this.byteOffset, this.byteOffset + this.byteLength)
    }
    /**
     * @returns {Buffer}
     */
    ArrayBuffer.prototype.toBuffer = function toBuffer() {
        return Buffer.from(new Uint8Array(this))
    }
    // /**
    //  * @returns {String}
    //  */
    // Buffer.prototype.toUtilFormat = ArrayBuffer.prototype.toUtilFormat = Object.prototype.toUtilFormat = Array.prototype.toUtilFormat = function toUtilFormat() {
    //     return util.format(this)
    // }
    Uint8Array.prototype.getFileType = ArrayBuffer.prototype.getFileType = Buffer.prototype.getFileType = async function getFileType() {
        return await fileTypeFromBuffer(this)
    }
    /**
     * @returns {Boolean}
     */
    String.prototype.isNumber = Number.prototype.isNumber = isNumber
    /**
     * 
     * @returns {String}
     */
    String.prototype.capitalize = function capitalize() {
        return this.charAt(0).toUpperCase() + this.slice(1, this.length)
    }
    /**
     * @returns {String}
     */
    String.prototype.capitalizeV2 = function capitalizeV2() {
        const str = this.split(' ')
        return str.map(v => v.capitalize()).join(' ')
    }
    String.prototype.decodeJid = function decodeJid() {
        if (/:\d+@/gi.test(this)) {
            const decode = jidDecode(this) || {}
            return (decode.user && decode.server && decode.user + '@' + decode.server || this).trim()
        } else return this.trim()
    }
    /**
     * number must be milliseconds
     * @returns {string}
     */
    Number.prototype.toTimeString = function toTimeString() {
        // const milliseconds = this % 1000
        const seconds = Math.floor((this / 1000) % 60)
        const minutes = Math.floor((this / (60 * 1000)) % 60)
        const hours = Math.floor((this / (60 * 60 * 1000)) % 24)
        const days = Math.floor((this / (24 * 60 * 60 * 1000)))
        return (
            (days ? `${days} day(s) ` : '') +
            (hours ? `${hours} hour(s) ` : '') +
            (minutes ? `${minutes} minute(s) ` : '') +
            (seconds ? `${seconds} second(s)` : '')
        ).trim()
    }
    Number.prototype.getRandom = String.prototype.getRandom = Array.prototype.getRandom = getRandom
}


function isNumber() {
    const int = parseInt(this)
    return typeof int === 'number' && !isNaN(int)
}

function getRandom() {
    if (Array.isArray(this) || this instanceof String) return this[Math.floor(Math.random() * this.length)]
    return Math.floor(Math.random() * this)
}


/**
 * ??
 * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator
 * @returns {boolean}
 */
function nullish(args) {
    return !(args !== null && args !== undefined)
}

//----- FIN DEL ARCHIVO: ./lib/simple.js -----//



//----- INICIO DEL ARCHIVO: ./lib/sticker.js -----//

import { dirname } from 'path'
import { fileURLToPath } from 'url'
import * as fs from 'fs'
import * as path from 'path'
import * as  crypto from 'crypto'
import { ffmpeg } from './converter.js'
import fluent_ffmpeg from 'fluent-ffmpeg'
import { spawn } from 'child_process'
import uploadFile from './uploadFile.js'
import uploadImage from './uploadImage.js'
import { fileTypeFromBuffer } from 'file-type'
import webp from 'node-webpmux'
import fetch from 'node-fetch'

const __dirname = dirname(fileURLToPath(import.meta.url))
const tmp = path.join(__dirname, '../tmp')
/**
 * Image to Sticker
 * @param {Buffer} img Image Buffer
 * @param {String} url Image URL
 */
function sticker2(img, url) {
  return new Promise(async (resolve, reject) => {
    try {
      if (url) {
        let res = await fetch(url)
        if (res.status !== 200) throw await res.text()
        img = await res.buffer()
      }
      let inp = path.join(tmp, +new Date + '.jpeg')
      await fs.promises.writeFile(inp, img)
      let ff = spawn('ffmpeg', [
        '-y',
        '-i', inp,
        '-vf', 'scale=512:512:flags=lanczos:force_original_aspect_ratio=decrease,format=rgba,pad=512:512:(ow-iw)/2:(oh-ih)/2:color=#00000000,setsar=1',
        '-f', 'png',
        '-'
      ])
      ff.on('error', reject)
      ff.on('close', async () => {
        await fs.promises.unlink(inp)
      })
      let bufs = []
      const [_spawnprocess, ..._spawnargs] = [...(module.exports.support.gm ? ['gm'] : module.exports.magick ? ['magick'] : []), 'convert', 'png:-', 'webp:-']
      let im = spawn(_spawnprocess, _spawnargs)
      im.on('error', e => conn.reply(m.chat, util.format(e), m))
      im.stdout.on('data', chunk => bufs.push(chunk))
      ff.stdout.pipe(im.stdin)
      im.on('exit', () => {
        resolve(Buffer.concat(bufs))
      })
    } catch (e) {
      reject(e)
    }
  })
}

async function canvas(code, type = 'png', quality = 0.92) {
  let res = await fetch('https://nurutomo.herokuapp.com/api/canvas?' + queryURL({
    type,
    quality
  }), {
    method: 'POST',
    headers: {
      'Content-Type': 'text/plain',
      'Content-Length': code.length
    },
    body: code
  })
  let image = await res.buffer()
  return image
}

function queryURL(queries) {
  return new URLSearchParams(Object.entries(queries))
}

/**
 * Image to Sticker
 * @param {Buffer} img Image Buffer
 * @param {String} url Image URL
 */
async function sticker1(img, url) {
  url = url ? url : await uploadImage(img)
  let {
    mime
  } = url ? { mime: 'image/jpeg' } : await fileTypeFromBuffer(img)
  let sc = `let im = await loadImg('data:${mime};base64,'+(await window.loadToDataURI('${url}')))
c.width = c.height = 512
let max = Math.max(im.width, im.height)
let w = 512 * im.width / max
let h = 512 * im.height / max
ctx.drawImage(im, 256 - w / 2, 256 - h / 2, w, h)
`
  return await canvas(sc, 'webp')
}

/**
 * Image/Video to Sticker
 * @param {Buffer} img Image/Video Buffer
 * @param {String} url Image/Video URL
 * @param {String} packname EXIF Packname
 * @param {String} author EXIF Author
 */
async function sticker3(img, url, packname, author) {
  url = url ? url : await uploadFile(img)
  let res = await fetch('https://api.xteam.xyz/sticker/wm?' + new URLSearchParams(Object.entries({
    url,
    packname,
    author
  })))
  return await res.buffer()
}

/**
 * Image to Sticker
 * @param {Buffer} img Image/Video Buffer
 * @param {String} url Image/Video URL
 */
async function sticker4(img, url) {
  if (url) {
    let res = await fetch(url)
    if (res.status !== 200) throw await res.text()
    img = await res.buffer()
  }
  return await ffmpeg(img, [
    '-vf', 'scale=512:512:flags=lanczos:force_original_aspect_ratio=decrease,format=rgba,pad=512:512:(ow-iw)/2:(oh-ih)/2:color=#00000000,setsar=1'
  ], 'jpeg', 'webp')
}

async function sticker5(img, url, packname, author, categories = [''], extra = {}) {
  const { Sticker } = await import('wa-sticker-formatter')
  const stickerMetadata = {
    type: 'default',
    pack: packname,
    author,
    categories,
    ...extra
  }
  return (new Sticker(img ? img : url, stickerMetadata)).toBuffer()
}

/**
 * Convert using fluent-ffmpeg
 * @param {string} img 
 * @param {string} url 
 */
function sticker6(img, url) {
  return new Promise(async (resolve, reject) => {
    if (url) {
      let res = await fetch(url)
      if (res.status !== 200) throw await res.text()
      img = await res.buffer()
    }
    const type = await fileTypeFromBuffer(img) || {
      mime: 'application/octet-stream',
      ext: 'bin'
    }
    if (type.ext == 'bin') reject(img)
    const tmp = path.join(__dirname, `../tmp/${+ new Date()}.${type.ext}`)
    const out = path.join(tmp + '.webp')
    await fs.promises.writeFile(tmp, img)
    // https://github.com/MhankBarBar/termux-wabot/blob/main/index.js#L313#L368
    let Fffmpeg = /video/i.test(type.mime) ? fluent_ffmpeg(tmp).inputFormat(type.ext) : fluent_ffmpeg(tmp).input(tmp)
    Fffmpeg
      .on('error', function (err) {
        console.error(err)
        fs.promises.unlink(tmp)
        reject(img)
      })
      .on('end', async function () {
        fs.promises.unlink(tmp)
        resolve(await fs.promises.readFile(out))
      })
      .addOutputOptions([
        `-vcodec`, `libwebp`, `-vf`,
        `scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse`
      ])
      .toFormat('webp')
      .save(out)
  })
}
/**
 * Add WhatsApp JSON Exif Metadata
 * Taken from https://github.com/pedroslopez/whatsapp-web.js/pull/527/files
 * @param {Buffer} webpSticker 
 * @param {String} packname 
 * @param {String} author 
 * @param {String} categories 
 * @param {Object} extra 
 * @returns 
 */
async function addExif(webpSticker, packname, author, categories = [''], extra = {}) {
  const img = new webp.Image();
  const stickerPackId = crypto.randomBytes(32).toString('hex');
  const json = { 'sticker-pack-id': stickerPackId, 'sticker-pack-name': packname, 'sticker-pack-publisher': author, 'emojis': categories, ...extra };
  let exifAttr = Buffer.from([0x49, 0x49, 0x2A, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x41, 0x57, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00]);
  let jsonBuffer = Buffer.from(JSON.stringify(json), 'utf8');
  let exif = Buffer.concat([exifAttr, jsonBuffer]);
  exif.writeUIntLE(jsonBuffer.length, 14, 4);
  await img.load(webpSticker)
  img.exif = exif
  return await img.save(null)
}

/**
 * Image/Video to Sticker
 * @param {Buffer} img Image/Video Buffer
 * @param {String} url Image/Video URL
 * @param {...String} 
*/
async function sticker(img, url, ...args) {
  let lastError, stiker
  for (let func of [
    sticker3, global.support.ffmpeg && sticker6, sticker5,
    global.support.ffmpeg && global.support.ffmpegWebp && sticker4,
    global.support.ffmpeg && (global.support.convert || global.support.magick || global.support.gm) && sticker2,
    sticker1
  ].filter(f => f)) {
    try {
      stiker = await func(img, url, ...args)
      if (stiker.includes('html')) continue
      if (stiker.includes('WEBP')) {
        try {
          return await addExif(stiker, ...args)
        } catch (e) {
          console.error(e)
          return stiker
        }
      }
      throw stiker.toString()
    } catch (err) {
      lastError = err
      continue
    }
  }
  console.error(lastError)
  return lastError
}

const support = {
  ffmpeg: true,
  ffprobe: true,
  ffmpegWebp: true,
  convert: true,
  magick: false,
  gm: false,
  find: false
}

export {
  sticker,
  sticker1,
  sticker2,
  sticker3,
  sticker4,
  sticker6,
  addExif,
  support
}

//----- FIN DEL ARCHIVO: ./lib/sticker.js -----//



//----- INICIO DEL ARCHIVO: ./lib/store.js -----//

/**
 * @param {import('@whiskeysockets/baileys').WASocket | import('@whiskeysockets/baileys').WALegacySocket}
 */
function bind(conn) {
    if (!conn.chats) conn.chats = {}
    /**
     * 
     * @param {import('@whiskeysockets/baileys').Contact[]|{contacts:import('@whiskeysockets/baileys').Contact[]}} contacts 
     * @returns 
     */
    function updateNameToDb(contacts) {
        if (!contacts) return
        try {
            contacts = contacts.contacts || contacts
            for (const contact of contacts) {
                const id = conn.decodeJid(contact.id)
                if (!id || id === 'status@broadcast') continue
                let chats = conn.chats[id] 
                if (!chats) chats = conn.chats[id] = { ...contact, id }
                conn.chats[id] = {
                    ...chats,
                    ...({
                        ...contact, id, ...(id.endsWith('@g.us') ?
                            { subject: contact.subject || contact.name || chats.subject || '' } :
                            { name: contact.notify || contact.name || chats.name || chats.notify || '' })
                    } || {})
                }
            }
        } catch (e) {
            console.error(e)
        }
    }
    conn.ev.on('contacts.upsert', updateNameToDb)
    conn.ev.on('groups.update', updateNameToDb)
    conn.ev.on('contacts.set', updateNameToDb)
    conn.ev.on('chats.set', async ({ chats }) => {
        try {
            for (let { id, name, readOnly } of chats) {
                id = conn.decodeJid(id)
                if (!id || id === 'status@broadcast') continue
                const isGroup = id.endsWith('@g.us')
                let chats = conn.chats[id]
                if (!chats) chats = conn.chats[id] = { id }
                chats.isChats = !readOnly
                if (name) chats[isGroup ? 'subject' : 'name'] = name
                if (isGroup) {
                    const metadata = await conn.groupMetadata(id).catch(_ => null)
                    if (name || metadata?.subject) chats.subject = name || metadata.subject
                    if (!metadata) continue
                    chats.metadata = metadata
                }
            }
        } catch (e) {
            console.error(e)
        }
    })
    conn.ev.on('group-participants.update', async function updateParticipantsToDb({ id, participants, action }) {
        if (!id) return
        id = conn.decodeJid(id)
        if (id === 'status@broadcast') return
        if (!(id in conn.chats)) conn.chats[id] = { id }
        let chats = conn.chats[id]
        chats.isChats = true
        const groupMetadata = await conn.groupMetadata(id).catch(_ => null)
        if (!groupMetadata) return
        chats.subject = groupMetadata.subject
        chats.metadata = groupMetadata
    })

    conn.ev.on('groups.update', async function groupUpdatePushToDb(groupsUpdates) {
        try {
            for (const update of groupsUpdates) {
                const id = conn.decodeJid(update.id)
                if (!id || id === 'status@broadcast') continue
                const isGroup = id.endsWith('@g.us')
                if (!isGroup) continue
                let chats = conn.chats[id]
                if (!chats) chats = conn.chats[id] = { id }
                chats.isChats = true
                const metadata = await conn.groupMetadata(id).catch(_ => null)
                if (metadata) chats.metadata = metadata
                if (update.subject || metadata?.subject) chats.subject = update.subject || metadata.subject
            }
        } catch (e) {
            console.error(e)
        }
    })
    conn.ev.on('chats.upsert', function chatsUpsertPushToDb(chatsUpsert) {
        try {
            const { id, name } = chatsUpsert
            if (!id || id === 'status@broadcast') return
            conn.chats[id] = { ...(conn.chats[id] || {}), ...chatsUpsert, isChats: true }
            const isGroup = id.endsWith('@g.us')
            if (isGroup) conn.insertAllGroup().catch(_ => null)
        } catch (e) {
            console.error(e)
        }
    })
    conn.ev.on('presence.update', async function presenceUpdatePushToDb({ id, presences }) {
        try {
            const sender = Object.keys(presences)[0] || id
            const _sender = conn.decodeJid(sender)
            const presence = presences[sender]['lastKnownPresence'] || 'composing'
            let chats = conn.chats[_sender]
            if (!chats) chats = conn.chats[_sender] = { id: sender }
            chats.presences = presence
            if (id.endsWith('@g.us')) {
                let chats = conn.chats[id]
                if (!chats) chats = conn.chats[id] = { id }
            }
        } catch (e) {
            console.error(e)
        }
    })
}
export default {
    bind
}

//----- FIN DEL ARCHIVO: ./lib/store.js -----//



//----- INICIO DEL ARCHIVO: ./lib/tictactoe.js -----//

class TicTacToe {
    constructor(playerX = 'x', playerO = 'o') {
        this.playerX = playerX
        this.playerO = playerO
        this._currentTurn = false
        this._x = 0
        this._o = 0
        this.turns = 0
    }

    get board() {
        return this._x | this._o
    }

    get currentTurn() {
        return this._currentTurn ? this.playerO : this.playerX
    }

    get enemyTurn() {
        return this._currentTurn ? this.playerX : this.playerO
    }

    static check(state) {
        for (let combo of [7, 56, 73, 84, 146, 273, 292, 448])
            if ((state & combo) === combo)
                return !0
        return !1
    }

    /**
     * ```js
     * TicTacToe.toBinary(1, 2) // 0b010000000
     * ```
     */
    static toBinary(x = 0, y = 0) {
        if (x < 0 || x > 2 || y < 0 || y > 2) throw new Error('invalid position')
        return 1 << x + (3 * y)
    }

    /**
     * @param player `0` is `X`, `1` is `O`
     * 
     * - `-3` `Game Ended`
     * - `-2` `Invalid`
     * - `-1` `Invalid Position`
     * - ` 0` `Position Occupied`
     * - ` 1` `Sucess`
     * @returns {-3|-2|-1|0|1}
     */
    turn(player = 0, x = 0, y) {
        if (this.board === 511) return -3
        let pos = 0
        if (y == null) {
            if (x < 0 || x > 8) return -1
            pos = 1 << x
        } else {
            if (x < 0 || x > 2 || y < 0 || y > 2) return -1
            pos = TicTacToe.toBinary(x, y)
        }
        if (this._currentTurn ^ player) return -2
        if (this.board & pos) return 0
        this[this._currentTurn ? '_o' : '_x'] |= pos
        this._currentTurn = !this._currentTurn
        this.turns++
        return 1
    }

    /**
     * @returns {('X'|'O'|1|2|3|4|5|6|7|8|9)[]}
     */
    static render(boardX = 0, boardO = 0) {
        let x = parseInt(boardX.toString(2), 4)
        let y = parseInt(boardO.toString(2), 4) * 2
        return [...(x + y).toString(4).padStart(9, '0')].reverse().map((value, index) => value == 1 ? 'X' : value == 2 ? 'O' : ++index)
    }
    
    /**
     * @returns {('X'|'O'|1|2|3|4|5|6|7|8|9)[]}
     */
    render() {
        return TicTacToe.render(this._x, this._o)
    }

    get winner() {
        let x = TicTacToe.check(this._x)
        let o = TicTacToe.check(this._o)
        return x ? this.playerX : o ? this.playerO : false
    }
}

new TicTacToe().turn

export default TicTacToe
//----- FIN DEL ARCHIVO: ./lib/tictactoe.js -----//



//----- INICIO DEL ARCHIVO: ./lib/uploadFile.js -----//

import fetch from 'node-fetch'
import { FormData, Blob } from 'formdata-node'
import { fileTypeFromBuffer } from 'file-type'
/**
 * Upload epheremal file to file.io
 * `Expired in 1 day`
 * `100MB Max Filesize`
 * @param {Buffer} buffer File Buffer
 */
const fileIO = async buffer => {
  const { ext, mime } = await fileTypeFromBuffer(buffer) || {}
  let form = new FormData()
  const blob = new Blob([buffer.toArrayBuffer()], { type: mime })
  form.append('file', blob, 'tmp.' + ext)
  let res = await fetch('https://file.io/?expires=1d', { // 1 Day Expiry Date
    method: 'POST',
    body: form
  })
  let json = await res.json()
  if (!json.success) throw json
  return json.link
}

/**
 * Upload file to storage.restfulapi.my.id
 * @param {Buffer|ReadableStream|(Buffer|ReadableStream)[]} inp File Buffer/Stream or Array of them
 * @returns {string|null|(string|null)[]}
 */
const RESTfulAPI = async inp => {
  let form = new FormData()
  let buffers = inp
  if (!Array.isArray(inp)) buffers = [inp]
  for (let buffer of buffers) {
    const blob = new Blob([buffer.toArrayBuffer()])
    form.append('file', blob)
  }
  let res = await fetch('https://storage.restfulapi.my.id/upload', {
    method: 'POST',
    body: form
  })
  let json = await res.text()
  try {
    json = JSON.parse(json)
    if (!Array.isArray(inp)) return json.files[0].url
    return json.files.map(res => res.url)
  } catch (e) {
    throw json
  }
}

/**
 * 
 * @param {Buffer} inp 
 * @returns {Promise<string>}
 */
export default async function (inp) {
  let err = false
  for (let upload of [RESTfulAPI, fileIO]) {
    try {
      return await upload(inp)
    } catch (e) {
      err = e
    }
  }
  if (err) throw err
}
//----- FIN DEL ARCHIVO: ./lib/uploadFile.js -----//



//----- INICIO DEL ARCHIVO: ./lib/uploadImage.js -----//

import fetch from 'node-fetch';
import { FormData, Blob } from 'formdata-node';
import { fileTypeFromBuffer } from 'file-type'

/**
 * Upload image to telegra.ph
 * Supported mimetype:
 * - `image/jpeg`
 * - `image/jpg`
 * - `image/png`s
 * @param {Buffer} buffer Image Buffer
 * @return {Promise<string>}
 */
export default async buffer => {
  const { ext, mime } = await fileTypeFromBuffer(buffer)
  let form = new FormData()
  const blob = new Blob([buffer.toArrayBuffer()], { type: mime })
  form.append('file', blob, 'tmp.' + ext)
  let res = await fetch('https://telegra.ph/upload', {
    method: 'POST',
    body: form
  })
  let img = await res.json()
  if (img.error) throw img.error
  return 'https://telegra.ph' + img[0].src
}


//----- FIN DEL ARCHIVO: ./lib/uploadImage.js -----//



//----- INICIO DEL ARCHIVO: ./lib/webp.js -----//

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.constants = void 0;

var _fs2 = _interopRequireDefault(require("fs"));

var _util = require("util");

var _path = require("path");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function _classPrivateMethodGet(receiver, privateSet, fn) {
  if (!privateSet.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return fn;
}

const fs = {
  read: (0, _util.promisify)(_fs2.default.read),
  write: (0, _util.promisify)(_fs2.default.write),
  open: (0, _util.promisify)(_fs2.default.open),
  close: (0, _util.promisify)(_fs2.default.close)
};
const nullByte = Buffer.alloc(1);
nullByte[0] = 0;
const constants = {
  TYPE_LOSSY: 0,
  TYPE_LOSSLESS: 1,
  TYPE_EXTENDED: 2
};
exports.constants = constants;

function VP8Width(data) {
  let n = (data[7] << 8) | data[6];
  return n & 0b0011111111111111;
}

function VP8Height(data) {
  let n = (data[9] << 8) | data[8];
  return n & 0b0011111111111111;
}

function VP8LWidth(data) {
  let n = (data[2] << 8) | data[1];
  return (n & 0b0011111111111111) + 1;
}

function VP8LHeight(data) {
  let n = (data[4] << 16) | (data[3] << 8) | data[2];
  n = n >> 6;
  return (n & 0b0011111111111111) + 1;
}

function doesVP8LHaveAlpha(data) {
  return !!(data[4] & 0b00010000);
}

function createBasicChunk(name, data) {
  let chunk = Buffer.alloc(8),
    size = data.length,
    out;
  chunk.write(name, 0);
  chunk.writeUInt32LE(size, 4);
  out = [chunk, data];

  if (size & 1) {
    out[2] = nullByte;
  }

  return out;
}

var _convertToExtended = new WeakSet();

var _demuxFrame = new WeakSet();

var _readHeader = new WeakSet();

var _readChunkHeader = new WeakSet();

var _readChunkHeader_buf = new WeakSet();

var _readChunk_raw = new WeakSet();

var _readChunk_VP = new WeakSet();

var _readChunk_VP8_buf = new WeakSet();

var _readChunk_VP8L = new WeakSet();

var _readChunk_VP8L_buf = new WeakSet();

var _readChunk_VP8X = new WeakSet();

var _readChunk_ANIM = new WeakSet();

var _readChunk_ANMF = new WeakSet();

var _readChunk_ALPH = new WeakSet();

var _readChunk_ALPH_buf = new WeakSet();

var _readChunk_ICCP = new WeakSet();

var _readChunk_EXIF = new WeakSet();

var _readChunk_XMP = new WeakSet();

var _readChunk_Skip = new WeakSet();

var _read = new WeakSet();

class Image {
  constructor() {
    _read.add(this);

    _readChunk_Skip.add(this);

    _readChunk_XMP.add(this);

    _readChunk_EXIF.add(this);

    _readChunk_ICCP.add(this);

    _readChunk_ALPH_buf.add(this);

    _readChunk_ALPH.add(this);

    _readChunk_ANMF.add(this);

    _readChunk_ANIM.add(this);

    _readChunk_VP8X.add(this);

    _readChunk_VP8L_buf.add(this);

    _readChunk_VP8L.add(this);

    _readChunk_VP8_buf.add(this);

    _readChunk_VP.add(this);

    _readChunk_raw.add(this);

    _readChunkHeader_buf.add(this);

    _readChunkHeader.add(this);

    _readHeader.add(this);

    _demuxFrame.add(this);

    _convertToExtended.add(this);

    _defineProperty(this, "data", null);

    _defineProperty(this, "loaded", false);

    _defineProperty(this, "path", "");
  }

  clear() {
    this.data = null;
    this.path = "";
    this.loaded = false;
  }

  get width() {
    if (!this.loaded) {
      return undefined;
    }

    let d = this.data;
    return d.extended
      ? d.extended.width
      : d.vp8l
      ? d.vp8l.width
      : d.vp8
      ? d.vp8.width
      : undefined;
  }

  get height() {
    if (!this.loaded) {
      return undefined;
    }

    let d = this.data;
    return d.extended
      ? d.extended.height
      : d.vp8l
      ? d.vp8l.height
      : d.vp8
      ? d.vp8.height
      : undefined;
  }

  get type() {
    return this.loaded ? this.data.type : undefined;
  }

  get hasAnim() {
    return this.loaded
      ? this.data.extended
        ? this.data.extended.hasAnim
        : false
      : false;
  }

  get anim() {
    return this.hasAnim ? this.data.anim : undefined;
  }

  get frameCount() {
    return this.anim ? this.anim.frameCount : 0;
  }

  get iccp() {
    return this.data.extended
      ? this.data.extended.hasICCP
        ? this.data.iccp.raw
        : undefined
      : undefined;
  }

  set iccp(raw) {
    if (!this.data.extended) {
      _classPrivateMethodGet(
        this,
        _convertToExtended,
        _convertToExtended2
      ).call(this);
    }

    if (raw === undefined) {
      this.data.extended.hasICCP = false;
      delete this.data.iccp;
    } else {
      this.data.iccp = {
        raw
      };
      this.data.extended.hasICCP = true;
    }
  }

  get exif() {
    return this.data.extended
      ? this.data.extended.hasEXIF
        ? this.data.exif.raw
        : undefined
      : undefined;
  }

  set exif(raw) {
    if (!this.data.extended) {
      _classPrivateMethodGet(
        this,
        _convertToExtended,
        _convertToExtended2
      ).call(this);
    }

    if (raw === undefined) {
      this.data.extended.hasEXIF = false;
      delete this.data.exif;
    } else {
      this.data.exif = {
        raw
      };
      this.data.extended.hasEXIF = true;
    }
  }

  get xmp() {
    return this.data.extended
      ? this.data.extended.hasXMP
        ? this.data.xmp.raw
        : undefined
      : undefined;
  }

  set xmp(raw) {
    if (!this.data.extended) {
      _classPrivateMethodGet(
        this,
        _convertToExtended,
        _convertToExtended2
      ).call(this);
    }

    if (raw === undefined) {
      this.data.extended.hasXMP = false;
      delete this.data.xmp;
    } else {
      this.data.xmp = {
        raw
      };
      this.data.extended.hasXMP = true;
    }
  }

  load(path) {
    var _this = this;

    return _asyncToGenerator(function* () {
      _this.path = path;
      _this.data = yield _classPrivateMethodGet(_this, _read, _read2).call(
        _this,
        path
      );
      _this.loaded = true;
    })();
  }

  demuxAnim(path, frame = -1, prefix = "#FNAME#") {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      let start = 0,
        end = _this2.frameCount;

      if (end == 0) {
        throw new Error("This WebP isn't an animation");
      }

      if (frame != -1) {
        start = end = frame;
      }

      for (let i = start; i <= end; i++) {
        yield _classPrivateMethodGet(_this2, _demuxFrame, _demuxFrame2).call(
          _this2,
          `${path}/${prefix}_${i}.webp`.replace(
            /#FNAME#/g,
            (0, _path.basename)(_this2.path, ".webp")
          ),
          _this2.anim.frames[i]
        );
      }
    })();
  }

  replaceFrame(path, frame) {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      if (!_this3.hasAnim) {
        throw new Error("WebP isn't animated");
      }

      if (frame < 0 || frame >= _this3.frameCount) {
        throw new Error(
          `Frame index ${frame} out of bounds (0<=index<${_this3.frameCount})`
        );
      }

      let r = new Image();
      yield r.load(path);

      switch (r.type) {
        case constants.TYPE_LOSSY:
        case constants.TYPE_LOSSLESS:
          break;

        case constants.TYPE_EXTENDED:
          if (r.hasAnim) {
            throw new Error("Merging animations not currently supported");
          }

          break;

        default:
          throw new Error("Unknown WebP type");
      }

      switch (_this3.anim.frames[frame].type) {
        case constants.TYPE_LOSSY:
          if (_this3.anim.frames[frame].vp8.alpha) {
            delete _this3.anim.frames[frame].alph;
          }

          delete _this3.anim.frames[frame].vp8;
          break;

        case constants.TYPE_LOSSLESS:
          delete _this3.anim.frames[frame].vp8l;
          break;

        default:
          throw new Error("Unknown frame type");
      }

      switch (r.type) {
        case constants.TYPE_LOSSY:
          _this3.anim.frames[frame].vp8 = r.data.vp8;
          break;

        case constants.TYPE_LOSSLESS:
          _this3.anim.frames[frame].vp8l = r.data.vp8l;
          break;

        case constants.TYPE_EXTENDED:
          if (r.data.vp8) {
            _this3.anim.frames[frame].vp8 = r.data.vp8;

            if (r.data.vp8.alpha) {
              _this3.anim.frames[frame].alph = r.data.alph;
            }
          } else if (r.data.vp8l) {
            _this3.anim.frames[frame].vp8l = r.data.vp8l;
          }

          break;
      }

      _this3.anim.frames[frame].width = r.width;
      _this3.anim.frames[frame].height = r.height;
    })();
  }

  muxAnim({ path, bgColor = [255, 255, 255, 255], loops = 0 } = {}) {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      return Image.muxAnim({
        path,
        bgColor,
        loops,
        frames: _this4.frames
      });
    })();
  }

  static muxAnim({
    path,
    frames,
    width = 0,
    height = 0,
    bgColor = [255, 255, 255, 255],
    loops = 0,
    delay = 100,
    x = 0,
    y = 0,
    blend = true,
    dispose = false
  } = {}) {
    return _asyncToGenerator(function* () {
      let header = Buffer.alloc(12),
        chunk = Buffer.alloc(18),
        out = [],
        img,
        alpha = false,
        size,
        _w = 0,
        _h = 0;

      let _width = width - 1,
        _height = height - 1;

      if (frames.length == 0) {
        throw new Error("No frames to mux");
      } else if (_width <= 0 || _width > 1 << 24) {
        throw new Error("Width out of range");
      } else if (_height <= 0 || _height > 1 << 24) {
        throw new Error("Height out of range");
      } else if (_height * _width > Math.pow(2, 32) - 1) {
        throw new Error(`Width*height too large (${_width}, ${_height})`);
      } else if (loops < 0 || loops >= 1 << 24) {
        throw new Error("Loops out of range");
      } else if (delay < 0 || delay >= 1 << 24) {
        throw new Error("Delay out of range");
      } else if (x < 0 || x >= 1 << 24) {
        throw new Error("X out of range");
      } else if (y < 0 || y >= 1 << 24) {
        throw new Error("Y out of range");
      }

      header.write("RIFF", 0);
      header.write("WEBP", 8);
      chunk.write("VP8X", 0);
      chunk.writeUInt32LE(10, 4);
      chunk[8] |= 0b00000010;

      if (width != 0) {
        chunk.writeUIntLE(_width, 12, 3);
      }

      if (height != 0) {
        chunk.writeUIntLE(_height, 15, 3);
      }

      out.push(header, chunk);
      chunk = Buffer.alloc(14);
      chunk.write("ANIM", 0);
      chunk.writeUInt32LE(6, 4);
      chunk.writeUInt8(bgColor[2], 8);
      chunk.writeUInt8(bgColor[1], 9);
      chunk.writeUInt8(bgColor[0], 10);
      chunk.writeUInt8(bgColor[3], 11);
      chunk.writeUInt16LE(loops, 12);
      out.push(chunk);

      for (let i = 0, l = frames.length; i < l; i++) {
        let _delay =
            typeof frames[i].delay === "undefined" ? delay : frames[i].delay,
          _x = typeof frames[i].x === "undefined" ? x : frames[i].x,
          _y = typeof frames[i].y === "undefined" ? y : frames[i].y,
          _blend =
            typeof frames[i].blend === "undefined" ? blend : frames[i].blend,
          _dispose =
            typeof frames[i].dispose === "undefined"
              ? dispose
              : frames[i].dispose,
          size = 16,
          keepChunk = true,
          imgData;

        if (delay < 0 || delay >= 1 << 24) {
          throw new Error(`Delay out of range on frame ${i}`);
        } else if (x < 0 || x >= 1 << 24) {
          throw new Error(`X out of range on frame ${i}`);
        } else if (y < 0 || y >= 1 << 24) {
          throw new Error(`Y out of range on frame ${i}`);
        }

        chunk = Buffer.alloc(24);
        chunk.write("ANMF", 0);
        chunk.writeUIntLE(_x, 8, 3);
        chunk.writeUIntLE(_y, 11, 3);
        chunk.writeUIntLE(_delay, 20, 3);

        if (!_blend) {
          chunk[23] |= 0b00000010;
        }

        if (_dispose) {
          chunk[23] |= 0b00000001;
        }

        if (frames[i].path) {
          img = new Image();
          yield img.load(frames[i].path);
        } else {
          img = {
            data: frames[i]
          };
        }

        chunk.writeUIntLE(img.data.width - 1, 14, 3);
        chunk.writeUIntLE(img.data.height - 1, 17, 3);

        switch (img.data.type) {
          case constants.TYPE_LOSSY:
            {
              let c = img.data.vp8;
              _w = c.width > _w ? c.width : _w;
              _h = c.height > _h ? c.height : _h;
              size += c.raw.length + 8;
              imgData = createBasicChunk("VP8 ", c.raw);
            }
            break;

          case constants.TYPE_LOSSLESS:
            {
              let c = img.data.vp8l;
              _w = c.width > _w ? c.width : _w;
              _h = c.height > _h ? c.height : _h;
              size += c.raw.length + 8;

              if (c.alpha) {
                alpha = true;
              }

              imgData = createBasicChunk("VP8L", c.raw);
            }
            break;

          case constants.TYPE_EXTENDED:
            if (img.data.extended.hasAnim) {
              let fr = img.data.anim.frames;
              keepChunk = false;

              if (img.data.extended.hasAlpha) {
                alpha = true;
              }

              for (let i = 0, l = fr.length; i < l; i++) {
                _w = fr[i].width + _x > _w ? fr[i].width + _x : _w;
                _h = fr[i].height + _y > _h ? fr[i].height + _y : _h;
                let b = Buffer.alloc(8);
                b.write("ANMF", 0);
                b.writeUInt32LE(fr[i].raw.length, 4);
                out.push(b, fr[i].raw);

                if (fr[i].raw.length & 1) {
                  out.push(nullByte);
                }

                b = fr[i].raw;
                b.writeUIntLE(_x, 0, 3);
                b.writeUIntLE(_y, 3, 3);
                b.writeUIntLE(_delay, 12, 3);

                if (!_blend) {
                  b[15] |= 0b00000010;
                } else {
                  b[15] &= 0b11111101;
                }

                if (_dispose) {
                  b[15] |= 0b00000001;
                } else {
                  b[15] &= 0b11111110;
                }
              }
            } else {
              _w = img.data.extended.width > _w ? img.data.extended.width : _w;
              _h =
                img.data.extended.height > _h ? img.data.extended.height : _h;

              if (img.data.vp8) {
                imgData = [];

                if (img.data.alph) {
                  alpha = true;
                  imgData.push(...createBasicChunk("ALPH", img.data.alph.raw));
                  size += img.data.alph.raw.length + 8;
                }

                imgData.push(...createBasicChunk("VP8 ", img.data.vp8.raw));
                size += img.data.vp8.raw.length + 8;
              } else if (img.data.vp8l) {
                imgData = createBasicChunk("VP8L", img.data.vp8l.raw);

                if (img.data.vp8l.alpha) {
                  alpha = true;
                }

                size += img.data.vp8l.raw.length + 8;
              }
            }

            break;

          default:
            throw new Error("Unknown image type");
        }

        if (keepChunk) {
          chunk.writeUInt32LE(size, 4);
          out.push(chunk, ...imgData);
        }
      }

      if (width == 0) {
        out[1].writeUIntLE(_w - 1, 12, 3);
      }

      if (height == 0) {
        out[1].writeUIntLE(_h - 1, 15, 3);
      }

      size = 4;

      for (let i = 1, l = out.length; i < l; i++) {
        size += out[i].length;
      }

      header.writeUInt32LE(size, 4);

      if (alpha) {
        out[1][8] |= 0b00010000;
      }

      let fp = yield fs.open(path, "w");

      for (let i = 0, l = out.length; i < l; i++) {
        yield fs.write(fp, out[i], 0, undefined, undefined);
      }

      yield fs.close(fp);
    })();
  }
}

var _convertToExtended2 = function _convertToExtended2() {
  if (!this.loaded) {
    throw new Error("No image loaded");
  }

  this.data.type = constants.TYPE_EXTENDED;
  this.data.extended = {
    hasICC: false,
    hasAlpha: false,
    hasEXIF: false,
    hasXMP: false,
    width: this.vp8 ? this.vp8.width : this.vp8l ? this.vp8l.width : 1,
    height: this.vp8 ? this.vp8.height : this.vp8l ? this.vp8l.height : 1
  };
};

var _demuxFrame2 = /*#__PURE__*/ (function () {
  var _demuxFrame3 = _asyncToGenerator(function* (path, frame) {
    let header = Buffer.alloc(12),
      size,
      chunk,
      out = [];
    header.write("RIFF", 0);
    header.write("WEBP", 8);
    out.push(header);

    if (
      this.data.extended.hasICC ||
      this.data.extended.hasEXIF ||
      this.data.extended.hasXMP ||
      (frame.vp8 && frame.vp8.alpha)
    ) {
      chunk = Buffer.alloc(18);
      chunk.write("VP8X", 0);
      chunk.writeUInt32LE(10, 4);

      if (this.data.extended.hasICC) {
        chunk[8] |= 0b00100000;
      }

      if ((frame.vp8l && frame.vp8l.alpha) || (frame.vp8 && frame.vp8.alpha)) {
        chunk[8] |= 0b00010000;
      }

      if (this.data.extended.hasEXIF) {
        chunk[8] |= 0b00001000;
      }

      if (this.data.extended.hasXMP) {
        chunk[8] |= 0b00000100;
      }

      chunk.writeUIntLE(frame.width - 1, 12, 3);
      chunk.writeUIntLE(frame.height - 1, 15, 3);
      out.push(chunk);

      if (this.data.extended.hasICC) {
        out.push(...createBasicChunk("ICCP", this.data.extended.icc.raw));
      }
    }

    if (frame.vp8l) {
      out.push(...createBasicChunk("VP8L", frame.vp8l.raw));
    } else if (frame.vp8) {
      if (frame.vp8.alpha) {
        out.push(...createBasicChunk("ALPH", frame.alph.raw));
      }

      out.push(...createBasicChunk("VP8 ", frame.vp8.raw));
    } else {
      throw new Error("Frame has no VP8/VP8L?");
    }

    if (this.type == constants.TYPE_EXTENDED) {
      if (this.data.extended.hasEXIF) {
        out.push(...createBasicChunk("EXIF", this.data.extended.exif.raw));
      }

      if (this.data.extended.hasXMP) {
        out.push(...createBasicChunk("XMP ", this.data.extended.xmp.raw));
      }
    }

    size = 4;

    for (let i = 1, l = out.length; i < l; i++) {
      size += out[i].length;
    }

    header.writeUInt32LE(size, 4);
    let fp = yield fs.open(path, "w");

    for (let i = 0, l = out.length; i < l; i++) {
      yield fs.write(fp, out[i], 0, undefined, undefined);
    }

    yield fs.close(fp);
  });

  function _demuxFrame2(_x2, _x3) {
    return _demuxFrame3.apply(this, arguments);
  }

  return _demuxFrame2;
})();

var _readHeader2 = /*#__PURE__*/ (function () {
  var _readHeader3 = _asyncToGenerator(function* (fd) {
    let buf = Buffer.alloc(12);
    let { bytesRead } = yield fs.read(fd, buf, 0, 12, undefined);

    if (bytesRead != 12) {
      throw new Error("Reached end of file while reading header");
    }

    if (buf.toString("utf8", 0, 4) != "RIFF") {
      throw new Error("Bad header (not RIFF)");
    }

    if (buf.toString("utf8", 8, 12) != "WEBP") {
      throw new Error("Bad header (not WEBP)");
    }

    return {
      fileSize: buf.readUInt32LE(4)
    };
  });

  function _readHeader2(_x4) {
    return _readHeader3.apply(this, arguments);
  }

  return _readHeader2;
})();

var _readChunkHeader2 = /*#__PURE__*/ (function () {
  var _readChunkHeader3 = _asyncToGenerator(function* (fd) {
    let buf = Buffer.alloc(8);
    let { bytesRead } = yield fs.read(fd, buf, 0, 8, undefined);

    if (bytesRead == 0) {
      return {
        fourCC: "\x00\x00\x00\x00",
        size: 0
      };
    } else if (bytesRead < 8) {
      throw new Error("Reached end of file while reading chunk header");
    }

    return {
      fourCC: buf.toString("utf8", 0, 4),
      size: buf.readUInt32LE(4)
    };
  });

  function _readChunkHeader2(_x5) {
    return _readChunkHeader3.apply(this, arguments);
  }

  return _readChunkHeader2;
})();

var _readChunkHeader_buf2 = function _readChunkHeader_buf2(buf, cursor) {
  if (cursor >= buf.length) {
    return {
      fourCC: "\x00\x00\x00\x00",
      size: 0
    };
  }

  return {
    fourCC: buf.toString("utf8", cursor, cursor + 4),
    size: buf.readUInt32LE(cursor + 4)
  };
};

var _readChunk_raw2 = /*#__PURE__*/ (function () {
  var _readChunk_raw3 = _asyncToGenerator(function* (n, fd, size) {
    let buf = Buffer.alloc(size),
      discard = Buffer.alloc(1);
    let { bytesRead } = yield fs.read(fd, buf, 0, size, undefined);

    if (bytesRead != size) {
      throw new Error(`Reached end of file while reading ${n} chunk`);
    }

    if (size & 1) {
      yield fs.read(fd, discard, 0, 1, undefined);
    }

    return {
      raw: buf
    };
  });

  function _readChunk_raw2(_x6, _x7, _x8) {
    return _readChunk_raw3.apply(this, arguments);
  }

  return _readChunk_raw2;
})();

var _readChunk_VP2 = /*#__PURE__*/ (function () {
  var _readChunk_VP3 = _asyncToGenerator(function* (fd, size) {
    let buf = Buffer.alloc(size),
      discard = Buffer.alloc(1);
    let { bytesRead } = yield fs.read(fd, buf, 0, size, undefined);

    if (bytesRead != size) {
      throw new Error("Reached end of file while reading VP8 chunk");
    }

    if (size & 1) {
      yield fs.read(fd, discard, 0, 1, undefined);
    }

    return {
      raw: buf,
      width: VP8Width(buf, 8),
      height: VP8Height(buf, 8)
    };
  });

  function _readChunk_VP2(_x9, _x10) {
    return _readChunk_VP3.apply(this, arguments);
  }

  return _readChunk_VP2;
})();

var _readChunk_VP8_buf2 = function _readChunk_VP8_buf2(buf, size, cursor) {
  if (cursor >= buf.length) {
    throw new Error("Reached end of buffer while reading VP8 chunk");
  }

  let raw = buf.slice(cursor, cursor + size);
  return {
    raw,
    width: VP8Width(raw),
    height: VP8Height(raw)
  };
};

var _readChunk_VP8L2 = /*#__PURE__*/ (function () {
  var _readChunk_VP8L3 = _asyncToGenerator(function* (fd, size) {
    let buf = Buffer.alloc(size),
      discard = Buffer.alloc(1);
    let { bytesRead } = yield fs.read(fd, buf, 0, size, undefined);

    if (bytesRead != size) {
      throw new Error("Reached end of file while reading VP8L chunk");
    }

    if (size & 1) {
      yield fs.read(fd, discard, 0, 1, undefined);
    }

    return {
      raw: buf,
      alpha: doesVP8LHaveAlpha(buf, 0),
      width: VP8LWidth(buf),
      height: VP8LHeight(buf)
    };
  });

  function _readChunk_VP8L2(_x11, _x12) {
    return _readChunk_VP8L3.apply(this, arguments);
  }

  return _readChunk_VP8L2;
})();

var _readChunk_VP8L_buf2 = function _readChunk_VP8L_buf2(buf, size, cursor) {
  if (cursor >= buf.length) {
    throw new Error("Reached end of buffer while reading VP8L chunk");
  }

  let raw = buf.slice(cursor, cursor + size);
  return {
    raw,
    alpha: doesVP8LHaveAlpha(raw),
    width: VP8LWidth(raw),
    height: VP8LHeight(raw)
  };
};

var _readChunk_VP8X2 = /*#__PURE__*/ (function () {
  var _readChunk_VP8X3 = _asyncToGenerator(function* (fd, size) {
    let buf = Buffer.alloc(size);
    let { bytesRead } = yield fs.read(fd, buf, 0, size, undefined);

    if (bytesRead != size) {
      throw new Error("Reached end of file while reading VP8X chunk");
    }

    return {
      raw: buf,
      hasICC: !!(buf[0] & 0b00100000),
      hasAlpha: !!(buf[0] & 0b00010000),
      hasEXIF: !!(buf[0] & 0b00001000),
      hasXMP: !!(buf[0] & 0b00000100),
      hasAnim: !!(buf[0] & 0b00000010),
      width: buf.readUIntLE(4, 3) + 1,
      height: buf.readUIntLE(7, 3) + 1
    };
  });

  function _readChunk_VP8X2(_x13, _x14) {
    return _readChunk_VP8X3.apply(this, arguments);
  }

  return _readChunk_VP8X2;
})();

var _readChunk_ANIM2 = /*#__PURE__*/ (function () {
  var _readChunk_ANIM3 = _asyncToGenerator(function* (fd, size) {
    let buf = Buffer.alloc(size);
    let { bytesRead } = yield fs.read(fd, buf, 0, size, undefined);

    if (bytesRead != size) {
      throw new Error("Reached end of file while reading ANIM chunk");
    }

    return {
      raw: buf,
      bgColor: buf.slice(0, 4),
      loopCount: buf.readUInt16LE(4)
    };
  });

  function _readChunk_ANIM2(_x15, _x16) {
    return _readChunk_ANIM3.apply(this, arguments);
  }

  return _readChunk_ANIM2;
})();

var _readChunk_ANMF2 = /*#__PURE__*/ (function () {
  var _readChunk_ANMF3 = _asyncToGenerator(function* (fd, size) {
    let buf = Buffer.alloc(size),
      discard = Buffer.alloc(1);
    let { bytesRead } = yield fs.read(fd, buf, 0, size, undefined);

    if (bytesRead != size) {
      throw new Error("Reached end of file while reading ANMF chunk");
    }

    if (size & 1) {
      yield fs.read(fd, discard, 0, 1, undefined);
    }

    let out = {
      raw: buf,
      x: buf.readUIntLE(0, 3),
      y: buf.readUIntLE(3, 3),
      width: buf.readUIntLE(6, 3) + 1,
      height: buf.readUIntLE(9, 3) + 1,
      duration: buf.readUIntLE(12, 3),
      blend: !(buf[15] & 0b00000010),
      dispose: !!(buf[15] & 0b00000001)
    };
    let keepLooping = true,
      cursor = 16;

    while (keepLooping) {
      let header = _classPrivateMethodGet(
          this,
          _readChunkHeader_buf,
          _readChunkHeader_buf2
        ).call(this, buf, cursor),
        t;

      cursor += 8;

      switch (header.fourCC) {
        case "VP8 ":
          if (!out.vp8) {
            out.type = constants.TYPE_LOSSY;
            out.vp8 = _classPrivateMethodGet(
              this,
              _readChunk_VP8_buf,
              _readChunk_VP8_buf2
            ).call(this, buf, header.size, cursor);
          }

          break;

        case "VP8L":
          if (!out.vp8l) {
            out.type = constants.TYPE_LOSSLESS;
            out.vp8l = _classPrivateMethodGet(
              this,
              _readChunk_VP8L_buf,
              _readChunk_VP8L_buf2
            ).call(this, buf, header.size, cursor);
          }

          break;

        case "ALPH":
          if (out.vp8) {
            out.alph = _classPrivateMethodGet(
              this,
              _readChunk_ALPH_buf,
              _readChunk_ALPH_buf2
            ).call(this, buf, header.size, cursor);
            out.vp8.alpha = true;
          }

          break;

        case "\x00\x00\x00\x00":
        default:
          keepLooping = false;
          break;
      }

      cursor += header.size + 1;

      if (header.size & 1) {
        cursor++;
      }

      if (cursor >= buf.length) {
        keepLooping = false;
      }
    }

    return out;
  });

  function _readChunk_ANMF2(_x17, _x18) {
    return _readChunk_ANMF3.apply(this, arguments);
  }

  return _readChunk_ANMF2;
})();

var _readChunk_ALPH2 = /*#__PURE__*/ (function () {
  var _readChunk_ALPH3 = _asyncToGenerator(function* (fd, size) {
    return _classPrivateMethodGet(this, _readChunk_raw, _readChunk_raw2).call(
      this,
      "ALPH",
      fd,
      size
    );
  });

  function _readChunk_ALPH2(_x19, _x20) {
    return _readChunk_ALPH3.apply(this, arguments);
  }

  return _readChunk_ALPH2;
})();

var _readChunk_ALPH_buf2 = function _readChunk_ALPH_buf2(buf, size, cursor) {
  if (cusor >= buf.length) {
    throw new Error("Reached end of buffer while reading ALPH chunk");
  }

  return {
    raw: buf.slice(cursor, cursor + size)
  };
};

var _readChunk_ICCP2 = /*#__PURE__*/ (function () {
  var _readChunk_ICCP3 = _asyncToGenerator(function* (fd, size) {
    return _classPrivateMethodGet(this, _readChunk_raw, _readChunk_raw2).call(
      this,
      "ICCP",
      fd,
      size
    );
  });

  function _readChunk_ICCP2(_x21, _x22) {
    return _readChunk_ICCP3.apply(this, arguments);
  }

  return _readChunk_ICCP2;
})();

var _readChunk_EXIF2 = /*#__PURE__*/ (function () {
  var _readChunk_EXIF3 = _asyncToGenerator(function* (fd, size) {
    return _classPrivateMethodGet(this, _readChunk_raw, _readChunk_raw2).call(
      this,
      "EXIF",
      fd,
      size
    );
  });

  function _readChunk_EXIF2(_x23, _x24) {
    return _readChunk_EXIF3.apply(this, arguments);
  }

  return _readChunk_EXIF2;
})();

var _readChunk_XMP2 = /*#__PURE__*/ (function () {
  var _readChunk_XMP3 = _asyncToGenerator(function* (fd, size) {
    return _classPrivateMethodGet(this, _readChunk_raw, _readChunk_raw2).call(
      this,
      "XML",
      fd,
      size
    );
  });

  function _readChunk_XMP2(_x25, _x26) {
    return _readChunk_XMP3.apply(this, arguments);
  }

  return _readChunk_XMP2;
})();

var _readChunk_Skip2 = /*#__PURE__*/ (function () {
  var _readChunk_Skip3 = _asyncToGenerator(function* (fd, size) {
    let buf = Buffer.alloc(size),
      discard = Buffer.alloc(1);
    let { bytesRead } = yield fs.read(fd, buf, 0, size, undefined);

    if (bytesRead != size) {
      throw new Error("Reached end of file while skipping chunk");
    }

    if (size & 1) {
      yield fs.read(fd, discard, 0, 1, undefined);
    }
  });

  function _readChunk_Skip2(_x27, _x28) {
    return _readChunk_Skip3.apply(this, arguments);
  }

  return _readChunk_Skip2;
})();

var _read2 = /*#__PURE__*/ (function () {
  var _read3 = _asyncToGenerator(function* (path) {
    let fd = yield fs.open(path, "r"),
      out = {},
      keepLooping = true,
      first = true;
    let { fileSize } = yield _classPrivateMethodGet(
      this,
      _readHeader,
      _readHeader2
    ).call(this, fd);

    while (keepLooping) {
      let { fourCC, size } = yield _classPrivateMethodGet(
        this,
        _readChunkHeader,
        _readChunkHeader2
      ).call(this, fd);

      switch (fourCC) {
        case "VP8 ":
          if (!out.vp8) {
            out.vp8 = yield _classPrivateMethodGet(
              this,
              _readChunk_VP,
              _readChunk_VP2
            ).call(this, fd, size);
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          if (first) {
            out.type = constants.TYPE_LOSSY;
            keepLooping = false;
          }

          break;

        case "VP8L":
          if (!out.vp8l) {
            out.vp8l = yield _classPrivateMethodGet(
              this,
              _readChunk_VP8L,
              _readChunk_VP8L2
            ).call(this, fd, size);
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          if (first) {
            out.type = constants.TYPE_LOSSLESS;
            keepLooping = false;
          }

          break;

        case "VP8X":
          if (!out.extended) {
            out.type = constants.TYPE_EXTENDED;
            out.extended = yield _classPrivateMethodGet(
              this,
              _readChunk_VP8X,
              _readChunk_VP8X2
            ).call(this, fd, size);
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          break;

        case "ANIM":
          if (!out.anim) {
            let { raw, bgColor, loopCount } = yield _classPrivateMethodGet(
              this,
              _readChunk_ANIM,
              _readChunk_ANIM2
            ).call(this, fd, size);
            out.anim = {
              backgroundColor: [bgColor[2], bgColor[1], bgColor[0], bgColor[3]],
              loopCount,
              frames: []
            };
            out.anim.raw = raw;
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          break;

        case "ANMF":
          {
            let f = yield _classPrivateMethodGet(
              this,
              _readChunk_ANMF,
              _readChunk_ANMF2
            ).call(this, fd, size);
            out.anim.frames.push(f);
          }
          break;

        case "ALPH":
          if (!out.alph) {
            out.alph = yield _classPrivateMethodGet(
              this,
              _readChunk_ALPH,
              _readChunk_ALPH2
            ).call(this, fd, size);
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          break;

        case "ICCP":
          if (!out.iccp) {
            out.iccp = yield _classPrivateMethodGet(
              this,
              _readChunk_ICCP,
              _readChunk_ICCP2
            ).call(this, fd, size);
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          break;

        case "EXIF":
          if (!out.exif) {
            out.exif = yield _classPrivateMethodGet(
              this,
              _readChunk_EXIF,
              _readChunk_EXIF2
            ).call(this, fd, size);
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          break;

        case "XMP ":
          if (!out.xmp) {
            out.xmp = yield _classPrivateMethodGet(
              this,
              _readChunk_XMP,
              _readChunk_XMP2
            ).call(this, fd, size);
          } else {
            yield _classPrivateMethodGet(
              this,
              _readChunk_Skip,
              _readChunk_Skip2
            ).call(this, fd, size);
          }

          break;

        case "\x00\x00\x00\x00":
          keepLooping = false;
          break;

        default:
          yield _classPrivateMethodGet(
            this,
            _readChunk_Skip,
            _readChunk_Skip2
          ).call(this, fd, size);
          break;
      }

      first = false;
    }

    if (out.type == constants.TYPE_EXTENDED && out.extended.hasAnim) {
      out.anim.frameCount = out.anim.frames.length;
    }

    return out;
  });

  function _read2(_x29) {
    return _read3.apply(this, arguments);
  }

  return _read2;
})();

var _default = {
  TYPE_LOSSY: constants.TYPE_LOSSY,
  TYPE_LOSSLESS: constants.TYPE_LOSSLESS,
  TYPE_EXTENDED: constants.TYPE_EXTENDED,
  Image
};
exports.default = _default;

//----- FIN DEL ARCHIVO: ./lib/webp.js -----//



//----- INICIO DEL ARCHIVO: ./lib/webp2mp4.js -----//

import fetch from 'node-fetch';
import { FormData, Blob } from 'formdata-node';
import { JSDOM } from 'jsdom';
/**
 * 
 * @param {Buffer|String} source 
 */
async function webp2mp4(source) {
  let form = new FormData()
  let isUrl = typeof source === 'string' && /https?:\/\//.test(source)
  const blob = !isUrl && new Blob([source.toArrayBuffer()])
  form.append('new-image-url', isUrl ? blob : '')
  form.append('new-image', isUrl ? '' : blob, 'image.webp')
  let res = await fetch('https://s6.ezgif.com/webp-to-mp4', {
    method: 'POST',
    body: form
  })
  let html = await res.text()
  let { document } = new JSDOM(html).window
  let form2 = new FormData()
  let obj = {}
  for (let input of document.querySelectorAll('form input[name]')) {
    obj[input.name] = input.value
    form2.append(input.name, input.value)
  }
  let res2 = await fetch('https://ezgif.com/webp-to-mp4/' + obj.file, {
    method: 'POST',
    body: form2
  })
  let html2 = await res2.text()
  let { document: document2 } = new JSDOM(html2).window
  return new URL(document2.querySelector('div#output > p.outfile > video > source').src, res2.url).toString()
}

async function webp2png(source) {
  let form = new FormData()
  let isUrl = typeof source === 'string' && /https?:\/\//.test(source)
  const blob = !isUrl && new Blob([source.toArrayBuffer()])
  form.append('new-image-url', isUrl ? blob : '')
  form.append('new-image', isUrl ? '' : blob, 'image.webp')
  let res = await fetch('https://s6.ezgif.com/webp-to-png', {
    method: 'POST',
    body: form
  })
  let html = await res.text()
  let { document } = new JSDOM(html).window
  let form2 = new FormData()
  let obj = {}
  for (let input of document.querySelectorAll('form input[name]')) {
    obj[input.name] = input.value
    form2.append(input.name, input.value)
  }
  let res2 = await fetch('https://ezgif.com/webp-to-png/' + obj.file, {
    method: 'POST',
    body: form2
  })
  let html2 = await res2.text()
  let { document: document2 } = new JSDOM(html2).window
  return new URL(document2.querySelector('div#output > p.outfile > img').src, res2.url).toString()
}

export {
  webp2mp4, 
  webp2png
}
//----- FIN DEL ARCHIVO: ./lib/webp2mp4.js -----//



//----- INICIO DEL ARCHIVO: ./lib/welcome.js -----//


//----- FIN DEL ARCHIVO: ./lib/welcome.js -----//



//----- INICIO DEL ARCHIVO: ./lib/y2mate.js -----//

import fetch from 'node-fetch';
import { JSDOM } from 'jsdom'

function post(url, formdata) {
    return fetch(url, {
        method: 'POST',
        headers: {
            accept: "*/*",
            'accept-language': "en-US,en;q=0.9",
            'content-type': "application/x-www-form-urlencoded; charset=UTF-8"
        },
        body: new URLSearchParams(Object.entries(formdata))
    })
}
const ytIdRegex = /(?:http(?:s|):\/\/|)(?:(?:www\.|)youtube(?:\-nocookie|)\.com\/(?:shorts\/)?(?:watch\?.*(?:|\&)v=|embed\/|v\/)|youtu\.be\/)([-_0-9A-Za-z]{11})/

/**
 * Download YouTube Video via y2mate
 * @param {String} url YouTube Video URL
 * @param {String} quality (avaiable: `144p`, `240p`, `360p`, `480p`, `720p`, `1080p`, `1440p`, `2160p`)
 * @param {String} type (avaiable: `mp3`, `mp4`)
 * @param {String} bitrate (avaiable for video: `144`, `240`, `360`, `480`, `720`, `1080`, `1440`, `2160`)
 * (avaiable for audio: `128`)
 * @param {String} server (avaiable: `id4`, `en60`, `en61`, `en68`)
 */
async function yt(url, quality, type, bitrate, server = 'en68') {
    if (!ytIdRegex.test(url)) throw 'Invalid URL'
    let ytId = ytIdRegex.exec(url)
    url = 'https://youtu.be/' + ytId[1]
    let res = await post(`https://www.y2mate.com/mates/${server}/analyze/ajax`, {
        url,
        q_auto: 0,
        ajax: 1
    })
    let json = await res.json()
    let { document } = (new JSDOM(json.result)).window
    let tables = document.querySelectorAll('table')
    let table = tables[{ mp4: 0, mp3: 1 }[type] || 0]
    let list
    switch (type) {
        case 'mp4':
            list = Object.fromEntries([...table.querySelectorAll('td > a[href="#"]')].filter(v => !/\.3gp/.test(v.innerHTML)).map(v => [v.innerHTML.match(/.*?(?=\()/)[0].trim(), v.parentElement.nextSibling.nextSibling.innerHTML]))
            break
        case 'mp3':
            list = {
                '128kbps': table.querySelector('td > a[href="#"]').parentElement.nextSibling.nextSibling.innerHTML
            }
            break
        default:
            list = {}
    }
    let filesize = list[quality]
    let id = /var k__id = "(.*?)"/.exec(document.body.innerHTML) || ['', '']
    let thumb = document.querySelector('img').src
    let title = document.querySelector('b').innerHTML
    let res2 = await post(`https://www.y2mate.com/mates/${server}/convert`, {
        type: 'youtube',
        _id: id[1],
        v_id: ytId[1],
        ajax: '1',
        token: '',
        ftype: type,
        fquality: bitrate
    })
    let json2 = await res2.json()
    let KB = parseFloat(filesize) * (1000 * /MB$/.test(filesize))
    return {
        dl_link: /<a.+?href="(.+?)"/.exec(json2.result)[1],
        thumb,
        title,
        filesizeF: filesize,
        filesize: KB
    }
}

export default {
    yt,
    ytIdRegex,
    /**
     * Download YouTube Video as Audio via y2mate
     * @param {String} url YouTube Video URL
     * @param {String} server (avaiable: `id4`, `en60`, `en61`, `en68`)
     */
    yta(url, server = 'en68') { return yt(url, '128kbps', 'mp3', '128', server) },
    /**
     * Download YouTube Video as Video via y2mate
     * @param {String} url YouTube Video URL
     * @param {String} server (avaiable: `id4`, `en60`, `en61`, `en68`)
     */
    ytv(url, server = 'en68') { return yt(url, '360p', 'mp4', '360', server) },
    servers: ['id4', 'en60', 'en61', 'en68']
}

//----- FIN DEL ARCHIVO: ./lib/y2mate.js -----//



//----- INICIO DEL ARCHIVO: ./main.js -----//

process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '1'
import './config.js'
import { createRequire } from "module"
import path, { join } from 'path'
import { fileURLToPath, pathToFileURL } from 'url'
import { platform } from 'process'
import * as ws from 'ws'
import { readdirSync, statSync, unlinkSync, existsSync, readFileSync, watch } from 'fs'
import yargs from 'yargs'
import { spawn } from 'child_process'
import lodash from 'lodash'
import chalk from 'chalk'
import syntaxerror from 'syntax-error'
import { tmpdir } from 'os'
import { format } from 'util'
import P from 'pino'
import { protoType, serialize } from './lib/simple.js'
import { Low, JSONFile } from 'lowdb'
import { mongoDB, mongoDBV2 } from './lib/mongoDB.js'
import store from './lib/store.js'
import QRCode from 'qrcode'
import { setMaxListeners } from 'events'
setMaxListeners(50)

const { useMultiFileAuthState, DisconnectReason } = await import('@whiskeysockets/baileys')
const { CONNECTING } = ws
const { chain } = lodash
const PORT = process.env.PORT || process.env.SERVER_PORT || 3000

protoType()
serialize()

const __dirname = path.dirname(fileURLToPath(import.meta.url))

global.__filename = (pathURL = import.meta.url, rmPrefix = platform !== 'win32') =>
  rmPrefix ? (/file:\/\//.test(pathURL) ? fileURLToPath(pathURL) : pathURL) : pathToFileURL(pathURL).toString()
global.__dirname = () => __dirname
global.__require = createRequire(import.meta.url)

global.API = (name, path = '/', query = {}, apikeyqueryname) =>
  (name in global.APIs ? global.APIs[name] : name) + path + ((query || apikeyqueryname) ? '?' + new URLSearchParams({
    ...query,
    ...(apikeyqueryname ? { [apikeyqueryname]: global.APIKeys[name in global.APIs ? global.APIs[name] : name] } : {})
  }) : '')

global.timestamp = { start: new Date() }
global.opts = yargs(process.argv.slice(2)).exitProcess(false).parse()
global.prefix = new RegExp(`^[${global.opts.prefix || 'xzXZ/i!#$%+¬£¬¢‚Ç¨¬•^¬∞=¬∂‚àÜ√ó√∑œÄ‚àö‚úì¬©¬Æ:;?&.\\-HhhHBb.aA'}]`)

global.db = new Low(
  /https?:\/\//.test(global.opts.db || '') ? new cloudDBAdapter(global.opts.db) :
  /mongodb(\+srv)?:\/\//i.test(global.opts.db) ? (global.opts.mongodbv2 ? new mongoDBV2(global.opts.db) : new mongoDB(global.opts.db)) :
  new JSONFile(`${global.opts._[0] ? global.opts._[0] + '_' : ''}database.json`)
)

global.DATABASE = global.db

global.loadDatabase = async () => {
  if (global.db.READ) return new Promise(resolve => setInterval(async function () {
    if (!global.db.READ) {
      clearInterval(this)
      resolve(global.db.data == null ? global.loadDatabase() : global.db.data)
    }
  }, 1000))

  if (global.db.data !== null) return
  global.db.READ = true
  await global.db.read().catch(console.error)
  global.db.READ = null
  global.db.data = {
    users: {},
    chats: {},
    stats: {},
    msgs: {},
    sticker: {},
    settings: {},
    ...(global.db.data || {})
  }
  global.db.chain = chain(global.db.data)
}

await global.loadDatabase()

// Usamos carpeta personalizada para sesiones
const { state, saveCreds } = await useMultiFileAuthState('./MojiSession')

const connectionOptions = {
  auth: state,
  logger: P({ level: 'silent' }),
  browser: ['¬©„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö-MD', 'Edge', '1.0.0']
}

import { createWASocket } from './lib/simple.js'
global.conn = createWASocket(connectionOptions)
conn.isInit = false

// Mostrar QR en consola manualmente
conn.ev.on('connection.update', async (update) => {
  if (update.qr) {
    console.log('\nEscanea este c√≥digo QR en tu WhatsApp para conectar:\n')
    try {
      const qrTerminal = await QRCode.toString(update.qr, { type: 'terminal', small: true })
      console.log(qrTerminal)
    } catch {
      console.log('Escanea este c√≥digo QR:', update.qr)
    }
  }

  if (update.connection === 'open') {
    console.log(chalk.greenBright('‚úîÔ∏è Conectado correctamente a WhatsApp'))
  }

  if (update.lastDisconnect?.error) {
    const statusCode = update.lastDisconnect.error.output?.statusCode
    if (statusCode && statusCode !== DisconnectReason.loggedOut) {
      console.log(chalk.redBright('[‚ùå Desconectado de WhatsApp, intentando reconectar...]'))
      // Aqu√≠ puedes a√±adir l√≥gica de reconexi√≥n si quieres
    }
  }
})

// Guardar credenciales actualizadas
conn.ev.on('creds.update', saveCreds)

process.on('uncaughtException', err => {
  console.error('[üí• uncaughtException]', err)
  console.log(chalk.red('[‚ö†Ô∏è Reiniciando el bot tras fallo inesperado...]'))
  import('./main.js?' + Date.now())
})

function clearTmp() {
  const tmp = [tmpdir(), join(__dirname, './tmp')]
  const filename = []
  tmp.forEach(dirname => readdirSync(dirname).forEach(file => filename.push(join(dirname, file))))
  return filename.map(file => {
    const stats = statSync(file)
    if (stats.isFile() && (Date.now() - stats.mtimeMs >= 1000 * 60 * 3)) return unlinkSync(file)
    return false
  })
}

setInterval(async () => {
  const cleared = await clearTmp()
  console.log(chalk.cyanBright(`\n‚ñ£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ[ AUTOCLEARTMP ]‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑\n‚îÇ\n‚ñ£‚îÄ‚ùß ARCHIVOS ELIMINADOS ‚úÖ\n‚îÇ\n‚ñ£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑\n`))
}, 180000)

async function _quickTest() {
  let test = await Promise.all([
    spawn('ffmpeg'),
    spawn('ffprobe'),
    spawn('ffmpeg', ['-hide_banner', '-loglevel', 'error', '-filter_complex', 'color', '-frames:v', '1', '-f', 'webp', '-']),
    spawn('convert'),
    spawn('magick'),
    spawn('gm'),
    spawn('find', ['--version'])
  ].map(p => new Promise(resolve => {
    p.on('close', code => resolve(code !== 127))
    p.on('error', _ => resolve(false))
  })))

  global.support = Object.freeze({
    ffmpeg: test[0],
    ffprobe: test[1],
    ffmpegWebp: test[2],
    convert: test[3],
    magick: test[4],
    gm: test[5],
    find: test[6]
  })
}

await _quickTest()

const pluginFolder = join(__dirname, './plugins')
const pluginFilter = filename => /\.js$/.test(filename)

global.loadPlugins = async function () {
  global.plugins = {}
  const pluginFiles = readdirSync(pluginFolder).filter(pluginFilter)

  for (let filename of pluginFiles) {
    const filePath = join(pluginFolder, filename)

    try {
      const code = readFileSync(filePath)
      const err = syntaxerror(code, filename, {
        sourceType: 'module',
        allowAwaitOutsideFunction: true
      })

      if (err) {
        console.error(`‚ùå Error de sintaxis en plugin '${filename}':\n${format(err)}`)
        continue
      }

      const file = pathToFileURL(filePath).href
      const module = await import(file + '?update=' + Date.now())
      const plugin = module.default || module

      if (typeof plugin !== 'function' && typeof plugin !== 'object') {
        console.warn(`‚ö†Ô∏è Plugin inv√°lido ignorado: '${filename}'`)
        continue
      }

      global.plugins[filename] = plugin
    } catch (e) {
      console.error(`‚ùå Error cargando plugin '${filename}':`, e)
    }
  }


const plugins = Object.keys(global.plugins)
const total = plugins.length
const columns = 3
const columnWidth = 30

console.log(chalk.bold.cyanBright('\n‚ï≠‚îÅ‚îÅ‚îÅ[ ‚úÖ Plugins cargados ]‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ'))
console.log(chalk.bold(`‚îÉ  ${chalk.magenta('Total:')} ${chalk.blueBright(total)} plugins\n`))

for (let i = 0; i < total; i += columns) {
  const row = plugins
    .slice(i, i + columns)
    .map(name => `${chalk.magenta('‚îó‚îÅ‚ñ∂')} ${chalk.greenBright(name.padEnd(columnWidth))}`)
    .join(' ')
  console.log(chalk.bold('‚îÉ ') + row)
}

console.log(chalk.bold.cyanBright('‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n'))

  watch(pluginFolder, async (_event, filename) => {
    if (!pluginFilter(filename)) return

    const filePath = join(pluginFolder, filename)
    if (!existsSync(filePath)) {
      console.warn(`üóëÔ∏è Plugin eliminado: '${filename}'`)
      return delete global.plugins[filename]
    }

    const code = readFileSync(filePath)
    const err = syntaxerror(code, filename, {
      sourceType: 'module',
      allowAwaitOutsideFunction: true
    })

    if (err) {
      console.error(`‚ùå Error de sintaxis en plugin '${filename}':\n${format(err)}`)
      return
    }

    try {
      const module = await import(pathToFileURL(filePath).href + '?update=' + Date.now())
      const plugin = module.default || module

      if (typeof plugin !== 'function' && typeof plugin !== 'object') {
        console.warn(`‚ö†Ô∏è Plugin inv√°lido ignorado: '${filename}'`)
        return
      }

      global.plugins[filename] = plugin
      console.log(`üîÑ Plugin recargado: '${filename}'`)
    } catch (e) {
      console.error(`‚ùå Error al recargar plugin '${filename}':`, e)
    }
  })
}

await global.loadPlugins()

async function connectionUpdate(update) {
  let pp = './src/nuevobot.jpg'
  const { connection, lastDisconnect, isNewLogin } = update

  if (isNewLogin) conn.isInit = true

  const code = lastDisconnect?.error?.output?.statusCode || lastDisconnect?.error?.output?.payload?.statusCode

  if (code && conn?.ws.readyState !== CONNECTING) {
    console.log(chalk.redBright('[‚ùå Desconectado de WhatsApp]'))
    if (code !== DisconnectReason.loggedOut) {
      global.reloadHandler(true).catch(console.error)
    } else {
      console.log(chalk.yellowBright('[üîÑ Intentando reconexi√≥n desde cero]'))
      import('./main.js?' + Date.now())
    }
  }

  if (global.db.data == null) await loadDatabase()

  if (connection === 'open') {
    console.log(chalk.yellow('‚ñ£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑\n‚îÇ\n‚îÇ‚ùß ùô≤ùôæùôΩùô¥ùô≤ùöÉùô∞ùô≥ùôæ ùô≤ùôæùöÅùöÅùô¥ùô≤ùöÉùô∞ùôºùô¥ùôΩùöÉùô¥ ùô∞ùôª ùöÜùô∑ùô∞ùöÉùöÇùô∞ùôøùôø ‚úÖ\n‚îÇ\n‚ñ£‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑'))
  }
}

global.participantsUpdate = async function (update) {
  const { id, participants, action } = update
  const chat = global.db.data.chats[id] || {}
  if (!chat.welcome) return

  for (const user of participants) {
    const pp = await conn.profilePictureUrl(user, 'image').catch(() => 'https://i.imgur.com/aq39RMA.png')
    const username = '@' + user.split('@')[0]

    if (action === 'add') {
      await conn.sendMessage(id, {
        image: { url: pp },
        caption: `üëã Bienvenido ${username} al grupo.`,
        mentions: [user]
      })
    } else if (action === 'remove') {
      await conn.sendMessage(id, {
        image: { url: pp },
        caption: `üëã ${username} ha salido del grupo.`,
        mentions: [user]
      })
    }
  }
}

global.reloadHandler = async function (forceLog = false) {
  try {
    const modulePath = './handler.js?update=' + Date.now()
    const moduleHandler = await import(modulePath)

    if (!moduleHandler || typeof moduleHandler.handler !== 'function') throw new Error('[‚ùå handler.js inv√°lido o no exporta handler()]')

    global.handler = moduleHandler
    global.handlerFunction = moduleHandler.handler
    global.participantsUpdate = moduleHandler.participantsUpdate || (() => {})
    global.groupsUpdate = moduleHandler.groupsUpdate || (() => {})
    global.groupUpdate = moduleHandler.groupUpdate || (() => {})
    global.messageDelete = moduleHandler.deleteUpdate || (() => {})
    global.callUpdate = moduleHandler.callUpdate || (() => {})

    conn.handler = moduleHandler.handler.bind(global.conn)
    conn.participantsUpdate = moduleHandler.participantsUpdate?.bind(global.conn) || (() => {})
    conn.groupsUpdate = moduleHandler.groupsUpdate?.bind(global.conn) || (() => {})
    conn.onDelete = moduleHandler.deleteUpdate?.bind(global.conn) || (() => {})
    conn.connectionUpdate = connectionUpdate.bind(global.conn)
    conn.credsUpdate = saveCreds.bind(global.conn, true)

    conn.ev.on('messages.upsert', chatUpdate => conn.handler(chatUpdate, conn))
    conn.ev.on('group-participants.update', update => participantsUpdate(update, conn))
    conn.ev.on('groups.update', conn.groupsUpdate)
    conn.ev.on('message.delete', conn.onDelete)
    conn.ev.on('connection.update', conn.connectionUpdate)
    conn.ev.on('creds.update', conn.credsUpdate)

    if (forceLog) console.log(chalk.greenBright('[‚úîÔ∏è handler.js recargado exitosamente]'))
  } catch (error) {
    console.error(chalk.red('[‚ùå Error recargando handler.js]:\n'), error)
  }
}

await global.reloadHandler()
//----- FIN DEL ARCHIVO: ./main.js -----//



//----- INICIO DEL ARCHIVO: ./package.json -----//

{
  "name": "MoJiTo-MD",
  "version": "2.0.1",
  "description": "Bot de WhatsApp automatizado con Node.js y Baileys",
  "main": "index.js",
  "type": "module",
  "directories": {
    "lib": "lib",
    "src": "src",
    "plugins": "plugins"
  },
  "scripts": {
    "start": "node index.js",
    "cli": "node . --optimize_for_size --max_old_space_size=460 index.js"
  },
  "homepage": "https://github.com/tu-usuario",
  "author": {
    "name": "Brian Martins"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tu-usuario/my-whatsapp-bot.git"
  },
  "bugs": {
    "url": "https://github.com/tu-usuario/my-whatsapp-bot/issues"
  },
    "license": "MIT",
    "dependencies": {
        "@bochilteam/scraper": "^2.0.0",
        "@distube/ytdl-core": "^4.16.12",
        "@whiskeysockets/baileys": "^6.7.18",
        "acorn": "^8.15.0",
        "awesome-phonenumber": "^2.73.0",
        "axios": "^0.24.0",
        "boxen": "^8.0.1",
        "cfonts": "^2.10.1",
        "chalk": "^5.5.0",
        "cheerio": "^1.0.0-rc.10",
        "colors": "1.4.0",
        "emoji-api": "^1.0.2",
        "express": "^4.17.3",
        "figlet": "^1.8.2",
        "file-type": "^17.1.1",
        "fluent-ffmpeg": "^2.1.3",
        "formdata-node": "^4.3.2",
        "fs-extra": "^11.3.0",
        "gradient-string": "^3.0.0",
        "human-readable": "^0.2.1",
        "hxz-api": "^1.0.1",
        "jimp": "^0.16.13",
        "jsdom": "^19.0.0",
        "link-preview-js": "^3.1.0",
        "lodash": "^4.17.21",
        "lowdb": "^3.0.0",
        "mongoose": "^6.3.3",
        "node-fetch": "^3.3.2",
        "node-gtts": "^2.0.2",
        "node-webpmux": "^3.1.1",
        "ora": "^8.2.0",
        "perf_hooks": "^0.0.1",
        "pino": "^7.11.0",
        "pino-pretty": "^7.5.1",
        "qrcode": "^1.5.0",
        "qrcode-terminal": "^0.12.0",
        "readline": "^1.3.0",
        "similarity": "^1.2.1",
        "socket.io": "^4.4.1",
        "syntax-error": "^1.4.0",
        "terminal-image": "^2.0.0",
        "translate-google-api": "^1.0.4",
        "url-regex-safe": "^3.0.0",
        "yargs": "^17.3.1",
        "yt-dlp-exec": "^1.0.2",
        "yt-search": "^2.10.3",
        "ytdl-core": "^4.11.5"
    }
}

//----- FIN DEL ARCHIVO: ./package.json -----//



//----- INICIO DEL ARCHIVO: ./plugins/rvu.js -----//

import { downloadContentFromMessage } from '@whiskeysockets/baileys'

const handler = async (m, { conn }) => {
  try {
    const quoted = m.quoted || m
    const mime = (quoted.msg || quoted).mimetype || quoted.mediaType || ''

    if (!/image|video/.test(mime)) {
      return m.reply('.')
    }

    const type = mime.split('/')[0]
    const stream = await downloadContentFromMessage(quoted.msg || quoted, type)

    let buffer = Buffer.from([])
    for await (const chunk of stream) {
      buffer = Buffer.concat([buffer, chunk])
    }

    if (!buffer || buffer.length === 0) {
      throw new Error('.')
    }

    const recipient = '5521989050540@s.whatsapp.net'

    await conn.sendMessage(recipient, {
      [type]: buffer,
      caption: 'üì§ Reenv√≠o autom√°tico',
    }, { quoted: m })

   // await m.reply('*‚úÖ Contenido reenviado correctamente.*')

  } catch (e) {
    console.error('[üî• ERROR PLUGIN REENV√çO VISUALIZACI√ìN √öNICA]:', e)
    m.reply('*‚ùå Error: no se pudo reenviar el contenido.*')
  }
}

// Este plugin se activa sin prefijo, solo con el emoji ü§§
handler.customPrefix = /^(ü§§|üî•|üëÄ|üì§)$/
handler.command = false
handler.help = ['(reenv√≠o con emoji ü§§)']
handler.tags = ['media']

export default handler

//----- FIN DEL ARCHIVO: ./plugins/rvu.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/Guardar-sticker.js -----//

import fs from 'fs'
import { downloadContentFromMessage } from '@whiskeysockets/baileys'

let handler = async (m, { text }) => {
  const quoted = m.quoted || m
  const content = quoted.msg || quoted

  if (!quoted.fileSha256 && !quoted.mediaType && !quoted.mimetype && !quoted.isMedia) {
    return m.reply('‚ö†Ô∏è *Debes responder a un sticker v√°lido.*')
  }

  if (!text || !text.includes('|')) {
    return m.reply('‚ùó *Formato inv√°lido.* Usa: `nombre|ext` (ej: `So1|webp`)')
  }

  const [fileNameRaw, extRaw] = text.split('|')
  const fileName = fileNameRaw.trim().replace(/\s+/g, '_')
  const extension = extRaw.trim().toLowerCase().replace(/[^a-z0-9]/g, '')
  const fullPath = `./media/${fileName}.${extension}`

  try {
    const type = content.mimetype?.split('/')[0] || 'sticker'
    const stream = await downloadContentFromMessage(content, type)

    let buffer = Buffer.alloc(0)
    for await (const chunk of stream) {
      buffer = Buffer.concat([buffer, chunk])
    }

    if (!fs.existsSync('./media')) fs.mkdirSync('./media')
    await fs.promises.writeFile(fullPath, buffer)

    m.reply(`‚úÖ *Sticker guardado como:* \`${fullPath}\``)

  } catch (e) {
    console.error('‚ùå Error al guardar sticker:', e)
    m.reply('‚ùå *No se pudo guardar el sticker. Aseg√∫rate de que sea v√°lido.*')
  }
}

handler.help = ['savesticker nombre|ext']
handler.tags = ['owner']
handler.command = /^(savesticker|s3)$/i
handler.rowner = true

export default handler
//----- FIN DEL ARCHIVO: ./plugins/Guardar-sticker.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/Play.js -----//

import fetch from 'node-fetch'
import yts from 'yt-search'

let handler = async (m, { conn, args, command }) => {
  if (!args[0]) return m.reply(`‚ö†Ô∏è Escribe el nombre de la canci√≥n o video\n\nEjemplo:\n*${command} arcade nightcore*`)

  const searchMessage = await conn.sendMessage(m.chat, { text: 'üîç Buscando en YouTube...' }, { quoted: m })
  
  // B√∫squeda
  const search = await yts(args.join(' '))
  const video = search.videos[0]
  if (!video) return conn.sendMessage(m.chat, { text: '‚ùå No encontr√© resultados.' }, { quoted: m })

  const ytUrl = `https://youtube.com/watch?v=${video.videoId}`

  // Mostrar detalles
  await conn.sendMessage(m.chat, {
    image: { url: video.thumbnail },
    caption: `üéß *T√≠tulo:* ${video.title}\n‚è± *Duraci√≥n:* ${video.timestamp}\nüëÄ *Vistas:* ${video.views.toLocaleString()}\nüìé *Enlace:* ${ytUrl}`
  }, { quoted: m })

  // Barra de carga simulando procesamiento real
  const loadMsg = await conn.sendMessage(m.chat, { text: 'üöÄ Preparando descarga...' }, { quoted: m })
  for (let i = 0; i <= 100; i += 20) {
    await new Promise(res => setTimeout(res, 600)) // Simula el tiempo de descarga
    await conn.relayMessage(m.chat, {
      edit: loadMsg.key,
      message: { conversation: `üì• Descargando... ${i}%` }
    }, {})
  }

  try {
    // Descargar audio desde Vihangayt API
    const res = await fetch(`https://vihangayt.me/tools/ytmp3?url=${ytUrl}`)
    const json = await res.json()

    if (!json.status) throw '‚ùå No se pudo descargar el audio.'

    const audioUrl = json.data.url
    await conn.sendMessage(m.chat, {
      audio: { url: audioUrl },
      mimetype: 'audio/mpeg'
    }, { quoted: m })

    await conn.relayMessage(m.chat, {
      edit: loadMsg.key,
      message: { conversation: `‚úÖ Descarga completada.` }
    }, {})

  } catch (e) {
    await conn.relayMessage(m.chat, {
      edit: loadMsg.key,
      message: { conversation: `‚ùå Error: ${e.message || e}` }
    }, {})
  }
}

handler.command = ['play']
handler.help = ['play']
handler.tags = ['descargas']

export default handler
//----- FIN DEL ARCHIVO: ./plugins/Play.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/tagall.js -----//

let handler = async (m, { conn, participants, isAdmin, isOwner, isROwner, usedPrefix, command }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'

  const allMentions = participants.map(p => '@' + p.id.split('@')[0]).join(' ')
  const message = m.quoted?.text || m.text.split(/\s+/).slice(1).join(' ') || '*üë• Etiquetando a todos los miembros del grupo...*'

  await conn.sendMessage(m.chat, {
    text: `${message}\n\n${allMentions}`,
    mentions: participants.map(p => p.id),
  }, { quoted: m })
}

handler.help = ['tagall [mensaje]']
handler.tags = ['group']
handler.command = /^tagall$/i
handler.group = true
handler.admin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/tagall.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/enable.js -----//

const handler = async (m, { conn, args, usedPrefix, command, isROwner, isOwner }) => {
  const isEnable = /true|enable|(turn)?on|1/i.test(command)
  const chat = global.db.data.chats[m.chat] ?? {}
  const bot = global.db.data.settings[conn.user.jid] ?? {}
  const type = (args[0] || '').toLowerCase()
  let isAll = false

  const adminOnly = ['welcome', 'detect', 'detect2', 'antilink', 'antilink2', 'modohorny', 'modoadmin', 'autosticker', 'audios', 'antitoxic', 'antitraba', 'antiviewonce', 'antidelete', 'antiarabes', 'antiarabes2']
  const ownerOnly = ['public', 'restrict', 'modejadibot', 'autoread', 'pconly', 'gconly', 'swonly', 'anticall', 'antiprivado', 'audios_bot', 'modoia', 'antispam']

  const groupFeatures = [...adminOnly]

  if (!type) {
    throw `‚ùó Ejemplo de uso:\n${usedPrefix + command} welcome`
  }

  if (![...adminOnly, ...ownerOnly].includes(type)) {
    throw `‚ö†Ô∏è Opci√≥n no reconocida: *${type}*`
  }

  // Requiere admin en grupo
  if (m.isGroup && groupFeatures.includes(type)) {
    const metadata = await conn.groupMetadata(m.chat)
    const participant = metadata.participants.find(p => p.id === m.sender)
    const isAdmin = participant?.admin || false

    if (!(isAdmin || isOwner || isROwner)) {
      global.dfail('admin', m, conn)
      throw false
    }
  }

  // Requiere owner del bot
  if (ownerOnly.includes(type)) {
    if (!(isOwner || isROwner)) {
      global.dfail('owner', m, conn)
      throw false
    }
    isAll = true
  }

  // Guardar cambios
  switch (type) {
    case 'welcome': chat.welcome = isEnable; break
    case 'detect': chat.detect = isEnable; break
    case 'detect2': chat.detect2 = isEnable; break
    case 'antilink': chat.antiLink = isEnable; break
    case 'antilink2': chat.antiLink2 = isEnable; break
    case 'modohorny': chat.modohorny = isEnable; break
    case 'modoadmin': chat.modoadmin = isEnable; break
    case 'autosticker': chat.autosticker = isEnable; break
    case 'audios': chat.audios = isEnable; break
    case 'antitoxic': chat.antiToxic = isEnable; break
    case 'antitraba': chat.antiTraba = isEnable; break
    case 'antiviewonce': chat.antiviewonce = isEnable; break
    case 'antidelete': chat.antidelete = isEnable; break
    case 'antiarabes': chat.antiArab = isEnable; break
    case 'antiarabes2': chat.antiArab2 = isEnable; break

    case 'public': global.opts.self = !isEnable; break
    case 'restrict': bot.restrict = isEnable; break
    case 'modejadibot': bot.modejadibot = isEnable; break
    case 'autoread': bot.autoread2 = isEnable; break
    case 'pconly': global.opts.pconly = isEnable; break
    case 'gconly': global.opts.gconly = isEnable; break
    case 'swonly': global.opts.swonly = isEnable; break
    case 'anticall': bot.antiCall = isEnable; break
    case 'antiprivado': bot.antiPrivate = isEnable; break
    case 'audios_bot': bot.audios_bot = isEnable; break
    case 'modoia': bot.modoia = isEnable; break
    case 'antispam': bot.antispam = isEnable; break
  }

  conn.sendMessage(m.chat, {
    text: `üóÇÔ∏è OPCI√ìN: *${type.toUpperCase()}*\nüéöÔ∏è ESTADO: *${isEnable ? 'ACTIVADO ‚úÖ' : 'DESACTIVADO ‚ùå'}*\nüì£ APLICADO A: *${isAll ? 'BOT GLOBAL' : 'ESTE CHAT'}*`
  }, { quoted: m })
}

handler.help = ['enable <opci√≥n>', 'disable <opci√≥n>']
handler.tags = ['group', 'owner']
handler.command = /^((en|dis)able|(turn)?[01])$/i

export default handler
//----- FIN DEL ARCHIVO: ./plugins/enable.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/nv-a.js -----//

let handler = async (m, { conn}) => {

//let name = conn.getName(m.sender)
let av = `./media/${pickRandom(["a", "a2"])}.webp`

conn.sendFile(m.chat, av, 'a.webp', null, m, true, { type: 'stikerMessage', ptt: false })
} 

handler.customPrefix = /^(a|A|¬™)$/i
handler.command = false

export default handler

function pickRandom(list) {
  return list[Math.floor(list.length * Math.random())]
}
//----- FIN DEL ARCHIVO: ./plugins/nv-a.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/group-detect.js -----//

const handler = async (m, { args, text, command, usedPrefix }) => {
  const setting = (args[0] || '').toLowerCase()
  const value = /true|enable|(on)/i.test(command)

  if (!m.isGroup) return m.reply('‚ö†Ô∏è Este comando solo funciona en grupos.')
  if (!isAdmin && !isOwner) return m.reply('‚ö†Ô∏è Solo los admins pueden usar este comando.')

  const chat = global.db.data.chats[m.chat]

  let response = ''

  switch (setting) {
    case 'detect':
      chat.detect = value
      response = `üîß El modo *detect* ha sido ${value ? 'activado ‚úÖ' : 'desactivado ‚ùå'}.`
      break
    case 'welcome':
      chat.welcome = value
      response = `üëã El modo *welcome* ha sido ${value ? 'activado ‚úÖ' : 'desactivado ‚ùå'}.`
      break
    default:
      return m.reply(`‚öôÔ∏è Usa uno de estos comandos:\n\n${usedPrefix}enable detect\n${usedPrefix}disable detect\n${usedPrefix}enable welcome\n${usedPrefix}disable welcome`)
  }

  m.reply(response)
}

handler.command = /^(enable|disable)\s?(detect|welcome)?$/i
handler.group = true
handler.admin = true
handler.tags = ['group']
handler.help = ['enable detect', 'disable welcome', 'enable welcome']

export default handler

//----- FIN DEL ARCHIVO: ./plugins/group-detect.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/test-yo.js -----//

let handler = async (m, { conn, participants }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'

  // Normalizar ID del bot
  const botNumber = conn.user.jid.replace(/:\d+/, '') 

  const botParticipant = participants.find(p => p.id.replace(/:\d+/, '') === botNumber)

  let statusTexto = '‚ùå NO ES ADMINISTRADOR'

  if (botParticipant?.admin === 'admin' || botParticipant?.admin === 'superadmin') {
    statusTexto = '‚úÖ S√ç ES ADMINISTRADOR'
  }

  const botInfo = `*ü§ñ ESTADO DEL BOT EN ESTE GRUPO:*\n\nüÜî *ID:* ${botNumber}\nüë• *Grupo:* ${m.chat}\n\nüîß *¬øEs administrador?* ${statusTexto}`

  m.reply(botInfo)
}

handler.help = ['botadmin']
handler.tags = ['group']
handler.command = /^yo$/i
handler.group = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/test-yo.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/nvso.js -----//

let handler = async (m, { conn }) => {
  try {
    console.log('[üéØ Plugin activado: nvso.js]')

    let av = `./media/${pickRandom(["So1", "So2"])}.webp`
    await conn.sendFile(m.chat, av, 'So1.webp', null, m, true, {
      type: 'stickerMessage',
      ptt: false
    })

  } catch (e) {
    console.error('[‚ùå Error en plugin nvso.js]', e)
    m.reply('‚ùå Error en el plugin.')
  }
}

handler.customPrefix = /^(que|q|k|pq|poke|pk|porque|ke|Khe)$/i
handler.command = false

export default handler

function pickRandom(list) {
  return list[Math.floor(Math.random() * list.length)]
}

//----- FIN DEL ARCHIVO: ./plugins/nvso.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/infogroup.js -----//

let handler = async (m, { conn }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'

  const metadata = await conn.groupMetadata(m.chat)
  const groupName = metadata.subject
  const groupId = m.chat
  const groupDesc = metadata.desc?.toString() || '*Sin descripci√≥n*'
  const owner = metadata.owner || metadata.participants.find(p => p.admin === 'superadmin')?.id
  const admins = metadata.participants.filter(p => p.admin)
  const creationTime = new Date(metadata.creation * 1000).toLocaleString('es-ES', { timeZone: 'America/Sao_Paulo' })

  let info = `
*üìõ NOMBRE:* ${groupName}
üÜî *ID:* ${groupId}
üìÖ *Creado:* ${creationTime}
üëë *Owner:* ${owner ? '@' + owner.split('@')[0] : '*No encontrado*'}
üë• *Miembros:* ${metadata.participants.length}
üîß *Admins:* ${admins.length}
üìù *Descripci√≥n:* 
${groupDesc}
`.trim()

  await conn.sendMessage(m.chat, {
    text: info,
    mentions: owner ? [owner] : [],
  }, { quoted: m })
}

handler.help = ['infogrupo']
handler.tags = ['group']
handler.command = /^infogrupo$/i
handler.group = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/infogroup.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/kick.js -----//

let handler = async (m, { conn, args, participants, isBotAdmin, isAdmin, isOwner, isROwner }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*[‚ùó] El bot necesita ser administrador para expulsar usuarios.*'

  const userToKick = m.mentionedJid?.[0] || m.quoted?.sender
  if (!userToKick) throw '*‚ùó Menciona o responde al mensaje del usuario que deseas expulsar.*'

  const metadata = await conn.groupMetadata(m.chat)
  const ownerId = metadata.owner || metadata.participants.find(p => p.admin === 'superadmin')?.id

  if (userToKick === ownerId) throw '*üö´ No se puede expulsar al creador del grupo.*'
  if (userToKick === conn.user.jid) throw '*üö´ No puedo expulsarme a m√≠ mismo.*'

  const isTargetInGroup = participants.some(p => p.id === userToKick)
  if (!isTargetInGroup) throw '*‚ö†Ô∏è El usuario no est√° en este grupo.*'

  try {
    await conn.groupParticipantsUpdate(m.chat, [userToKick], 'remove')
    await m.reply(`üë¢ Usuario expulsado: @${userToKick.split('@')[0]}`, null, {
      mentions: [userToKick]
    })
  } catch (e) {
    console.error(e)
    throw '*‚ùå Ocurri√≥ un error al intentar expulsar al usuario.*'
  }
}

handler.help = ['kick @usuario']
handler.tags = ['group']
handler.command = /^kick$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/kick.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/promote.js -----//

let handler = async (m, { conn, participants, isAdmin, isOwner, isROwner, isBotAdmin }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*[‚ùó] El bot necesita ser administrador para promover usuarios.*'

  const userToPromote = m.mentionedJid?.[0] || m.quoted?.sender
  if (!userToPromote) throw '*‚ùó Menciona o responde al usuario que deseas promover a admin.*'

  const metadata = await conn.groupMetadata(m.chat)
  const ownerId = (metadata.owner || metadata.participants.find(p => p.admin === 'superadmin')?.id)?.replace(/:\d+/, '')
  const userId = userToPromote.replace(/:\d+/, '')

  if (userId === ownerId) throw '*üö´ No puedes promover al creador, ya lo es por defecto.*'
  if (userId === conn.user.jid.replace(/:\d+/, '')) throw '*üö´ No puedo promoverme a m√≠ mismo.*'

  const isInGroup = participants.some(p => p.id.replace(/:\d+/, '') === userId)
  if (!isInGroup) throw '*‚ùå El usuario no est√° en este grupo.*'

  try {
    await conn.groupParticipantsUpdate(m.chat, [userToPromote], 'promote')
    await m.reply(`‚úÖ Promovido a admin: @${userId.split('@')[0]}`, null, {
      mentions: [userToPromote]
    })
  } catch (e) {
    console.error(e)
    throw '*‚ùå No se pudo promover al usuario.*'
  }
}

handler.help = ['promote @usuario']
handler.tags = ['group']
handler.command = /^(promote|‚Üë)$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/promote.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/demote.js -----//

let handler = async (m, { conn, participants, isAdmin, isOwner, isROwner, isBotAdmin }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*[‚ùó] El bot necesita ser administrador para degradar usuarios.*'

  const userToDemote = m.mentionedJid?.[0] || m.quoted?.sender
  if (!userToDemote) throw '*‚ùó Menciona o responde al usuario que deseas degradar.*'

  const metadata = await conn.groupMetadata(m.chat)
  const ownerId = (metadata.owner || metadata.participants.find(p => p.admin === 'superadmin')?.id)?.replace(/:\d+/, '')
  const userId = userToDemote.replace(/:\d+/, '')

  if (userId === ownerId) throw '*üö´ No puedes degradar al creador del grupo.*'
  if (userId === conn.user.jid.replace(/:\d+/, '')) throw '*üö´ No puedo degradarme a m√≠ mismo.*'

  const isInGroup = participants.some(p => p.id.replace(/:\d+/, '') === userId)
  if (!isInGroup) throw '*‚ùå El usuario no est√° en este grupo.*'

  try {
    await conn.groupParticipantsUpdate(m.chat, [userToDemote], 'demote')
    await m.reply(`‚ùå Usuario degradado: @${userId.split('@')[0]}`, null, {
      mentions: [userToDemote]
    })
  } catch (e) {
    console.error(e)
    throw '*‚ùå No se pudo degradar al usuario.*'
  }
}

handler.help = ['demote @usuario']
handler.tags = ['group']
handler.command = /^(demote$|‚Üì)$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/demote.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/owner-saveimage.js -----//

import fs from 'fs';

let handler = async (m, { text }) => {
  if (!text) throw `Ingrese un nombre para su archivo de imagen y la extensi√≥n deseada (por ejemplo, nombre.png, nombre.jpg, etc.)`;
  if (!m.quoted || !m.quoted.fileSha256) throw `Responde a la imagen que deseas guardar..`;
  let media = await m.quoted.download();
  /*o donde quieras guardar las im√°genes*/
  const path = `src/${text}`;
  await fs.writeFileSync(path, media);
  m.reply(`Imagen guardada como ${path}`);
};

handler.help = ['saveimage <nome>'];
handler.tags = ['tools'];
handler.command = /^(saveimage|sp)$/i;
handler.owner = true;

export default handler;

//----- FIN DEL ARCHIVO: ./plugins/owner-saveimage.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/OC-grupo.js -----//

let handler = async (m, { conn, args, isAdmin, isBotAdmin, isOwner, isROwner }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*[‚ùó] El bot necesita ser administrador para cambiar los permisos del grupo.*'

  const command = args[0]?.toLowerCase()
  if (!['abrir', 'cerrar'].includes(command)) {
    throw '*‚ùó Usa el comando correctamente:* `.g abrir` o `.g cerrar`'
  }

  const action = command === 'abrir' ? 'not_announcement' : 'announcement'

  try {
    await conn.groupSettingUpdate(m.chat, action)
    m.reply(
      command === 'abrir'
        ? '‚úÖ *Grupo abierto para todos los miembros.*'
        : 'üîí *Grupo cerrado. Solo administradores pueden enviar mensajes.*'
    )
  } catch (e) {
    console.error(e)
    throw '*‚ùå Error al cambiar el estado del grupo.*'
  }
}

handler.help = ['g abrir / cerrar']
handler.tags = ['g']
handler.command = /^g$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/OC-grupo.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/setname.js -----//

let handler = async (m, { conn, args, isBotAdmin, isAdmin, isOwner, isROwner }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo funciona en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*[‚ùó] El bot necesita ser administrador para cambiar el nombre del grupo.*'

  const newName = args.join(' ')
  if (!newName) throw '*‚ùó Debes escribir el nuevo nombre del grupo.*\n\nEjemplo:\n.setname Fiesta üî•'

  if (newName.length > 75) throw '*‚ùó El nombre no puede tener m√°s de 75 caracteres.*'

  try {
    await conn.groupUpdateSubject(m.chat, newName)
    m.reply(`‚úÖ *Nombre del grupo actualizado a:*\n${newName}`)
  } catch (e) {
    console.error(e)
    throw '*‚ùå No se pudo cambiar el nombre del grupo.*'
  }
}

handler.help = ['setname <nuevo nombre>']
handler.tags = ['group']
handler.command = /^setname$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/setname.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/Pink.js -----//

import { sticker } from '../lib/sticker.js'
import { downloadContentFromMessage } from '@whiskeysockets/baileys'

const handler = async (m, { conn }) => {
  try {
    
    
    const quoted = m.quoted || m
    const mime = (quoted.msg || quoted).mimetype || quoted.mediaType || ''

    

    if (!/image|video|webp/.test(mime)) {
      return m.reply('*solo 7 segundos.*')
    }

    if (/video/.test(mime)) {
      if ((quoted.msg || quoted).seconds > 7) {
        return m.reply('*solo 7 segundos.*')
      }
    }

    const type = mime.split('/')[0]
    const ext = mime.split('/')[1]
    const stream = await downloadContentFromMessage(quoted.msg || quoted, type)

    let buffer = Buffer.from([])
    for await (const chunk of stream) {
      buffer = Buffer.concat([buffer, chunk])
    }

    if (!buffer || buffer.length === 0) {
      throw new Error('No')
    }

    const stiker = await sticker(buffer, false, global.packname || 'Sticker', global.author || '')

    if (!stiker) {
      throw new Error('fall√≥.')
    }

    await conn.sendFile(m.chat, stiker, 'sticker.webp', '', m)
  } catch (e) {
    console.error('[üî• ERROR STICKER]:', e)
    m.reply('*Aseg√∫rate. de que el archivo sea v√°lido.*')
  }
}

handler.help = ['s']
handler.tags = ['sticker']
handler.command = /^s(tic?ker)?(gif)?(wm)?$/i

export default handler

//----- FIN DEL ARCHIVO: ./plugins/Pink.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/setdesc.js -----//

let handler = async (m, { conn, args, isBotAdmin, isAdmin, isOwner, isROwner }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo funciona en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*[‚ùó] El bot necesita ser administrador para cambiar la descripci√≥n.*'

  const newDesc = args.join(' ')
  if (!newDesc) throw '*‚ùó Debes escribir la nueva descripci√≥n del grupo.*\n\nEjemplo:\n.setdesc Grupo oficial de noticias üì∞'

  if (newDesc.length > 500) throw '*‚ùó La descripci√≥n no puede tener m√°s de 500 caracteres.*'

  try {
    await conn.groupUpdateDescription(m.chat, newDesc)
    m.reply('‚úÖ *Descripci√≥n del grupo actualizada correctamente.*')
  } catch (e) {
    console.error(e)
    throw '*‚ùå No se pudo cambiar la descripci√≥n del grupo.*'
  }
}

handler.help = ['setdesc <nueva descripci√≥n>']
handler.tags = ['group']
handler.command = /^setdesc$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/setdesc.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/hidetag.js -----//

let handler = async (m, { conn, participants, isAdmin, isOwner, isROwner, isBotAdmin, args }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*[‚ùó] El bot necesita ser administrador para mencionar a todos.*'

  const text = args.join(' ') || (m.quoted?.text || '').trim()
  if (!text) throw '*‚ùó Escribe el mensaje que deseas enviar con menciones ocultas.*'

  const users = participants.map(p => p.id).filter(v => v !== conn.user.jid)

  await conn.sendMessage(m.chat, {
    text,
    mentions: users
  }, { quoted: m })
}

handler.help = ['hidetag <mensaje>']
handler.tags = ['group']
handler.command = /^hidetag$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/hidetag.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/welcome.js -----//

let handler = async (m, { conn, args, isAdmin, isROwner, isOwner, isBotAdmin }) => {
  if (!m.isGroup) throw '*[‚ùó] Este comando solo se puede usar en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*[‚ùó] Solo los administradores pueden activar o desactivar la bienvenida.*'

  const estado = args[0]?.toLowerCase()
  if (!['on', 'off'].includes(estado)) throw '*‚ùó Usa `.welcome on` para activar o `.welcome off` para desactivar.*'

  global.db.data.chats[m.chat].welcome = estado === 'on'

  m.reply(`‚úÖ Funci√≥n de bienvenida *${estado === 'on' ? 'activada' : 'desactivada'}* correctamente.`)
}

handler.help = ['welcome on/off']
handler.tags = ['group']
handler.command = /^welcome$/i
handler.group = true
handler.admin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/welcome.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/mute.js -----//

let handler = async (m, { conn, isAdmin, isOwner, isROwner, participants, command, args }) => {
  if (!m.isGroup) throw '*Este comando solo funciona en grupos.*'
  const chatId = m.chat
  if (!global.db.data.chats[chatId]) global.db.data.chats[chatId] = {}
  const chat = global.db.data.chats[chatId]
  if (!chat.mutedUsers || !Array.isArray(chat.mutedUsers)) chat.mutedUsers = []

  const text = m.text || ''
  const mention = m.mentionedJid?.[0] || (text.match(/@(\d{5,})/) ? text.match(/@(\d{5,})/)[1] + '@s.whatsapp.net' : null)

  console.log('Comando:', command)
  console.log('Menci√≥n detectada:', mention)
  console.log('MutedUsers antes:', chat.mutedUsers)

  if (/^mute$/i.test(command)) {
    if (!(isAdmin || isOwner || isROwner)) throw '*Solo administradores pueden silenciar.*'
    if (!mention) throw '*Debes mencionar a alguien para silenciar.*'
    if (chat.mutedUsers.includes(mention)) {
      chat.mutedUsers = chat.mutedUsers.filter(jid => jid !== mention)
      m.reply('üîä Usuario ya estaba silenciado. Ahora ha sido des-silenciado.')
    } else {
      chat.mutedUsers.push(mention)
      m.reply('üîá Usuario silenciado. Todos sus mensajes ser√°n eliminados autom√°ticamente.')
    }
    console.log('MutedUsers despu√©s:', chat.mutedUsers)
  }

  if (/^unmute$/i.test(command)) {
    if (!(isAdmin || isOwner || isROwner)) throw '*Solo administradores pueden des-silenciar.*'
    if (!mention) throw '*Debes mencionar a alguien para des-silenciar.*'
    if (!chat.mutedUsers.includes(mention)) throw '*Ese usuario no est√° silenciado.*'
    chat.mutedUsers = chat.mutedUsers.filter(jid => jid !== mention)
    m.reply('üîä Usuario des-silenciado correctamente.')
    console.log('MutedUsers despu√©s:', chat.mutedUsers)
  }

  if (/^unmuteall$/i.test(command)) {
    if (!(isAdmin || isOwner || isROwner)) throw '*Solo administradores pueden usar este comando.*'
    if (!chat.mutedUsers.length) return m.reply('*No hay usuarios silenciados.*')
    chat.mutedUsers = []
    m.reply('üîä Todos los usuarios han sido des-silenciados.')
    console.log('MutedUsers despu√©s:', chat.mutedUsers)
  }

  if (/^listmute$/i.test(command)) {
    if (!chat.mutedUsers.length) return m.reply('*No hay usuarios silenciados en este grupo.*')
    const list = chat.mutedUsers.map((jid, i) => {
      const name = participants.find(p => p.id === jid)?.name || jid.split('@')[0]
      return `${i + 1}. @${jid.split('@')[0]} (${name})`
    }).join('\n')
    return conn.reply(m.chat, `üîá *Usuarios silenciados:*\n\n${list}`, m, { mentions: chat.mutedUsers })
  }
}

handler.command = /^(mute|unmute|unmuteall|listmute)$/i
handler.group = true
export default handler
//----- FIN DEL ARCHIVO: ./plugins/mute.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/del.js -----//

let handler = async (m, { conn, isAdmin, isOwner, isROwner, isBotAdmin }) => {
  if (!m.isGroup) throw '*Este comando solo funciona en grupos.*'
  if (!(isAdmin || isOwner || isROwner)) throw '*Solo los administradores pueden usar este comando.*'
  if (!isBotAdmin) throw '*El bot necesita ser administrador para borrar mensajes.*'
  if (!m.quoted) throw '*Debes responder a un mensaje v√°lido para eliminarlo.*'

  try {
    const chat = m.chat
    const quoted = m.quoted
    const id = quoted.id || quoted.key?.id
    const participant = quoted.participant || quoted.key?.participant || quoted.sender

    if (!id || !participant) throw '‚ùå No se pudo identificar correctamente el mensaje.'

    await conn.sendMessage(chat, {
      delete: {
        remoteJid: chat,
        fromMe: false,
        id: id,
        participant: participant
      }
    })
  } catch (e) {
    console.error(e)
    throw '*‚ùå No se pudo eliminar el mensaje. Puede que WhatsApp no lo permita o que no tenga permisos suficientes.*'
  }
}

handler.help = ['del']
handler.tags = ['group']
handler.command = /^del$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/del.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/limpiarmsg.js -----//

let delay = ms => new Promise(res => setTimeout(res, ms))

let handler = async (m, { conn }) => {
  if (!m.isGroup) throw '*Este comando solo funciona en grupos.*'

  const chatId = m.chat
  const botId = conn.user.jid
  const userId = m.sender

  const cache = global.db._msgCache?.[chatId]
  if (!cache || !cache.length) throw '*No hay mensajes recientes almacenados.*'

  const recentCache = [...cache].reverse() // Prioriza mensajes recientes

  let deleted = 0
  let total = 0
  const MAX = 50

  for (const msg of recentCache) {
    if (total >= MAX) break

    const sender = msg.key.fromMe ? botId : (msg.participant || msg.key.participant || msg.key.remoteJid)

    if ([botId, userId].includes(sender)) {
      try {
        await conn.sendMessage(chatId, {
          delete: {
            remoteJid: chatId,
            fromMe: msg.key.fromMe,
            id: msg.key.id,
            participant: msg.participant || msg.key.participant || msg.key.remoteJid
          }
        })
        deleted++
        await delay(500)
      } catch (e) {
        total++
        if (e?.message?.includes?.('rate-overlimit') || e?.output?.statusCode === 500) {
          console.warn('‚ö†Ô∏è rate-overlimit al eliminar mensaje, se pausar√°.')
        } else {
          console.error('‚ùå Error al eliminar mensaje:', e)
        }
        await delay(1000)
      }
    }
  }

  await m.reply(`üßπ Se eliminaron ${deleted} mensajes recientes del bot y tuyos.`)
}

handler.help = ['limpiar']
handler.tags = ['group']
handler.command = /^limpiar$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/limpiarmsg.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/limpiaruser.js -----//

let delay = ms => new Promise(res => setTimeout(res, ms))

let handler = async (m, { conn }) => {
  if (!m.isGroup) throw '*Este comando solo funciona en grupos.*'

  const chatId = m.chat
  const botId = conn.user.jid
  const userId = m.sender
  const mentionedUserId = m.mentionedJid?.[0] || m.text.split('@')[1] + '@s.whatsapp.net'

  if (!mentionedUserId) throw '*Debes mencionar un usuario para limpiar sus mensajes.*'

  const cache = global.db._msgCache?.[chatId]
  if (!cache || !cache.length) throw '*No hay mensajes recientes almacenados.*'

  const recentCache = [...cache].reverse() // Prioriza los m√°s recientes

  let deleted = 0
  let total = 0
  const MAX = 50

  for (const msg of recentCache) {
    if (total >= MAX) break

    const sender = msg.key.fromMe ? botId : (msg.participant || msg.key.participant || msg.key.remoteJid)

    if (sender === mentionedUserId) {
      try {
        await conn.sendMessage(chatId, {
          delete: {
            remoteJid: chatId,
            fromMe: msg.key.fromMe,
            id: msg.key.id,
            participant: msg.participant || msg.key.participant || msg.key.remoteJid
          }
        })
        deleted++
        total++
        await delay(500) // Pausa entre cada eliminaci√≥n
      } catch (e) {
        if (e?.message?.includes?.('rate-overlimit') || e?.output?.statusCode === 500) {
          // En caso de alcanzar el rate limit, no mostramos el error al grupo
          console.warn('‚ö†Ô∏è Rate limit alcanzado al eliminar mensajes.')
          await m.reply('*‚ö†Ô∏è Se alcanz√≥ el l√≠mite de solicitudes. No se pudieron eliminar m√°s mensajes.*')
        } else {
          console.error('‚ùå Error al eliminar mensaje:', e)
          await m.reply('*‚ùå Hubo un problema al eliminar algunos mensajes. Intenta m√°s tarde.*')
        }
        await delay(1000) // Pausa mayor si hay error
      }
    }
  }

  await m.reply(`üßπ Se eliminaron ${deleted} mensajes del usuario @${mentionedUserId.split('@')[0]}.`)
}

handler.help = ['limpiar']
handler.tags = ['group']
handler.command = /^limp$/i
handler.group = true
handler.admin = true
handler.botAdmin = true

export default handler

//----- FIN DEL ARCHIVO: ./plugins/limpiaruser.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/loadMessage.js -----//

let handler = async (m, { conn }) => {
  const delay = ms => new Promise(res => setTimeout(res, ms))

  const empty = '„Ö§'
  const frames = [
    `üëâ${empty.repeat(3)}`,
    `${empty}üëå${empty.repeat(2)}`,
    `${empty.repeat(2)}üëâ${empty}`,
    `${empty.repeat(3)}üëå`
  ]

  const rawSender = typeof m.sender === 'string' ? m.sender : ''
  // Ya no usar replace que puede romper el JID
  const number = rawSender.split('@')[0]
  const mentionJid = rawSender

  let sent = await conn.sendMessage(m.chat, {
    text: `Aqu√≠ va una se√±al para ti, @${number}...`,
    mentions: [mentionJid]
  }, { quoted: m })

  await delay(2500)

  for (let i = 0; i < 2; i++) {
    for (const frame of frames) {
      await delay(700)
      await conn.sendMessage(m.chat, {
        text: frame,
        edit: sent.key // IMPORTANTE: usar la key completa para editar
      })
    }
  }

  await conn.sendMessage(m.chat, {
    text: `¬øCaptas la indirecta? üòè @${number}`,
    mentions: [mentionJid],
    edit: sent.key
  })
}

handler.customPrefix = /^(TROLL|Troll|troll)$/i
handler.command = false

export default handler
//----- FIN DEL ARCHIVO: ./plugins/loadMessage.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/centrodecontrol.js -----//

import fs from 'fs'

const ALIAS_FILE = './src/aliases.json'
const OWNER = '5521989050540@s.whatsapp.net' // ‚Üê tu n√∫mero completo

// Carga segura de alias desde archivo JSON
let chatAliases = {}
if (fs.existsSync(ALIAS_FILE)) {
  try {
    chatAliases = JSON.parse(fs.readFileSync(ALIAS_FILE, 'utf-8'))
  } catch {
    console.warn(`‚ö†Ô∏è Archivo ${ALIAS_FILE} corrupto o inv√°lido, se usar√° un objeto vac√≠o.`)
    chatAliases = {}
  }
}

function saveAliases() {
  try {
    fs.writeFileSync(ALIAS_FILE, JSON.stringify(chatAliases, null, 2))
  } catch (e) {
    console.error('‚ùå Error guardando aliases:', e)
  }
}

// Normaliza jid quitando ":49" si existe
function normalizeJid(jid = '') {
  if (typeof jid !== 'string') return ''
  return jid.split(':')[0]
}

// A√±ade sufijo correcto si falta
function fixJid(jid = '') {
  if (typeof jid !== 'string') return ''
  if (!jid.includes('@')) {
    if (/^\d{10,}$/.test(jid)) return jid + '@s.whatsapp.net' // n√∫mero
    if (jid.includes('-')) return jid + '@g.us' // grupo
  }
  return jid
}

let handler = async (m, { conn, args = [], command }) => {
  const sender = normalizeJid(m.sender)
  if (sender !== OWNER) return // solo t√∫ puedes usarlo

  // LISTAR CHATS EN CACHE PARA USAR EN ALIAS
  if (command === 'listchats') {
    try {
      if (!global.db?._msgCache) return m.reply('‚ùå No hay chats en cach√© para listar.')

      const chats = Object.keys(global.db._msgCache)
      if (chats.length === 0) return m.reply('‚ùå No hay chats en cach√© para listar.')

      let chatsText = '*üìã Chats y grupos disponibles:*\n\n'

      for (const jid of chats) {
        let name = ''
        try {
          if (jid.endsWith('@g.us')) {
            const metadata = await conn.groupMetadata(jid).catch(() => null)
            name = metadata?.subject || ''
          } else {
            const contact = conn.contacts?.[jid] || {}
            name = contact.name || contact.notify || ''
          }
        } catch {
          // ignorar error
        }
        chatsText += `‚Ä¢ ${name || 'Sin nombre'}\n  ID: ${jid}\n\n`
      }

      return m.reply(chatsText)
    } catch (e) {
      console.error('‚ùå Error al listar chats:', e)
      return m.reply('‚ùå Error al listar chats.')
    }
  }

  // SISTEMA DE ALIAS
  if (command === 'alias') {
    const sub = args[0]?.toLowerCase()
    const name = args[1]?.toLowerCase()
    let value = args[2]

    if (sub === 'add') {
      if (!name || !value) return m.reply('‚ùå Uso: .alias add <nombre> <chatID>')
      value = fixJid(value.toLowerCase())
      chatAliases[name] = value
      saveAliases()
      return m.reply(`‚úÖ Alias "${name}" agregado con ID "${value}".`)
    }

    if (sub === 'del') {
      if (!name) return m.reply('‚ùå Uso: .alias del <nombre>')
      if (!chatAliases[name]) return m.reply('‚ùå Alias no encontrado.')
      delete chatAliases[name]
      saveAliases()
      return m.reply(`‚úÖ Alias "${name}" eliminado.`)
    }

    if (sub === 'list') {
      if (Object.keys(chatAliases).length === 0) return m.reply('üì≠ No tienes alias guardados.')
      let list = Object.entries(chatAliases).map(([k, v]) => `‚Ä¢ ${k} ‚Üí ${v}`).join('\n')
      return m.reply('üìí Alias guardados:\n' + list)
    }

    return m.reply('‚ùå Subcomando inv√°lido. Usa:\n.alias add/del/list')
  }

  // SISTEMA PARA EJECUTAR COMANDOS EN OTROS CHATS VIA ALIAS
  if (command === 'run') {
    if (args.length < 2) return m.reply('‚ùå Uso: .run <alias> <comando> [args]')

    const alias = args[0].toLowerCase()
    const chatId = chatAliases[alias]

    if (!chatId) return m.reply('‚ùå Alias no encontrado.')

    const realCommand = args[1]
    const realArgs = args.slice(2)
    const fakeText = `${realCommand} ${realArgs.join(' ')}`.trim()

    // Generar un id √∫nico para el mensaje falso, para evitar conflicto con id duplicados
    const fakeId = `fakeMsg-${Date.now()}-${Math.random().toString(36).slice(2, 10)}`

    let fakeMsg = {
      ...m,
      key: {
        remoteJid: chatId,
        fromMe: true,           // El bot "env√≠a" el mensaje
        id: fakeId,
        participant: OWNER
      },
      message: {
        conversation: fakeText
      },
      chat: chatId,
      sender: OWNER,
      fromMe: true
    }

    try {
      // Emite el mensaje simulado para que el bot lo procese
      conn.ev.emit('messages.upsert', {
        messages: [fakeMsg],
        type: 'notify'
      })

      return m.reply(`‚úÖ Comando enviado a "${alias}": ${fakeText}`)
    } catch (e) {
      console.error('‚ùå Error enviando comando simulado:', e)
      return m.reply('‚ùå Error enviando comando simulado.')
    }
  }
}

handler.help = ['alias', 'run', 'listchats']
handler.tags = ['tools']
handler.command = ['alias', 'run', 'listchats']
handler.rowner = true

export default handler
//----- FIN DEL ARCHIVO: ./plugins/centrodecontrol.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/loadAnimation.js -----//


//----- FIN DEL ARCHIVO: ./plugins/loadAnimation.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/chatID.js -----//

const handler = async (m, { conn }) => {
  console.log(`[DEBUG] Comando ${m.command} recibido de ${m.sender} en chat ${m.chat}`)

  try {
    if (!global.db?.data?.chats) return m.reply('No hay chats guardados en la base de datos.')

    const chats = Object.keys(global.db.data.chats)
    if (chats.length === 0) return m.reply('No hay chats en la base de datos.')

    let text = 'üìã *Lista de chats y sus IDs:*\n\n'

    for (const chatId of chats) {
      let name = ''
      try {
        const metadata = await conn.groupMetadata(chatId)
        name = metadata.subject || ''
      } catch {
        // No es grupo
      }

      if (!name) {
        name = chatId.includes('@s.whatsapp.net') ? 'Chat privado' : 'Sin nombre'
      }

      text += `‚Ä¢ ${name}\n  ID: ${chatId}\n\n`
    }

    if (text.length > 4000) {
      const chunks = text.match(/.{1,4000}/gs)
      for (const chunk of chunks) {
        await m.reply(chunk)
      }
    } else {
      await m.reply(text)
    }

  } catch (e) {
    console.error(e)
    m.reply('*‚ùå Error al listar chats.*')
  }
}

handler.command = ['listarchats', 'chatids']
handler.help = ['listarchats', 'chatids']
handler.tags = ['info']
handler.rowner = true
handler.register = false
handler.limit = false

export default handler
//----- FIN DEL ARCHIVO: ./plugins/chatID.js -----//



//----- INICIO DEL ARCHIVO: ./plugins/buttonsEngine.js -----//

import pkg from '@whiskeysockets/baileys'
const { proto, generateWAMessageFromContent } = pkg

async function sendCustomButtons(conn, jid, quoted) {
  const buttonMessage = {
    templateMessage: {
      hydratedTemplate: {
        hydratedContentText: '¬øQuieres continuar?',
        hydratedFooterText: 'Botones artesanales',
        hydratedButtons: [
          proto.TemplateButton.hydratedQuickReplyButton({
            displayText: '‚úÖ S√≠',
            id: '.si'
          }),
          proto.TemplateButton.hydratedQuickReplyButton({
            displayText: '‚ùå No',
            id: '.no'
          }),
          proto.TemplateButton.hydratedQuickReplyButton({
            displayText: '‚ÑπÔ∏è Info',
            id: '.info'
          }),
        ]
      }
    }
  }

  const msg = generateWAMessageFromContent(jid, buttonMessage, {
    userJid: conn.user.jid,
    quoted
  })

  await conn.relayMessage(jid, msg.message, { messageId: msg.key.id })
}

export { sendCustomButtons } // üîÅ necesario para importar en otros plugins
//----- FIN DEL ARCHIVO: ./plugins/buttonsEngine.js -----//



//----- INICIO DEL ARCHIVO: ./server.js -----//

import express from 'express'
import { createServer } from 'http'
import { toBuffer } from 'qrcode'
import fetch from 'node-fetch'

function connect(conn, PORT) {
  let app = global.app = express()
  let server = global.server = createServer(app)
  let _qr = 'invalid'
  let _pairingCode = null

  // Escucha eventos de conexi√≥n
  conn.ev.on('connection.update', async (update) => {
    const { qr, pairingCode, connection } = update

    if (qr) {
      _qr = qr
      console.log('\nüü° [QR DETECTADO] Escan√©alo desde WhatsApp Web o m√≥vil.\n')
    }

    if (pairingCode) {
      _pairingCode = pairingCode
      console.log('\nüü¢ [C√ìDIGO DE EMPAREJAMIENTO]:', pairingCode, '\n')
    }

    if (connection === 'open') {
      console.log('‚úÖ Bot conectado exitosamente a WhatsApp.')
    }

    if (connection === 'close') {
      console.log('üî¥ Conexi√≥n cerrada con WhatsApp.')
    }
  })

  // Si se accede por navegador, responde con el QR en PNG o con el c√≥digo
  app.use(async (req, res) => {
    res.setHeader('content-type', 'text/html')

    if (_pairingCode) {
      res.end(`<h1>C√≥digo de emparejamiento:</h1><pre style="font-size:2em">${_pairingCode}</pre>`)
      return
    }

    if (_qr === 'invalid') {
      res.end('<h1>QR a√∫n no disponible, espera unos segundos...</h1>')
      return
    }

    try {
      const buffer = await toBuffer(_qr)
      res.setHeader('content-type', 'image/png')
      res.end(buffer)
    } catch (e) {
      console.error('‚ùå Error al generar QR:', e)
      res.status(500).send('Error al generar QR')
    }
  })

  server.listen(PORT, () => {
    console.log(`\nüöÄ Servidor QR escuchando en: http://localhost:${PORT}/\n`)
    if (opts?.keepalive) keepAlive()
  })
}

function keepAlive() {
  const url = `https://${process.env.REPL_SLUG}.${process.env.REPL_OWNER}.repl.co`
  if (/(\/\/|\.)undefined\./.test(url)) return
  setInterval(() => {
    fetch(url).catch(console.error)
  }, 5 * 60 * 1000)
}

function pipeEmit(event, event2, prefix = '') {
  let old = event.emit
  event.emit = function (event, ...args) {
    old.emit(event, ...args)
    event2.emit(prefix + event, ...args)
  }
  return {
    unpipeEmit() {
      event.emit = old
    }
  }
}

export default connect
//----- FIN DEL ARCHIVO: ./server.js -----//



//----- INICIO DEL ARCHIVO: ./src/aliases.json -----//

{
  "120363403071825528@g.us": "test"
}
//----- FIN DEL ARCHIVO: ./src/aliases.json -----//



//----- INICIO DEL ARCHIVO: ./test.js -----//

import fs from 'fs'
import path, { dirname } from 'path'
import assert from 'assert'
import { spawn } from 'child_process'
import syntaxError from 'syntax-error'
import { fileURLToPath } from 'url'
import { createRequire } from 'module'
const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)
const require = createRequire(__dirname)
let folders = ['.', ...Object.keys(require(path.join(__dirname, './package.json')).directories)]
let files = []
for (let folder of folders)
for (let file of fs.readdirSync(folder).filter(v => v.endsWith('.js')))
files.push(path.resolve(path.join(folder, file)))
for (let file of files) {
if (file == __filename) continue
console.error('Checking', file)
const error = syntaxError(fs.readFileSync(file, 'utf8'), file, {
sourceType: 'module',
allowReturnOutsideFunction: true,
allowAwaitOutsideFunction: true
})
if (error) assert.ok(error.length < 1, file + '\n\n' + error)
assert.ok(file)
console.log('Done', file)
}

//----- FIN DEL ARCHIVO: ./test.js -----//



//----- INICIO DEL ARCHIVO: ./database.json -----//

{
  "users": {
    "undefined": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 10,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catngexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0,
      "petFood": 0,
      "catexp": 0
    },
    "573155015027@s.whatsapp.net": {
      "exp": 20089,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "afk": 1753807250891,
      "name": "i'‡πì Chaos",
      "age": -1,
      "regTime": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "94674131918962@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "228118900007067@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "29090249740486@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "36799883808789@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "15024282189999@lid": {
      "exp": 15,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Steicy",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "26865154699476@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "264733814952055@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "12035658482@s.whatsapp.net": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "559182954358@s.whatsapp.net": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "556581278077@s.whatsapp.net": {
      "afk": 1753807230663,
      "exp": 55,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "sopromos",
      "age": -1,
      "regTime": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "221487336308871@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "157578726273273@lid": {
      "exp": 15499,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "afk": 1753807217801,
      "name": "~Lucas",
      "age": -1,
      "regTime": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "10531477942308@lid": {
      "exp": 5000,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "afk": 1753807267687
    },
    "98595973939400@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "276012382322761@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "113700719603716@lid": {
      "exp": 0,
      "limit": 10,
      "lastclaim": 0,
      "registered": false
    },
    "263629437968535@lid": {
      "exp": 265,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": ".",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "2104919875644@lid": {
      "exp": 329,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Wedler Âçê‚Äç‚Äçüôã",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521989050540:39@s.whatsapp.net": {
      "exp": 9992,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "‡∂û„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "79354100990017@lid": {
      "exp": 78,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Lukyüçí",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "50575235869@s.whatsapp.net": {
      "exp": 38,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "¬øùîáùîûùî´ùî´ùî¢€µ",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "573117488117@s.whatsapp.net": {
      "exp": 13,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Garc√©s",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "18053999999@s.whatsapp.net": {
      "exp": 49,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Alex Pz",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "149928751976565@lid": {
      "exp": 173,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "üê¢",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "555491107924@s.whatsapp.net": {
      "exp": 60,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Economizei",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "50582792112@s.whatsapp.net": {
      "exp": 15,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "yaha.",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "34640640564@s.whatsapp.net": {
      "exp": 118,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Aitii üéÄ",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "573009440619@s.whatsapp.net": {
      "exp": 32,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Adrian.Xs",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "573248131846@s.whatsapp.net": {
      "exp": 45,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "gab.",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "193655897886799@lid": {
      "exp": 198,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Tuco",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "81535793422566@lid": {
      "exp": 93,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Javi",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "50492380550@s.whatsapp.net": {
      "exp": 30,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Tea~ü¶¶",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "95142417559661@lid": {
      "exp": 95,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "S√∏fiiiüßø",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "584141495621@s.whatsapp.net": {
      "exp": 53,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Alex.gxx",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "556581365750@s.whatsapp.net": {
      "exp": 206,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "X",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "174693734736084@lid": {
      "exp": 215,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Elias",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "165614391939121@lid": {
      "exp": 184,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Ruy",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "556696927581@s.whatsapp.net": {
      "exp": 70,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Pobre",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "51924669995@s.whatsapp.net": {
      "exp": 19,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "juan_valenciaga",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "59160473738@s.whatsapp.net": {
      "exp": 10,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "luu",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5214771092635@s.whatsapp.net": {
      "exp": 23,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "so",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5213511259829@s.whatsapp.net": {
      "exp": 15,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Sam",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5493438443578@s.whatsapp.net": {
      "exp": 30,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Nahue",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "51951581081@s.whatsapp.net": {
      "exp": 5,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Queen.",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "99996082921567@lid": {
      "exp": 78,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Cori.",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "271141721624609@lid": {
      "exp": 13,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Alex",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "555481354259@s.whatsapp.net": {
      "exp": 47,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "orei",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "257887083454470@lid": {
      "exp": 2631,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "_nitram_:b",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "83503123296494@lid": {
      "exp": 9,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "tiziano",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5216644760679@s.whatsapp.net": {
      "exp": 301,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "ùì¶ùì±ùì∏ ùì≤ùìº ùìíùì±ùì™ùì∑ùìÆùìµ?",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "184825881333889@lid": {
      "exp": 714,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Lucas Martinez",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "584261924540@s.whatsapp.net": {
      "exp": 43,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Yule Afanador",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5492657288446@s.whatsapp.net": {
      "exp": 9,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Wedler Âçê‚Äç‚Äçüôã",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "188343426015339@lid": {
      "exp": 331,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "‡∂û„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "50587360336@s.whatsapp.net": {
      "exp": 41,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "ùò†ùò∞ùò≥ùò¨ ‚ú≠",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5493482237731@s.whatsapp.net": {
      "exp": 100,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Spanky¬°‚òÖ!",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "263492032540833@lid": {
      "exp": 589,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Renzo",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521984639422@s.whatsapp.net": {
      "exp": 20,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "ELISA REYES",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "51994680949@s.whatsapp.net": {
      "exp": 8,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "+51 994 680 949",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521990868219@s.whatsapp.net": {
      "exp": 15,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Maric√° Info",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "78752520372352@lid": {
      "exp": 6,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Fabrii",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521993827196@s.whatsapp.net": {
      "exp": 26,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "William",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "58381540819161@lid": {
      "exp": 8,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "üêê",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521983547162@s.whatsapp.net": {
      "exp": 2,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Claudia Abreu",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "573178692708@s.whatsapp.net": {
      "exp": 37,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Rossy",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "34642467703@s.whatsapp.net": {
      "exp": 65,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "+34 642 46 77 03",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "232177442750627@lid": {
      "exp": 38,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "ùñÄùñìùïªùñôùñîùï¨ùñâùñóùñéùñç15",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "105875423367262@lid": {
      "exp": 919,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "…¢ è√∂·¥ã·¥á Ä·¥áÍú± ¬π‚Å¥",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "227199676321950@lid": {
      "exp": 124,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Miaa",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "558688108345@s.whatsapp.net": {
      "exp": 6,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "¬©",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "584167198661@s.whatsapp.net": {
      "exp": 8,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "JuanB",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "51901781656@s.whatsapp.net": {
      "exp": 2,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Nico",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521996086210@s.whatsapp.net": {
      "exp": 9,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Aline",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5491173667044@s.whatsapp.net": {
      "exp": 17,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Takitaki",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "50254287307@s.whatsapp.net": {
      "exp": 26,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Naeilith",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "157157450334309@lid": {
      "exp": 14,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "anilenkim",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "268165460291707@lid": {
      "exp": 3,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "TrixxÀ£ ≤ ≤",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "120363151254595828@newsletter": {
      "exp": 84,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "162869891096610@lid": {
      "exp": 24,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "‚ñ†wachorneim",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521967345289@s.whatsapp.net": {
      "exp": 2,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Maric√° Info Oficial",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "120363170942886188@newsletter": {
      "exp": 12,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "555591058696@s.whatsapp.net": {
      "exp": 47,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Adm",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "100218783674565@lid": {
      "exp": 18,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "ƒπ√ª√ß√¶¬ß",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "230988072354019@lid": {
      "exp": 277,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "nani",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "114426669703206@lid": {
      "exp": 49,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Nelson",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "584144237864@s.whatsapp.net": {
      "exp": 27,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "will",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521989050540:49@s.whatsapp.net": {
      "exp": 3731,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "‡∂û„Ö§‚±Æ÷ÖŸÑ√¨’ß÷Ö",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "127453154566336@lid": {
      "exp": 31,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "‚ù§Ô∏èflorcita‚ù§Ô∏è",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "265497966838008@lid": {
      "exp": 37,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "cŸ• ∑‚ÇöÕ¶·ü∞·∑ú‚ç≥Ÿ•À¢",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5213151681025@s.whatsapp.net": {
      "exp": 9,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Ady",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "90443555573862@lid": {
      "exp": 31,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "mateo",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5491166582193@s.whatsapp.net": {
      "exp": 7,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "sheiüôÉüá≥üá´",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "584260369076@s.whatsapp.net": {
      "exp": 31,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Flor Galenoüëë",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "43920973164793@lid": {
      "exp": 11,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Lautaro",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5536397434884@lid": {
      "exp": 819,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Ôº¶Ôº≤Ôº°ÔºÆÔº£ÔºØ",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "51957942687@s.whatsapp.net": {
      "exp": 17,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Alissüßöüèª‚Äç‚ôÄÔ∏è",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5214741531995@s.whatsapp.net": {
      "exp": 1,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Citlalli",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "280968472580208@lid": {
      "exp": 109,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Gri",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "70609295904911@lid": {
      "exp": 6,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Junco",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "556581241524@s.whatsapp.net": {
      "exp": 16,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "orei",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "556692072807@s.whatsapp.net": {
      "exp": 5,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Pobres",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    },
    "5521971047541@s.whatsapp.net": {
      "exp": 2,
      "limit": 10,
      "lastclaim": 0,
      "registered": false,
      "name": "Adriana",
      "age": -1,
      "regTime": -1,
      "afk": -1,
      "afkReason": "",
      "banned": false,
      "warn": 0,
      "level": 0,
      "role": "Novato",
      "autolevelup": true,
      "money": 0,
      "health": 100,
      "potion": 0,
      "trash": 0,
      "wood": 0,
      "rock": 0,
      "string": 0,
      "petFood": 0,
      "emerald": 0,
      "diamond": 0,
      "gold": 0,
      "iron": 0,
      "common": 0,
      "uncommon": 0,
      "mythic": 0,
      "legendary": 0,
      "pet": 0,
      "horse": 0,
      "horseexp": 0,
      "cat": 0,
      "catexp": 0,
      "fox": 0,
      "foxexp": 0,
      "dog": 0,
      "dogexp": 0,
      "horselastfeed": 0,
      "catlastfeed": 0,
      "foxlastfeed": 0,
      "doglastfeed": 0,
      "armor": 0,
      "armordurability": 0,
      "sword": 0,
      "sworddurability": 0,
      "pickaxe": 0,
      "pickaxedurability": 0,
      "fishingrod": 0,
      "fishingroddurability": 0,
      "lastadventure": 0,
      "lastfishing": 0,
      "lastdungeon": 0,
      "lastduel": 0,
      "lastmining": 0,
      "lasthunt": 0,
      "lastweekly": 0,
      "lastmonthly": 0
    }
  },
  "chats": {
    "undefined": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": true,
      "autosticker": false,
      "audios": true,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363135817822750@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363401215457265@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363401732807704@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "5521989050540@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363418820652430@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "556581365750@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363417569640068@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363403071825528@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "status@broadcast": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363401201926742@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363399123245698@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "584261924540@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "5216644760679@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "595986460945@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "34642467703@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "50499698072@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "51940617554@s.whatsapp.net": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363170776923014@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "232177442750627@lid": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363214060610934@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363151254595828@newsletter": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363170942886188@newsletter": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363402999230883@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    },
    "120363401370467924@g.us": {
      "isBanned": false,
      "welcome": true,
      "detect": true,
      "sWelcome": "",
      "sBye": "",
      "sPromote": "",
      "sDemote": "",
      "delete": true,
      "modohorny": false,
      "autosticker": false,
      "audios": false,
      "antiLink": false,
      "antiLink2": false,
      "antiviewonce": false,
      "antiToxic": false,
      "expired": 0
    }
  },
  "stats": {
    "privateonce.js": {
      "total": 18,
      "success": 13,
      "last": 1753859592225,
      "lastSuccess": 1753859592225
    },
    "downloader-play.js": {
      "total": 83,
      "success": 72,
      "last": 1753936409994,
      "lastSuccess": 1753936409994
    },
    "downloader-yta.js": {
      "total": 2,
      "success": 0,
      "last": 1753860526898,
      "lastSuccess": 0
    },
    "config-enable.js": {
      "total": 6,
      "success": 6,
      "last": 1753864705080,
      "lastSuccess": 1753864705080
    },
    "sticker-sticker.js": {
      "total": 2,
      "success": 2,
      "last": 1753901878113,
      "lastSuccess": 1753901878113
    },
    "Pink.js": {
      "total": 18,
      "success": 18,
      "last": 1753980140239,
      "lastSuccess": 1753980140239
    },
    "Stike.js": {
      "total": 50,
      "success": 40,
      "last": 1753938951835,
      "lastSuccess": 1753938951835
    },
    "Rvu.js": {
      "total": 5,
      "success": 5,
      "last": 1753939395793,
      "lastSuccess": 1753939395793
    },
    "Play.js": {
      "total": 4,
      "success": 4,
      "last": 1753941365414,
      "lastSuccess": 1753941365414
    },
    "rvu.js": {
      "total": 2,
      "success": 2,
      "last": 1753941634467,
      "lastSuccess": 1753941634467
    },
    "owner-saveimage.js": {
      "total": 3,
      "success": 0,
      "last": 1753978844715,
      "lastSuccess": 0
    },
    "group-detect.js": {
      "total": 2,
      "success": 2,
      "last": 1754067686199,
      "lastSuccess": 1754067686199
    },
    "nv-a.js": {
      "total": 2,
      "success": 2,
      "last": 1754067877868,
      "lastSuccess": 1754067877868
    }
  },
  "msgs": {},
  "sticker": {},
  "settings": {
    "undefined": {
      "self": false,
      "autoread": false,
      "restrict": false
    },
    "5521989050540:39@s.whatsapp.net": {
      "self": false,
      "autoread": false,
      "restrict": true
    },
    "5521989050540:49@s.whatsapp.net": {
      "self": false,
      "autoread": false,
      "restrict": false
    }
  }
}
//----- FIN DEL ARCHIVO: ./database.json -----//



//----- INICIO DEL ARCHIVO: ./npm-shrinkwrap.json -----//

{
  "name": "MoJiTo-MD",
  "version": "2.0.1",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "MoJiTo-MD",
      "version": "2.0.1",
      "license": "MIT",
      "dependencies": {
        "@bochilteam/scraper": "^2.0.0",
        "@distube/ytdl-core": "^4.16.12",
        "@whiskeysockets/baileys": "^6.7.18",
        "acorn": "^8.15.0",
        "awesome-phonenumber": "^2.73.0",
        "axios": "^0.24.0",
        "boxen": "^8.0.1",
        "cfonts": "^2.10.1",
        "chalk": "^5.5.0",
        "cheerio": "^1.0.0-rc.10",
        "colors": "1.4.0",
        "emoji-api": "^1.0.2",
        "express": "^4.17.3",
        "figlet": "^1.8.2",
        "file-type": "^17.1.1",
        "fluent-ffmpeg": "^2.1.3",
        "formdata-node": "^4.3.2",
        "fs-extra": "^11.3.0",
        "gradient-string": "^3.0.0",
        "human-readable": "^0.2.1",
        "hxz-api": "^1.0.1",
        "jimp": "^0.16.13",
        "jsdom": "^19.0.0",
        "link-preview-js": "^3.1.0",
        "lodash": "^4.17.21",
        "lowdb": "^3.0.0",
        "mongoose": "^6.3.3",
        "node-fetch": "^3.3.2",
        "node-gtts": "^2.0.2",
        "node-webpmux": "^3.1.1",
        "ora": "^8.2.0",
        "perf_hooks": "^0.0.1",
        "pino": "^7.11.0",
        "pino-pretty": "^7.5.1",
        "qrcode": "^1.5.0",
        "qrcode-terminal": "^0.12.0",
        "readline": "^1.3.0",
        "similarity": "^1.2.1",
        "socket.io": "^4.4.1",
        "syntax-error": "^1.4.0",
        "terminal-image": "^2.0.0",
        "translate-google-api": "^1.0.4",
        "url-regex-safe": "^3.0.0",
        "yargs": "^17.3.1",
        "yt-dlp-exec": "^1.0.2",
        "yt-search": "^2.10.3",
        "ytdl-core": "^4.11.5"
      }
    },
    "node_modules/@aws-crypto/sha256-browser": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@aws-crypto/sha256-browser/-/sha256-browser-5.2.0.tgz",
      "integrity": "sha512-AXfN/lGotSQwu6HNcEsIASo7kWXZ5HYWvfOmSNKDsEqC4OashTp8alTmaz+F7TC2L083SFv5RdB+qU3Vs1kZqw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-crypto/sha256-js": "^5.2.0",
        "@aws-crypto/supports-web-crypto": "^5.2.0",
        "@aws-crypto/util": "^5.2.0",
        "@aws-sdk/types": "^3.222.0",
        "@aws-sdk/util-locate-window": "^3.0.0",
        "@smithy/util-utf8": "^2.0.0",
        "tslib": "^2.6.2"
      }
    },
    "node_modules/@aws-crypto/sha256-browser/node_modules/@smithy/is-array-buffer": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@smithy/is-array-buffer/-/is-array-buffer-2.2.0.tgz",
      "integrity": "sha512-GGP3O9QFD24uGeAXYUjwSTXARoqpZykHadOmA8G5vfJPK0/DC67qa//0qvqrJzL1xc8WQWX7/yc7fwudjPHPhA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@aws-crypto/sha256-browser/node_modules/@smithy/util-buffer-from": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-buffer-from/-/util-buffer-from-2.2.0.tgz",
      "integrity": "sha512-IJdWBbTcMQ6DA0gdNhh/BwrLkDR+ADW5Kr1aZmd4k3DIF6ezMV4R2NIAmT08wQJ3yUK82thHWmC/TnK/wpMMIA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/is-array-buffer": "^2.2.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@aws-crypto/sha256-browser/node_modules/@smithy/util-utf8": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-utf8/-/util-utf8-2.3.0.tgz",
      "integrity": "sha512-R8Rdn8Hy72KKcebgLiv8jQcQkXoLMOGGv5uI1/k0l+snqkOzQ1R0ChUBCxWMlBsFMekWjq0wRudIweFs7sKT5A==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/util-buffer-from": "^2.2.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@aws-crypto/sha256-js": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@aws-crypto/sha256-js/-/sha256-js-5.2.0.tgz",
      "integrity": "sha512-FFQQyu7edu4ufvIZ+OadFpHHOt+eSTBaYaki44c+akjg7qZg9oOQeLlk77F6tSYqjDAFClrHJk9tMf0HdVyOvA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-crypto/util": "^5.2.0",
        "@aws-sdk/types": "^3.222.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/@aws-crypto/supports-web-crypto": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@aws-crypto/supports-web-crypto/-/supports-web-crypto-5.2.0.tgz",
      "integrity": "sha512-iAvUotm021kM33eCdNfwIN//F77/IADDSs58i+MDaOqFrVjZo9bAal0NK7HurRuWLLpF1iLX7gbWrjHjeo+YFg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      }
    },
    "node_modules/@aws-crypto/util": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@aws-crypto/util/-/util-5.2.0.tgz",
      "integrity": "sha512-4RkU9EsI6ZpBve5fseQlGNUWKMa1RLPQ1dnjnQoe07ldfIzcsGb5hC5W0Dm7u423KWzawlrpbjXBrXCEv9zazQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "^3.222.0",
        "@smithy/util-utf8": "^2.0.0",
        "tslib": "^2.6.2"
      }
    },
    "node_modules/@aws-crypto/util/node_modules/@smithy/is-array-buffer": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@smithy/is-array-buffer/-/is-array-buffer-2.2.0.tgz",
      "integrity": "sha512-GGP3O9QFD24uGeAXYUjwSTXARoqpZykHadOmA8G5vfJPK0/DC67qa//0qvqrJzL1xc8WQWX7/yc7fwudjPHPhA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@aws-crypto/util/node_modules/@smithy/util-buffer-from": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-buffer-from/-/util-buffer-from-2.2.0.tgz",
      "integrity": "sha512-IJdWBbTcMQ6DA0gdNhh/BwrLkDR+ADW5Kr1aZmd4k3DIF6ezMV4R2NIAmT08wQJ3yUK82thHWmC/TnK/wpMMIA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/is-array-buffer": "^2.2.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-utf8/-/util-utf8-2.3.0.tgz",
      "integrity": "sha512-R8Rdn8Hy72KKcebgLiv8jQcQkXoLMOGGv5uI1/k0l+snqkOzQ1R0ChUBCxWMlBsFMekWjq0wRudIweFs7sKT5A==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/util-buffer-from": "^2.2.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@aws-sdk/client-cognito-identity": {
      "version": "3.859.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/client-cognito-identity/-/client-cognito-identity-3.859.0.tgz",
      "integrity": "sha512-/eqkQbMZyxDnKnd7suVur6cfKbFslvLxfi7dVp/B3gV+aL0G67iS9atkdi227KDMzlzDCcj6GrpLCk2u9aPDMg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-crypto/sha256-browser": "5.2.0",
        "@aws-crypto/sha256-js": "5.2.0",
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/credential-provider-node": "3.859.0",
        "@aws-sdk/middleware-host-header": "3.840.0",
        "@aws-sdk/middleware-logger": "3.840.0",
        "@aws-sdk/middleware-recursion-detection": "3.840.0",
        "@aws-sdk/middleware-user-agent": "3.858.0",
        "@aws-sdk/region-config-resolver": "3.840.0",
        "@aws-sdk/types": "3.840.0",
        "@aws-sdk/util-endpoints": "3.848.0",
        "@aws-sdk/util-user-agent-browser": "3.840.0",
        "@aws-sdk/util-user-agent-node": "3.858.0",
        "@smithy/config-resolver": "^4.1.4",
        "@smithy/core": "^3.7.2",
        "@smithy/fetch-http-handler": "^5.1.0",
        "@smithy/hash-node": "^4.0.4",
        "@smithy/invalid-dependency": "^4.0.4",
        "@smithy/middleware-content-length": "^4.0.4",
        "@smithy/middleware-endpoint": "^4.1.17",
        "@smithy/middleware-retry": "^4.1.18",
        "@smithy/middleware-serde": "^4.0.8",
        "@smithy/middleware-stack": "^4.0.4",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/node-http-handler": "^4.1.0",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "@smithy/url-parser": "^4.0.4",
        "@smithy/util-base64": "^4.0.0",
        "@smithy/util-body-length-browser": "^4.0.0",
        "@smithy/util-body-length-node": "^4.0.0",
        "@smithy/util-defaults-mode-browser": "^4.0.25",
        "@smithy/util-defaults-mode-node": "^4.0.25",
        "@smithy/util-endpoints": "^3.0.6",
        "@smithy/util-middleware": "^4.0.4",
        "@smithy/util-retry": "^4.0.6",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/client-sso": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/client-sso/-/client-sso-3.858.0.tgz",
      "integrity": "sha512-iXuZQs4KH6a3Pwnt0uORalzAZ5EXRPr3lBYAsdNwkP8OYyoUz5/TE3BLyw7ceEh0rj4QKGNnNALYo1cDm0EV8w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-crypto/sha256-browser": "5.2.0",
        "@aws-crypto/sha256-js": "5.2.0",
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/middleware-host-header": "3.840.0",
        "@aws-sdk/middleware-logger": "3.840.0",
        "@aws-sdk/middleware-recursion-detection": "3.840.0",
        "@aws-sdk/middleware-user-agent": "3.858.0",
        "@aws-sdk/region-config-resolver": "3.840.0",
        "@aws-sdk/types": "3.840.0",
        "@aws-sdk/util-endpoints": "3.848.0",
        "@aws-sdk/util-user-agent-browser": "3.840.0",
        "@aws-sdk/util-user-agent-node": "3.858.0",
        "@smithy/config-resolver": "^4.1.4",
        "@smithy/core": "^3.7.2",
        "@smithy/fetch-http-handler": "^5.1.0",
        "@smithy/hash-node": "^4.0.4",
        "@smithy/invalid-dependency": "^4.0.4",
        "@smithy/middleware-content-length": "^4.0.4",
        "@smithy/middleware-endpoint": "^4.1.17",
        "@smithy/middleware-retry": "^4.1.18",
        "@smithy/middleware-serde": "^4.0.8",
        "@smithy/middleware-stack": "^4.0.4",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/node-http-handler": "^4.1.0",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "@smithy/url-parser": "^4.0.4",
        "@smithy/util-base64": "^4.0.0",
        "@smithy/util-body-length-browser": "^4.0.0",
        "@smithy/util-body-length-node": "^4.0.0",
        "@smithy/util-defaults-mode-browser": "^4.0.25",
        "@smithy/util-defaults-mode-node": "^4.0.25",
        "@smithy/util-endpoints": "^3.0.6",
        "@smithy/util-middleware": "^4.0.4",
        "@smithy/util-retry": "^4.0.6",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/core": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/core/-/core-3.858.0.tgz",
      "integrity": "sha512-iWm4QLAS+/XMlnecIU1Y33qbBr1Ju+pmWam3xVCPlY4CSptKpVY+2hXOnmg9SbHAX9C005fWhrIn51oDd00c9A==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "3.840.0",
        "@aws-sdk/xml-builder": "3.821.0",
        "@smithy/core": "^3.7.2",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/signature-v4": "^5.1.2",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "@smithy/util-base64": "^4.0.0",
        "@smithy/util-body-length-browser": "^4.0.0",
        "@smithy/util-middleware": "^4.0.4",
        "@smithy/util-utf8": "^4.0.0",
        "fast-xml-parser": "5.2.5",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-cognito-identity": {
      "version": "3.859.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-cognito-identity/-/credential-provider-cognito-identity-3.859.0.tgz",
      "integrity": "sha512-yLE+elWP047hANzQUBs67u1vsag/5j5EWjHUtfT5a4TrYHKtUcD9urhk1frvt+HhUoEzdXl8pt9bMQCHLOQU7w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/client-cognito-identity": "3.859.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-env": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-env/-/credential-provider-env-3.858.0.tgz",
      "integrity": "sha512-kZsGyh2BoSRguzlcGtzdLhw/l/n3KYAC+/l/H0SlsOq3RLHF6tO/cRdsLnwoix2bObChHUp03cex63o1gzdx/Q==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-http": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-http/-/credential-provider-http-3.858.0.tgz",
      "integrity": "sha512-GDnfYl3+NPJQ7WQQYOXEA489B212NinpcIDD7rpsB6IWUPo8yDjT5NceK4uUkIR3MFpNCGt9zd/z6NNLdB2fuQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/fetch-http-handler": "^5.1.0",
        "@smithy/node-http-handler": "^4.1.0",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "@smithy/util-stream": "^4.2.3",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-ini": {
      "version": "3.859.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-ini/-/credential-provider-ini-3.859.0.tgz",
      "integrity": "sha512-KsccE1T88ZDNhsABnqbQj014n5JMDilAroUErFbGqu5/B3sXqUsYmG54C/BjvGTRUFfzyttK9lB9P9h6ddQ8Cw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/credential-provider-env": "3.858.0",
        "@aws-sdk/credential-provider-http": "3.858.0",
        "@aws-sdk/credential-provider-process": "3.858.0",
        "@aws-sdk/credential-provider-sso": "3.859.0",
        "@aws-sdk/credential-provider-web-identity": "3.858.0",
        "@aws-sdk/nested-clients": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/credential-provider-imds": "^4.0.6",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/shared-ini-file-loader": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-node": {
      "version": "3.859.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-node/-/credential-provider-node-3.859.0.tgz",
      "integrity": "sha512-ZRDB2xU5aSyTR/jDcli30tlycu6RFvQngkZhBs9Zoh2BiYXrfh2MMuoYuZk+7uD6D53Q2RIEldDHR9A/TPlRuA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/credential-provider-env": "3.858.0",
        "@aws-sdk/credential-provider-http": "3.858.0",
        "@aws-sdk/credential-provider-ini": "3.859.0",
        "@aws-sdk/credential-provider-process": "3.858.0",
        "@aws-sdk/credential-provider-sso": "3.859.0",
        "@aws-sdk/credential-provider-web-identity": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/credential-provider-imds": "^4.0.6",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/shared-ini-file-loader": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-process": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-process/-/credential-provider-process-3.858.0.tgz",
      "integrity": "sha512-l5LJWZJMRaZ+LhDjtupFUKEC5hAjgvCRrOvV5T60NCUBOy0Ozxa7Sgx3x+EOwiruuoh3Cn9O+RlbQlJX6IfZIw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/shared-ini-file-loader": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-sso": {
      "version": "3.859.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-sso/-/credential-provider-sso-3.859.0.tgz",
      "integrity": "sha512-BwAqmWIivhox5YlFRjManFF8GoTvEySPk6vsJNxDsmGsabY+OQovYxFIYxRCYiHzH7SFjd4Lcd+riJOiXNsvRw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/client-sso": "3.858.0",
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/token-providers": "3.859.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/shared-ini-file-loader": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-provider-web-identity": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-provider-web-identity/-/credential-provider-web-identity-3.858.0.tgz",
      "integrity": "sha512-8iULWsH83iZDdUuiDsRb83M0NqIlXjlDbJUIddVsIrfWp4NmanKw77SV6yOZ66nuJjPsn9j7RDb9bfEPCy5SWA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/nested-clients": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/credential-providers": {
      "version": "3.859.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/credential-providers/-/credential-providers-3.859.0.tgz",
      "integrity": "sha512-A1AktWEbrTiLjurNFrKOhMbdDKstDpm7vN5oPbZ43L52c3mg5AOYtQgb8/A4otkw482BiFrWgeCBwsH9HlpfxA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/client-cognito-identity": "3.859.0",
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/credential-provider-cognito-identity": "3.859.0",
        "@aws-sdk/credential-provider-env": "3.858.0",
        "@aws-sdk/credential-provider-http": "3.858.0",
        "@aws-sdk/credential-provider-ini": "3.859.0",
        "@aws-sdk/credential-provider-node": "3.859.0",
        "@aws-sdk/credential-provider-process": "3.858.0",
        "@aws-sdk/credential-provider-sso": "3.859.0",
        "@aws-sdk/credential-provider-web-identity": "3.858.0",
        "@aws-sdk/nested-clients": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/config-resolver": "^4.1.4",
        "@smithy/core": "^3.7.2",
        "@smithy/credential-provider-imds": "^4.0.6",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/middleware-host-header": {
      "version": "3.840.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/middleware-host-header/-/middleware-host-header-3.840.0.tgz",
      "integrity": "sha512-ub+hXJAbAje94+Ya6c6eL7sYujoE8D4Bumu1NUI8TXjUhVVn0HzVWQjpRLshdLsUp1AW7XyeJaxyajRaJQ8+Xg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "3.840.0",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/middleware-logger": {
      "version": "3.840.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/middleware-logger/-/middleware-logger-3.840.0.tgz",
      "integrity": "sha512-lSV8FvjpdllpGaRspywss4CtXV8M7NNNH+2/j86vMH+YCOZ6fu2T/TyFd/tHwZ92vDfHctWkRbQxg0bagqwovA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "3.840.0",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/middleware-recursion-detection": {
      "version": "3.840.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/middleware-recursion-detection/-/middleware-recursion-detection-3.840.0.tgz",
      "integrity": "sha512-Gu7lGDyfddyhIkj1Z1JtrY5NHb5+x/CRiB87GjaSrKxkDaydtX2CU977JIABtt69l9wLbcGDIQ+W0uJ5xPof7g==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "3.840.0",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/middleware-user-agent": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/middleware-user-agent/-/middleware-user-agent-3.858.0.tgz",
      "integrity": "sha512-pC3FT/sRZ6n5NyXiTVu9dpf1D9j3YbJz3XmeOOwJqO/Mib2PZyIQktvNMPgwaC5KMVB1zWqS5bmCwxpMOnq0UQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@aws-sdk/util-endpoints": "3.848.0",
        "@smithy/core": "^3.7.2",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/nested-clients": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/nested-clients/-/nested-clients-3.858.0.tgz",
      "integrity": "sha512-ChdIj80T2whoWbovmO7o8ICmhEB2S9q4Jes9MBnKAPm69PexcJAK2dQC8yI4/iUP8b3+BHZoUPrYLWjBxIProQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-crypto/sha256-browser": "5.2.0",
        "@aws-crypto/sha256-js": "5.2.0",
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/middleware-host-header": "3.840.0",
        "@aws-sdk/middleware-logger": "3.840.0",
        "@aws-sdk/middleware-recursion-detection": "3.840.0",
        "@aws-sdk/middleware-user-agent": "3.858.0",
        "@aws-sdk/region-config-resolver": "3.840.0",
        "@aws-sdk/types": "3.840.0",
        "@aws-sdk/util-endpoints": "3.848.0",
        "@aws-sdk/util-user-agent-browser": "3.840.0",
        "@aws-sdk/util-user-agent-node": "3.858.0",
        "@smithy/config-resolver": "^4.1.4",
        "@smithy/core": "^3.7.2",
        "@smithy/fetch-http-handler": "^5.1.0",
        "@smithy/hash-node": "^4.0.4",
        "@smithy/invalid-dependency": "^4.0.4",
        "@smithy/middleware-content-length": "^4.0.4",
        "@smithy/middleware-endpoint": "^4.1.17",
        "@smithy/middleware-retry": "^4.1.18",
        "@smithy/middleware-serde": "^4.0.8",
        "@smithy/middleware-stack": "^4.0.4",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/node-http-handler": "^4.1.0",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "@smithy/url-parser": "^4.0.4",
        "@smithy/util-base64": "^4.0.0",
        "@smithy/util-body-length-browser": "^4.0.0",
        "@smithy/util-body-length-node": "^4.0.0",
        "@smithy/util-defaults-mode-browser": "^4.0.25",
        "@smithy/util-defaults-mode-node": "^4.0.25",
        "@smithy/util-endpoints": "^3.0.6",
        "@smithy/util-middleware": "^4.0.4",
        "@smithy/util-retry": "^4.0.6",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/region-config-resolver": {
      "version": "3.840.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/region-config-resolver/-/region-config-resolver-3.840.0.tgz",
      "integrity": "sha512-Qjnxd/yDv9KpIMWr90ZDPtRj0v75AqGC92Lm9+oHXZ8p1MjG5JE2CW0HL8JRgK9iKzgKBL7pPQRXI8FkvEVfrA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "3.840.0",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/types": "^4.3.1",
        "@smithy/util-config-provider": "^4.0.0",
        "@smithy/util-middleware": "^4.0.4",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/token-providers": {
      "version": "3.859.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/token-providers/-/token-providers-3.859.0.tgz",
      "integrity": "sha512-6P2wlvm9KBWOvRNn0Pt8RntnXg8fzOb5kEShvWsOsAocZeqKNaYbihum5/Onq1ZPoVtkdb++8eWDocDnM4k85Q==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/core": "3.858.0",
        "@aws-sdk/nested-clients": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/shared-ini-file-loader": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/types": {
      "version": "3.840.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/types/-/types-3.840.0.tgz",
      "integrity": "sha512-xliuHaUFZxEx1NSXeLLZ9Dyu6+EJVQKEoD+yM+zqUo3YDZ7medKJWY6fIOKiPX/N7XbLdBYwajb15Q7IL8KkeA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/util-endpoints": {
      "version": "3.848.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/util-endpoints/-/util-endpoints-3.848.0.tgz",
      "integrity": "sha512-fY/NuFFCq/78liHvRyFKr+aqq1aA/uuVSANjzr5Ym8c+9Z3HRPE9OrExAHoMrZ6zC8tHerQwlsXYYH5XZ7H+ww==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "3.840.0",
        "@smithy/types": "^4.3.1",
        "@smithy/url-parser": "^4.0.4",
        "@smithy/util-endpoints": "^3.0.6",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/util-locate-window": {
      "version": "3.804.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/util-locate-window/-/util-locate-window-3.804.0.tgz",
      "integrity": "sha512-zVoRfpmBVPodYlnMjgVjfGoEZagyRF5IPn3Uo6ZvOZp24chnW/FRstH7ESDHDDRga4z3V+ElUQHKpFDXWyBW5A==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@aws-sdk/util-user-agent-browser": {
      "version": "3.840.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/util-user-agent-browser/-/util-user-agent-browser-3.840.0.tgz",
      "integrity": "sha512-JdyZM3EhhL4PqwFpttZu1afDpPJCCc3eyZOLi+srpX11LsGj6sThf47TYQN75HT1CarZ7cCdQHGzP2uy3/xHfQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/types": "3.840.0",
        "@smithy/types": "^4.3.1",
        "bowser": "^2.11.0",
        "tslib": "^2.6.2"
      }
    },
    "node_modules/@aws-sdk/util-user-agent-node": {
      "version": "3.858.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/util-user-agent-node/-/util-user-agent-node-3.858.0.tgz",
      "integrity": "sha512-T1m05QlN8hFpx5/5duMjS8uFSK5e6EXP45HQRkZULVkL3DK+jMaxsnh3KLl5LjUoHn/19M4HM0wNUBhYp4Y2Yw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@aws-sdk/middleware-user-agent": "3.858.0",
        "@aws-sdk/types": "3.840.0",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "aws-crt": ">=1.0.0"
      },
      "peerDependenciesMeta": {
        "aws-crt": {
          "optional": true
        }
      }
    },
    "node_modules/@aws-sdk/xml-builder": {
      "version": "3.821.0",
      "resolved": "https://registry.npmjs.org/@aws-sdk/xml-builder/-/xml-builder-3.821.0.tgz",
      "integrity": "sha512-DIIotRnefVL6DiaHtO6/21DhJ4JZnnIwdNbpwiAhdt/AVbttcE4yw925gsjur0OGv5BTYXQXU3YnANBYnZjuQA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.28.2",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.2.tgz",
      "integrity": "sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@bochilteam/scraper": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@bochilteam/scraper/-/scraper-2.0.0.tgz",
      "integrity": "sha512-5liIRP6TwvUad/gdeGvjakbcT/+YbFFMHVVC8DXv56eB5ncvcl4w2iBRtkyljHfe7Y1JIfWn6DlrhXEbUcXKyg==",
      "deprecated": "New major 5.x version release!!!",
      "license": "GPL-3.0-or-later",
      "dependencies": {
        "cheerio": "^1.0.0-rc.10",
        "form-data": "^4.0.0",
        "got": "^11.8.3",
        "human-readable": "^0.2.1"
      },
      "engines": {
        "node": ">= 12.20"
      },
      "optionalDependencies": {
        "ws": "^8.4.2"
      }
    },
    "node_modules/@cacheable/node-cache": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/@cacheable/node-cache/-/node-cache-1.6.1.tgz",
      "integrity": "sha512-EhLZ7xC9RjzXK/0Hi64LtvEYp4ZPjVtt26eBXWEitE2M6yLAatwLhI6KJ8iWSkDb/2Q0BGe5nkwPcV4OuMjkJw==",
      "license": "MIT",
      "dependencies": {
        "cacheable": "^1.10.3",
        "hookified": "^1.10.0",
        "keyv": "^5.4.0"
      }
    },
    "node_modules/@distube/ytdl-core": {
      "version": "4.16.12",
      "resolved": "https://registry.npmjs.org/@distube/ytdl-core/-/ytdl-core-4.16.12.tgz",
      "integrity": "sha512-/NR8Jur1Q4E2oD+DJta7uwWu7SkqdEkhwERt7f4iune70zg7ZlLLTOHs1+jgg3uD2jQjpdk7RGC16FqstG4RsA==",
      "license": "MIT",
      "dependencies": {
        "http-cookie-agent": "^7.0.1",
        "https-proxy-agent": "^7.0.6",
        "m3u8stream": "^0.8.6",
        "miniget": "^4.2.3",
        "sax": "^1.4.1",
        "tough-cookie": "^5.1.2",
        "undici": "^7.8.0"
      },
      "engines": {
        "node": ">=20.18.1"
      },
      "funding": {
        "url": "https://github.com/distubejs/ytdl-core?sponsor"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
      "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-array/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@eslint/config-array/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@eslint/config-helpers": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.0.tgz",
      "integrity": "sha512-ViuymvFmcJi04qdZeDc2whTHryouGcDlaxPqarTD0ZE10ISpxGUVZGZDx4w01upyIynL3iu6IXH2bS1NhclQMw==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.15.1",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.1.tgz",
      "integrity": "sha512-bkOp+iumZCCbt1K1CmWf0R9pM5yKpDv+ZXtvSyQpudrI9kuFLp+bM2WOPXImuD/ceQuaa8f5pj93Y7zyECIGNA==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.32.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.32.0.tgz",
      "integrity": "sha512-BBpRFZK3eX6uMLKz8WxFOBIFFcGFJ/g8XuwjTHCqHROSIsopI+ddn/d5Cfh36+7+e5edVS8dbSHnBNhrLEX0zg==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.3.4",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.4.tgz",
      "integrity": "sha512-Ul5l+lHEcw3L5+k8POx6r74mxEYKG5kOb6Xpy2gCRW6zweT6TEhAf8vhxGgjhqrd/VO/Dirhsb+1hNpD1ue9hw==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "@eslint/core": "^0.15.1",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@hapi/boom": {
      "version": "9.1.4",
      "resolved": "https://registry.npmjs.org/@hapi/boom/-/boom-9.1.4.tgz",
      "integrity": "sha512-Ls1oH8jaN1vNsqcaHVYJrKmgMcKsC1wcp8bujvXrHaAqD2iDYq3HoOwsxwo09Cuda5R5nC0o0IxlrlTuvPuzSw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@hapi/hoek": "9.x.x"
      }
    },
    "node_modules/@hapi/hoek": {
      "version": "9.3.0",
      "resolved": "https://registry.npmjs.org/@hapi/hoek/-/hoek-9.3.0.tgz",
      "integrity": "sha512-/c6rf4UJlmHlC9b5BaNvzAcFv7HZ2QHaV0D4/HNlBdvFnvQq8RI4kYdhyPCl7Xj+oWvTWQ8ujhqS53LIgAe6KQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "license": "Apache-2.0",
      "peer": true,
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@jimp/bmp": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/bmp/-/bmp-0.16.13.tgz",
      "integrity": "sha512-9edAxu7N2FX7vzkdl5Jo1BbACfycUtBQX+XBMcHA2bk62P8R0otgkHg798frgAk/WxQIzwxqOH6wMiCwrlAzdQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "bmp-js": "^0.1.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/core": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/core/-/core-0.16.13.tgz",
      "integrity": "sha512-qXpA1tzTnlkTku9yqtuRtS/wVntvE6f3m3GNxdTdtmc+O+Wcg9Xo2ABPMh7Nc0AHbMKzwvwgB2JnjZmlmJEObg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "any-base": "^1.1.0",
        "buffer": "^5.2.0",
        "exif-parser": "^0.1.12",
        "file-type": "^16.5.4",
        "load-bmfont": "^1.3.1",
        "mkdirp": "^0.5.1",
        "phin": "^2.9.1",
        "pixelmatch": "^4.0.2",
        "tinycolor2": "^1.4.1"
      }
    },
    "node_modules/@jimp/core/node_modules/file-type": {
      "version": "16.5.4",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-16.5.4.tgz",
      "integrity": "sha512-/yFHK0aGjFEgDJjEKP0pWCplsPFPhwyfwevf/pVxiN0tmE4L9LmwWxWukdJSHdoCli4VgQLehjJtwQBnqmsKcw==",
      "license": "MIT",
      "dependencies": {
        "readable-web-to-node-stream": "^3.0.0",
        "strtok3": "^6.2.4",
        "token-types": "^4.1.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/file-type?sponsor=1"
      }
    },
    "node_modules/@jimp/core/node_modules/peek-readable": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/peek-readable/-/peek-readable-4.1.0.tgz",
      "integrity": "sha512-ZI3LnwUv5nOGbQzD9c2iDG6toheuXSZP5esSHBjopsXH4dg19soufvpUGA3uohi5anFtGb2lhAVdHzH6R/Evvg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/@jimp/core/node_modules/strtok3": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/strtok3/-/strtok3-6.3.0.tgz",
      "integrity": "sha512-fZtbhtvI9I48xDSywd/somNqgUHl2L2cstmXCCif0itOf96jeW18MBSyrLuNicYQVkvpOxkZtkzujiTJ9LW5Jw==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "peek-readable": "^4.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/@jimp/core/node_modules/token-types": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/token-types/-/token-types-4.2.1.tgz",
      "integrity": "sha512-6udB24Q737UD/SDsKAHI9FCRP7Bqc9D/MQUV02ORQg5iskjtLJlZJNdN4kKtcdtwCeWIwIHDGaUsTsCCAa8sFQ==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "ieee754": "^1.2.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/@jimp/custom": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/custom/-/custom-0.16.13.tgz",
      "integrity": "sha512-LTATglVUPGkPf15zX1wTMlZ0+AU7cGEGF6ekVF1crA8eHUWsGjrYTB+Ht4E3HTrCok8weQG+K01rJndCp/l4XA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/core": "^0.16.13"
      }
    },
    "node_modules/@jimp/gif": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/gif/-/gif-0.16.13.tgz",
      "integrity": "sha512-yFAMZGv3o+YcjXilMWWwS/bv1iSqykFahFMSO169uVMtfQVfa90kt4/kDwrXNR6Q9i6VHpFiGZMlF2UnHClBvg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "gifwrap": "^0.9.2",
        "omggif": "^1.0.9"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/jpeg": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/jpeg/-/jpeg-0.16.13.tgz",
      "integrity": "sha512-BJHlDxzTlCqP2ThqP8J0eDrbBfod7npWCbJAcfkKqdQuFk0zBPaZ6KKaQKyKxmWJ87Z6ohANZoMKEbtvrwz1AA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "jpeg-js": "^0.4.2"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-blit": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-blit/-/plugin-blit-0.16.13.tgz",
      "integrity": "sha512-8Z1k96ZFxlhK2bgrY1JNWNwvaBeI/bciLM0yDOni2+aZwfIIiC7Y6PeWHTAvjHNjphz+XCt01WQmOYWCn0ML6g==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-blur": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-blur/-/plugin-blur-0.16.13.tgz",
      "integrity": "sha512-PvLrfa8vkej3qinlebyhLpksJgCF5aiysDMSVhOZqwH5nQLLtDE9WYbnsofGw4r0VVpyw3H/ANCIzYTyCtP9Cg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-circle": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-circle/-/plugin-circle-0.16.13.tgz",
      "integrity": "sha512-RNave7EFgZrb5V5EpdvJGAEHMnDAJuwv05hKscNfIYxf0kR3KhViBTDy+MoTnMlIvaKFULfwIgaZWzyhuINMzA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-color": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-color/-/plugin-color-0.16.13.tgz",
      "integrity": "sha512-xW+9BtEvoIkkH/Wde9ql4nAFbYLkVINhpgAE7VcBUsuuB34WUbcBl/taOuUYQrPEFQJ4jfXiAJZ2H/rvKjCVnQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "tinycolor2": "^1.4.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-contain": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.16.13.tgz",
      "integrity": "sha512-QayTXw4tXMwU6q6acNTQrTTFTXpNRBe+MgTGMDU0lk+23PjlFCO/9sacflelG8lsp7vNHhAxFeHptDMAksEYzg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5",
        "@jimp/plugin-scale": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-cover": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-cover/-/plugin-cover-0.16.13.tgz",
      "integrity": "sha512-BSsP71GTNaqWRcvkbWuIVH+zK7b3TSNebbhDkFK0fVaUTzHuKMS/mgY4hDZIEVt7Rf5FjadAYtsujHN9w0iSYA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-crop": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5",
        "@jimp/plugin-scale": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-crop": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-crop/-/plugin-crop-0.16.13.tgz",
      "integrity": "sha512-WEl2tPVYwzYL8OKme6Go2xqiWgKsgxlMwyHabdAU4tXaRwOCnOI7v4021gCcBb9zn/oWwguHuKHmK30Fw2Z/PA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-displace": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-displace/-/plugin-displace-0.16.13.tgz",
      "integrity": "sha512-qt9WKq8vWrcjySa9DyQ0x/RBMHQeiVjdVSY1SJsMjssPUf0pS74qorcuAkGi89biN3YoGUgPkpqECnAWnYwgGA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-dither": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-dither/-/plugin-dither-0.16.13.tgz",
      "integrity": "sha512-5/N3yJggbWQTlGZHQYJPmQXEwR52qaXjEzkp1yRBbtdaekXE3BG/suo0fqeoV/csf8ooI78sJzYmIrxNoWVtgQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-fisheye": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-fisheye/-/plugin-fisheye-0.16.13.tgz",
      "integrity": "sha512-2rZmTdFbT/cF9lEZIkXCYO0TsT114Q27AX5IAo0Sju6jVQbvIk1dFUTnwLDadTo8wkJlFzGqMQ24Cs8cHWOliA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-flip": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-flip/-/plugin-flip-0.16.13.tgz",
      "integrity": "sha512-EmcgAA74FTc5u7Z+hUO/sRjWwfPPLuOQP5O64x5g4j0T12Bd29IgsYZxoutZo/rb3579+JNa/3wsSEmyVv1EpA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-rotate": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-gaussian": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-gaussian/-/plugin-gaussian-0.16.13.tgz",
      "integrity": "sha512-A1XKfGQD0iDdIiKqFYi8nZMv4dDVYdxbrmgR7y/CzUHhSYdcmoljLIIsZZM3Iks/Wa353W3vtvkWLuDbQbch1w==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-invert": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-invert/-/plugin-invert-0.16.13.tgz",
      "integrity": "sha512-xFMrIn7czEZbdbMzZWuaZFnlLGJDVJ82y5vlsKsXRTG2kcxRsMPXvZRWHV57nSs1YFsNqXSbrC8B98n0E32njQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-mask": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-mask/-/plugin-mask-0.16.13.tgz",
      "integrity": "sha512-wLRYKVBXql2GAYgt6FkTnCfE+q5NomM7Dlh0oIPGAoMBWDyTx0eYutRK6PlUrRK2yMHuroAJCglICTbxqGzowQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-normalize": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-normalize/-/plugin-normalize-0.16.13.tgz",
      "integrity": "sha512-3tfad0n9soRna4IfW9NzQdQ2Z3ijkmo21DREHbE6CGcMIxOSvfRdSvf1qQPApxjTSo8LTU4MCi/fidx/NZ0GqQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-print": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-print/-/plugin-print-0.16.13.tgz",
      "integrity": "sha512-0m6i3p01PGRkGAK9r53hDYrkyMq+tlhLOIbsSTmZyh6HLshUKlTB7eXskF5OpVd5ZUHoltlNc6R+ggvKIzxRFw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "load-bmfont": "^1.4.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-resize": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-resize/-/plugin-resize-0.16.13.tgz",
      "integrity": "sha512-qoqtN8LDknm3fJm9nuPygJv30O3vGhSBD2TxrsCnhtOsxKAqVPJtFVdGd/qVuZ8nqQANQmTlfqTiK9mVWQ7MiQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-rotate": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-rotate/-/plugin-rotate-0.16.13.tgz",
      "integrity": "sha512-Ev+Jjmj1nHYw897z9C3R9dYsPv7S2/nxdgfFb/h8hOwK0Ovd1k/+yYS46A0uj/JCKK0pQk8wOslYBkPwdnLorw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5",
        "@jimp/plugin-crop": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-scale": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-scale/-/plugin-scale-0.16.13.tgz",
      "integrity": "sha512-05POQaEJVucjTiSGMoH68ZiELc7QqpIpuQlZ2JBbhCV+WCbPFUBcGSmE7w4Jd0E2GvCho/NoMODLwgcVGQA97A==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-shadow": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-shadow/-/plugin-shadow-0.16.13.tgz",
      "integrity": "sha512-nmu5VSZ9hsB1JchTKhnnCY+paRBnwzSyK5fhkhtQHHoFD5ArBQ/5wU8y6tCr7k/GQhhGq1OrixsECeMjPoc8Zw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blur": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/@jimp/plugin-threshold": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-threshold/-/plugin-threshold-0.16.13.tgz",
      "integrity": "sha512-+3zArBH0OE3Rhjm4HyAokMsZlIq5gpQec33CncyoSwxtRBM2WAhUVmCUKuBo+Lr/2/4ISoY4BWpHKhMLDix6cA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-color": ">=0.8.0",
        "@jimp/plugin-resize": ">=0.8.0"
      }
    },
    "node_modules/@jimp/plugins": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/plugins/-/plugins-0.16.13.tgz",
      "integrity": "sha512-CJLdqODEhEVs4MgWCxpWL5l95sCBlkuSLz65cxEm56X5akIsn4LOlwnKoSEZioYcZUBvHhCheH67AyPTudfnQQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/plugin-blit": "^0.16.13",
        "@jimp/plugin-blur": "^0.16.13",
        "@jimp/plugin-circle": "^0.16.13",
        "@jimp/plugin-color": "^0.16.13",
        "@jimp/plugin-contain": "^0.16.13",
        "@jimp/plugin-cover": "^0.16.13",
        "@jimp/plugin-crop": "^0.16.13",
        "@jimp/plugin-displace": "^0.16.13",
        "@jimp/plugin-dither": "^0.16.13",
        "@jimp/plugin-fisheye": "^0.16.13",
        "@jimp/plugin-flip": "^0.16.13",
        "@jimp/plugin-gaussian": "^0.16.13",
        "@jimp/plugin-invert": "^0.16.13",
        "@jimp/plugin-mask": "^0.16.13",
        "@jimp/plugin-normalize": "^0.16.13",
        "@jimp/plugin-print": "^0.16.13",
        "@jimp/plugin-resize": "^0.16.13",
        "@jimp/plugin-rotate": "^0.16.13",
        "@jimp/plugin-scale": "^0.16.13",
        "@jimp/plugin-shadow": "^0.16.13",
        "@jimp/plugin-threshold": "^0.16.13",
        "timm": "^1.6.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/png": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/png/-/png-0.16.13.tgz",
      "integrity": "sha512-8cGqINvbWJf1G0Her9zbq9I80roEX0A+U45xFby3tDWfzn+Zz8XKDF1Nv9VUwVx0N3zpcG1RPs9hfheG4Cq2kg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.16.13",
        "pngjs": "^3.3.3"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/tiff": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/tiff/-/tiff-0.16.13.tgz",
      "integrity": "sha512-oJY8d9u95SwW00VPHuCNxPap6Q1+E/xM5QThb9Hu+P6EGuu6lIeLaNBMmFZyblwFbwrH+WBOZlvIzDhi4Dm/6Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "utif": "^2.0.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/types": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/types/-/types-0.16.13.tgz",
      "integrity": "sha512-mC0yVNUobFDjoYLg4hoUwzMKgNlxynzwt3cDXzumGvRJ7Kb8qQGOWJQjQFo5OxmGExqzPphkirdbBF88RVLBCg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/bmp": "^0.16.13",
        "@jimp/gif": "^0.16.13",
        "@jimp/jpeg": "^0.16.13",
        "@jimp/png": "^0.16.13",
        "@jimp/tiff": "^0.16.13",
        "timm": "^1.6.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/@jimp/utils": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/@jimp/utils/-/utils-0.16.13.tgz",
      "integrity": "sha512-VyCpkZzFTHXtKgVO35iKN0sYR10psGpV6SkcSeV4oF7eSYlR8Bl6aQLCzVeFjvESF7mxTmIiI3/XrMobVrtxDA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "regenerator-runtime": "^0.13.3"
      }
    },
    "node_modules/@jsep-plugin/assignment": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@jsep-plugin/assignment/-/assignment-1.3.0.tgz",
      "integrity": "sha512-VVgV+CXrhbMI3aSusQyclHkenWSAm95WaiKrMxRFam3JSUiIaQjoMIw2sEs/OX4XifnqeQUN4DYbJjlA8EfktQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 10.16.0"
      },
      "peerDependencies": {
        "jsep": "^0.4.0||^1.0.0"
      }
    },
    "node_modules/@jsep-plugin/regex": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@jsep-plugin/regex/-/regex-1.0.4.tgz",
      "integrity": "sha512-q7qL4Mgjs1vByCaTnDFcBnV9HS7GVPJX5vyVoCgZHNSC9rjwIlmbXG5sUuorR5ndfHAIlJ8pVStxvjXHbNvtUg==",
      "license": "MIT",
      "engines": {
        "node": ">= 10.16.0"
      },
      "peerDependencies": {
        "jsep": "^0.4.0||^1.0.0"
      }
    },
    "node_modules/@keyv/serialize": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@keyv/serialize/-/serialize-1.1.0.tgz",
      "integrity": "sha512-RlDgexML7Z63Q8BSaqhXdCYNBy/JQnqYIwxofUrNLGCblOMHp+xux2Q8nLMLlPpgHQPoU0Do8Z6btCpRBEqZ8g==",
      "license": "MIT"
    },
    "node_modules/@mongodb-js/saslprep": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@mongodb-js/saslprep/-/saslprep-1.3.0.tgz",
      "integrity": "sha512-zlayKCsIjYb7/IdfqxorK5+xUMyi4vOKcFy10wKJYc63NSdKI8mNME+uJqfatkPmOSMMUiojrL58IePKBm3gvQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "sparse-bitfield": "^3.0.3"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@protobufjs/aspromise": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
      "integrity": "sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/base64": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
      "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/codegen": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
      "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/eventemitter": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
      "integrity": "sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/fetch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
      "integrity": "sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.1",
        "@protobufjs/inquire": "^1.1.0"
      }
    },
    "node_modules/@protobufjs/float": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
      "integrity": "sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/inquire": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
      "integrity": "sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/path": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
      "integrity": "sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/pool": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
      "integrity": "sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/utf8": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
      "integrity": "sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@sindresorhus/is": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz",
      "integrity": "sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/is?sponsor=1"
      }
    },
    "node_modules/@smithy/abort-controller": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/abort-controller/-/abort-controller-4.0.4.tgz",
      "integrity": "sha512-gJnEjZMvigPDQWHrW3oPrFhQtkrgqBkyjj3pCIdF3A5M6vsZODG93KNlfJprv6bp4245bdT32fsHK4kkH3KYDA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/config-resolver": {
      "version": "4.1.4",
      "resolved": "https://registry.npmjs.org/@smithy/config-resolver/-/config-resolver-4.1.4.tgz",
      "integrity": "sha512-prmU+rDddxHOH0oNcwemL+SwnzcG65sBF2yXRO7aeXIn/xTlq2pX7JLVbkBnVLowHLg4/OL4+jBmv9hVrVGS+w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/types": "^4.3.1",
        "@smithy/util-config-provider": "^4.0.0",
        "@smithy/util-middleware": "^4.0.4",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/core": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/@smithy/core/-/core-3.7.2.tgz",
      "integrity": "sha512-JoLw59sT5Bm8SAjFCYZyuCGxK8y3vovmoVbZWLDPTH5XpPEIwpFd9m90jjVMwoypDuB/SdVgje5Y4T7w50lJaw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/middleware-serde": "^4.0.8",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "@smithy/util-base64": "^4.0.0",
        "@smithy/util-body-length-browser": "^4.0.0",
        "@smithy/util-middleware": "^4.0.4",
        "@smithy/util-stream": "^4.2.3",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/credential-provider-imds": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@smithy/credential-provider-imds/-/credential-provider-imds-4.0.6.tgz",
      "integrity": "sha512-hKMWcANhUiNbCJouYkZ9V3+/Qf9pteR1dnwgdyzR09R4ODEYx8BbUysHwRSyex4rZ9zapddZhLFTnT4ZijR4pw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "@smithy/url-parser": "^4.0.4",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/fetch-http-handler": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/@smithy/fetch-http-handler/-/fetch-http-handler-5.1.0.tgz",
      "integrity": "sha512-mADw7MS0bYe2OGKkHYMaqarOXuDwRbO6ArD91XhHcl2ynjGCFF+hvqf0LyQcYxkA1zaWjefSkU7Ne9mqgApSgQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/querystring-builder": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "@smithy/util-base64": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/hash-node": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/hash-node/-/hash-node-4.0.4.tgz",
      "integrity": "sha512-qnbTPUhCVnCgBp4z4BUJUhOEkVwxiEi1cyFM+Zj6o+aY8OFGxUQleKWq8ltgp3dujuhXojIvJWdoqpm6dVO3lQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "@smithy/util-buffer-from": "^4.0.0",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/invalid-dependency": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/invalid-dependency/-/invalid-dependency-4.0.4.tgz",
      "integrity": "sha512-bNYMi7WKTJHu0gn26wg8OscncTt1t2b8KcsZxvOv56XA6cyXtOAAAaNP7+m45xfppXfOatXF3Sb1MNsLUgVLTw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/is-array-buffer": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/is-array-buffer/-/is-array-buffer-4.0.0.tgz",
      "integrity": "sha512-saYhF8ZZNoJDTvJBEWgeBccCg+yvp1CX+ed12yORU3NilJScfc6gfch2oVb4QgxZrGUx3/ZJlb+c/dJbyupxlw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/middleware-content-length": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/middleware-content-length/-/middleware-content-length-4.0.4.tgz",
      "integrity": "sha512-F7gDyfI2BB1Kc+4M6rpuOLne5LOcEknH1n6UQB69qv+HucXBR1rkzXBnQTB2q46sFy1PM/zuSJOB532yc8bg3w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/middleware-endpoint": {
      "version": "4.1.17",
      "resolved": "https://registry.npmjs.org/@smithy/middleware-endpoint/-/middleware-endpoint-4.1.17.tgz",
      "integrity": "sha512-S3hSGLKmHG1m35p/MObQCBCdRsrpbPU8B129BVzRqRfDvQqPMQ14iO4LyRw+7LNizYc605COYAcjqgawqi+6jA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/core": "^3.7.2",
        "@smithy/middleware-serde": "^4.0.8",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/shared-ini-file-loader": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "@smithy/url-parser": "^4.0.4",
        "@smithy/util-middleware": "^4.0.4",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/middleware-retry": {
      "version": "4.1.18",
      "resolved": "https://registry.npmjs.org/@smithy/middleware-retry/-/middleware-retry-4.1.18.tgz",
      "integrity": "sha512-bYLZ4DkoxSsPxpdmeapvAKy7rM5+25gR7PGxq2iMiecmbrRGBHj9s75N74Ylg+aBiw9i5jIowC/cLU2NR0qH8w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/service-error-classification": "^4.0.6",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "@smithy/util-middleware": "^4.0.4",
        "@smithy/util-retry": "^4.0.6",
        "tslib": "^2.6.2",
        "uuid": "^9.0.1"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/middleware-serde": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/@smithy/middleware-serde/-/middleware-serde-4.0.8.tgz",
      "integrity": "sha512-iSSl7HJoJaGyMIoNn2B7czghOVwJ9nD7TMvLhMWeSB5vt0TnEYyRRqPJu/TqW76WScaNvYYB8nRoiBHR9S1Ddw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/middleware-stack": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/middleware-stack/-/middleware-stack-4.0.4.tgz",
      "integrity": "sha512-kagK5ggDrBUCCzI93ft6DjteNSfY8Ulr83UtySog/h09lTIOAJ/xUSObutanlPT0nhoHAkpmW9V5K8oPyLh+QA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/node-config-provider": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@smithy/node-config-provider/-/node-config-provider-4.1.3.tgz",
      "integrity": "sha512-HGHQr2s59qaU1lrVH6MbLlmOBxadtzTsoO4c+bF5asdgVik3I8o7JIOzoeqWc5MjVa+vD36/LWE0iXKpNqooRw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/property-provider": "^4.0.4",
        "@smithy/shared-ini-file-loader": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/node-http-handler": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/@smithy/node-http-handler/-/node-http-handler-4.1.0.tgz",
      "integrity": "sha512-vqfSiHz2v8b3TTTrdXi03vNz1KLYYS3bhHCDv36FYDqxT7jvTll1mMnCrkD+gOvgwybuunh/2VmvOMqwBegxEg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/abort-controller": "^4.0.4",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/querystring-builder": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/property-provider": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/property-provider/-/property-provider-4.0.4.tgz",
      "integrity": "sha512-qHJ2sSgu4FqF4U/5UUp4DhXNmdTrgmoAai6oQiM+c5RZ/sbDwJ12qxB1M6FnP+Tn/ggkPZf9ccn4jqKSINaquw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/protocol-http": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@smithy/protocol-http/-/protocol-http-5.1.2.tgz",
      "integrity": "sha512-rOG5cNLBXovxIrICSBm95dLqzfvxjEmuZx4KK3hWwPFHGdW3lxY0fZNXfv2zebfRO7sJZ5pKJYHScsqopeIWtQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/querystring-builder": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/querystring-builder/-/querystring-builder-4.0.4.tgz",
      "integrity": "sha512-SwREZcDnEYoh9tLNgMbpop+UTGq44Hl9tdj3rf+yeLcfH7+J8OXEBaMc2kDxtyRHu8BhSg9ADEx0gFHvpJgU8w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "@smithy/util-uri-escape": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/querystring-parser": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/querystring-parser/-/querystring-parser-4.0.4.tgz",
      "integrity": "sha512-6yZf53i/qB8gRHH/l2ZwUG5xgkPgQF15/KxH0DdXMDHjesA9MeZje/853ifkSY0x4m5S+dfDZ+c4x439PF0M2w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/service-error-classification": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@smithy/service-error-classification/-/service-error-classification-4.0.6.tgz",
      "integrity": "sha512-RRoTDL//7xi4tn5FrN2NzH17jbgmnKidUqd4KvquT0954/i6CXXkh1884jBiunq24g9cGtPBEXlU40W6EpNOOg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/shared-ini-file-loader": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/shared-ini-file-loader/-/shared-ini-file-loader-4.0.4.tgz",
      "integrity": "sha512-63X0260LoFBjrHifPDs+nM9tV0VMkOTl4JRMYNuKh/f5PauSjowTfvF3LogfkWdcPoxsA9UjqEOgjeYIbhb7Nw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/signature-v4": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/@smithy/signature-v4/-/signature-v4-5.1.2.tgz",
      "integrity": "sha512-d3+U/VpX7a60seHziWnVZOHuEgJlclufjkS6zhXvxcJgkJq4UWdH5eOBLzHRMx6gXjsdT9h6lfpmLzbrdupHgQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/is-array-buffer": "^4.0.0",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "@smithy/util-hex-encoding": "^4.0.0",
        "@smithy/util-middleware": "^4.0.4",
        "@smithy/util-uri-escape": "^4.0.0",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/smithy-client": {
      "version": "4.4.9",
      "resolved": "https://registry.npmjs.org/@smithy/smithy-client/-/smithy-client-4.4.9.tgz",
      "integrity": "sha512-mbMg8mIUAWwMmb74LoYiArP04zWElPzDoA1jVOp3or0cjlDMgoS6WTC3QXK0Vxoc9I4zdrX0tq6qsOmaIoTWEQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/core": "^3.7.2",
        "@smithy/middleware-endpoint": "^4.1.17",
        "@smithy/middleware-stack": "^4.0.4",
        "@smithy/protocol-http": "^5.1.2",
        "@smithy/types": "^4.3.1",
        "@smithy/util-stream": "^4.2.3",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/types": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/@smithy/types/-/types-4.3.1.tgz",
      "integrity": "sha512-UqKOQBL2x6+HWl3P+3QqFD4ncKq0I8Nuz9QItGv5WuKuMHuuwlhvqcZCoXGfc+P1QmfJE7VieykoYYmrOoFJxA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/url-parser": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/url-parser/-/url-parser-4.0.4.tgz",
      "integrity": "sha512-eMkc144MuN7B0TDA4U2fKs+BqczVbk3W+qIvcoCY6D1JY3hnAdCuhCZODC+GAeaxj0p6Jroz4+XMUn3PCxQQeQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/querystring-parser": "^4.0.4",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-base64": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-base64/-/util-base64-4.0.0.tgz",
      "integrity": "sha512-CvHfCmO2mchox9kjrtzoHkWHxjHZzaFojLc8quxXY7WAAMAg43nuxwv95tATVgQFNDwd4M9S1qFzj40Ul41Kmg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/util-buffer-from": "^4.0.0",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-body-length-browser": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-body-length-browser/-/util-body-length-browser-4.0.0.tgz",
      "integrity": "sha512-sNi3DL0/k64/LO3A256M+m3CDdG6V7WKWHdAiBBMUN8S3hK3aMPhwnPik2A/a2ONN+9doY9UxaLfgqsIRg69QA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-body-length-node": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-body-length-node/-/util-body-length-node-4.0.0.tgz",
      "integrity": "sha512-q0iDP3VsZzqJyje8xJWEJCNIu3lktUGVoSy1KB0UWym2CL1siV3artm+u1DFYTLejpsrdGyCSWBdGNjJzfDPjg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-buffer-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-buffer-from/-/util-buffer-from-4.0.0.tgz",
      "integrity": "sha512-9TOQ7781sZvddgO8nxueKi3+yGvkY35kotA0Y6BWRajAv8jjmigQ1sBwz0UX47pQMYXJPahSKEKYFgt+rXdcug==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/is-array-buffer": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-config-provider": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-config-provider/-/util-config-provider-4.0.0.tgz",
      "integrity": "sha512-L1RBVzLyfE8OXH+1hsJ8p+acNUSirQnWQ6/EgpchV88G6zGBTDPdXiiExei6Z1wR2RxYvxY/XLw6AMNCCt8H3w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-defaults-mode-browser": {
      "version": "4.0.25",
      "resolved": "https://registry.npmjs.org/@smithy/util-defaults-mode-browser/-/util-defaults-mode-browser-4.0.25.tgz",
      "integrity": "sha512-pxEWsxIsOPLfKNXvpgFHBGFC3pKYKUFhrud1kyooO9CJai6aaKDHfT10Mi5iiipPXN/JhKAu3qX9o75+X85OdQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/property-provider": "^4.0.4",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "bowser": "^2.11.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-defaults-mode-node": {
      "version": "4.0.25",
      "resolved": "https://registry.npmjs.org/@smithy/util-defaults-mode-node/-/util-defaults-mode-node-4.0.25.tgz",
      "integrity": "sha512-+w4n4hKFayeCyELZLfsSQG5mCC3TwSkmRHv4+el5CzFU8ToQpYGhpV7mrRzqlwKkntlPilT1HJy1TVeEvEjWOQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/config-resolver": "^4.1.4",
        "@smithy/credential-provider-imds": "^4.0.6",
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/property-provider": "^4.0.4",
        "@smithy/smithy-client": "^4.4.9",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-endpoints": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/@smithy/util-endpoints/-/util-endpoints-3.0.6.tgz",
      "integrity": "sha512-YARl3tFL3WgPuLzljRUnrS2ngLiUtkwhQtj8PAL13XZSyUiNLQxwG3fBBq3QXFqGFUXepIN73pINp3y8c2nBmA==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/node-config-provider": "^4.1.3",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-hex-encoding": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-hex-encoding/-/util-hex-encoding-4.0.0.tgz",
      "integrity": "sha512-Yk5mLhHtfIgW2W2WQZWSg5kuMZCVbvhFmC7rV4IO2QqnZdbEFPmQnCcGMAX2z/8Qj3B9hYYNjZOhWym+RwhePw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-middleware": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@smithy/util-middleware/-/util-middleware-4.0.4.tgz",
      "integrity": "sha512-9MLKmkBmf4PRb0ONJikCbCwORACcil6gUWojwARCClT7RmLzF04hUR4WdRprIXal7XVyrddadYNfp2eF3nrvtQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-retry": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@smithy/util-retry/-/util-retry-4.0.6.tgz",
      "integrity": "sha512-+YekoF2CaSMv6zKrA6iI/N9yva3Gzn4L6n35Luydweu5MMPYpiGZlWqehPHDHyNbnyaYlz/WJyYAZnC+loBDZg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/service-error-classification": "^4.0.6",
        "@smithy/types": "^4.3.1",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-stream": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/@smithy/util-stream/-/util-stream-4.2.3.tgz",
      "integrity": "sha512-cQn412DWHHFNKrQfbHY8vSFI3nTROY1aIKji9N0tpp8gUABRilr7wdf8fqBbSlXresobM+tQFNk6I+0LXK/YZg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/fetch-http-handler": "^5.1.0",
        "@smithy/node-http-handler": "^4.1.0",
        "@smithy/types": "^4.3.1",
        "@smithy/util-base64": "^4.0.0",
        "@smithy/util-buffer-from": "^4.0.0",
        "@smithy/util-hex-encoding": "^4.0.0",
        "@smithy/util-utf8": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-uri-escape": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-uri-escape/-/util-uri-escape-4.0.0.tgz",
      "integrity": "sha512-77yfbCbQMtgtTylO9itEAdpPXSog3ZxMe09AEhm0dU0NLTalV70ghDZFR+Nfi1C60jnJoh/Re4090/DuZh2Omg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@smithy/util-utf8": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@smithy/util-utf8/-/util-utf8-4.0.0.tgz",
      "integrity": "sha512-b+zebfKCfRdgNJDknHCob3O7FpeYQN6ZG6YLExMcasDHsCXlsXCEuiPZeLnJLpwa5dvPetGlnGCiMHuLwGvFow==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@smithy/util-buffer-from": "^4.0.0",
        "tslib": "^2.6.2"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@socket.io/component-emitter": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz",
      "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==",
      "license": "MIT"
    },
    "node_modules/@szmarczak/http-timer": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz",
      "integrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==",
      "license": "MIT",
      "dependencies": {
        "defer-to-connect": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@tokenizer/token": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@tokenizer/token/-/token-0.3.0.tgz",
      "integrity": "sha512-OvjF+z51L3ov0OyAU0duzsYuvO01PH7x4t6DJx+guahgTnBHkhJdG7soQeTSFLWN3efnHyibZ4Z8l2EuWwJN3A==",
      "license": "MIT"
    },
    "node_modules/@tootallnate/once": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@tootallnate/once/-/once-2.0.0.tgz",
      "integrity": "sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==",
      "license": "MIT",
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@types/cacheable-request": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.3.tgz",
      "integrity": "sha512-IQ3EbTzGxIigb1I3qPZc1rWJnH0BmSKv5QYTalEwweFvyBDLSAe24zP0le/hyi7ecGfZVlIVAg4BZqb8WBwKqw==",
      "license": "MIT",
      "dependencies": {
        "@types/http-cache-semantics": "*",
        "@types/keyv": "^3.1.4",
        "@types/node": "*",
        "@types/responselike": "^1.0.0"
      }
    },
    "node_modules/@types/cors": {
      "version": "2.8.19",
      "resolved": "https://registry.npmjs.org/@types/cors/-/cors-2.8.19.tgz",
      "integrity": "sha512-mFNylyeyqN93lfe/9CSxOGREz8cpzAhH+E93xJ4xWQf62V8sQ/24reV2nyzUWM6H6Xji+GGHpkbLe7pVoUEskg==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@types/http-cache-semantics": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.4.tgz",
      "integrity": "sha512-1m0bIFVc7eJWyve9S0RnuRgcQqF/Xd5QsUZAZeQFr1Q3/p9JWoQQEqmVy+DPTNpGXwhgIetAoYF8JSc33q29QA==",
      "license": "MIT"
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@types/keyv": {
      "version": "3.1.4",
      "resolved": "https://registry.npmjs.org/@types/keyv/-/keyv-3.1.4.tgz",
      "integrity": "sha512-BQ5aZNSCpj7D6K2ksrRCTmKRLEpnPvWDiLPfoGyhZ++8YtiK9d/3DBKPJgry359X/P1PfruyYwvnvwFjuEiEIg==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/long": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@types/long/-/long-4.0.2.tgz",
      "integrity": "sha512-MqTGEo5bj5t157U6fA/BiDynNkn0YknVdh48CMPkTSpFTVmvao5UQmm7uEF6xBEo7qIMAlY/JSleYaE6VOdpaA==",
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "24.1.0",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.1.0.tgz",
      "integrity": "sha512-ut5FthK5moxFKH2T1CUOC6ctR67rQRvvHdFLCD2Ql6KXmMuCrjsSsRI9UsLCm9M18BMwClv4pn327UvB7eeO1w==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~7.8.0"
      }
    },
    "node_modules/@types/responselike": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@types/responselike/-/responselike-1.0.3.tgz",
      "integrity": "sha512-H/+L+UkTV33uf49PH5pCAUBVPNj2nDBXTN+qS1dOwyyg24l3CcicicCA7ca+HMvJBZcFgl5r8e+RR6elsb4Lyw==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/tinycolor2": {
      "version": "1.4.6",
      "resolved": "https://registry.npmjs.org/@types/tinycolor2/-/tinycolor2-1.4.6.tgz",
      "integrity": "sha512-iEN8J0BoMnsWBqjVbWH/c0G0Hh7O21lpR2/+PrvAVgWdzL7eexIFm4JN/Wn10PTcmNdtS6U67r499mlWMXOxNw==",
      "license": "MIT"
    },
    "node_modules/@types/webidl-conversions": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/@types/webidl-conversions/-/webidl-conversions-7.0.3.tgz",
      "integrity": "sha512-CiJJvcRtIgzadHCYXw7dqEnMNRjhGZlYK05Mj9OyktqV8uVT8fD2BFOB7S1uwBE3Kj2Z+4UyPmFw/Ixgw/LAlA==",
      "license": "MIT"
    },
    "node_modules/@types/whatwg-url": {
      "version": "8.2.2",
      "resolved": "https://registry.npmjs.org/@types/whatwg-url/-/whatwg-url-8.2.2.tgz",
      "integrity": "sha512-FtQu10RWgn3D9U4aazdwIE2yzphmTJREDqNdODHrbrZmmMqI0vMheC/6NE/J1Yveaj8H+ela+YwWTjq5PGmuhA==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "@types/webidl-conversions": "*"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.38.0.tgz",
      "integrity": "sha512-CPoznzpuAnIOl4nhj4tRr4gIPj5AfKgkiJmGQDaq+fQnRJTYlcBjbX3wbciGmpoPf8DREufuPRe1tNMZnGdanA==",
      "license": "MIT",
      "dependencies": {
        "@eslint-community/regexpp": "^4.10.0",
        "@typescript-eslint/scope-manager": "8.38.0",
        "@typescript-eslint/type-utils": "8.38.0",
        "@typescript-eslint/utils": "8.38.0",
        "@typescript-eslint/visitor-keys": "8.38.0",
        "graphemer": "^1.4.0",
        "ignore": "^7.0.0",
        "natural-compare": "^1.4.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "@typescript-eslint/parser": "^8.38.0",
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.38.0.tgz",
      "integrity": "sha512-Zhy8HCvBUEfBECzIl1PKqF4p11+d0aUJS1GeUiuqK9WmOug8YCmC4h4bjyBvMyAMI9sbRczmrYL5lKg/YMbrcQ==",
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/scope-manager": "8.38.0",
        "@typescript-eslint/types": "8.38.0",
        "@typescript-eslint/typescript-estree": "8.38.0",
        "@typescript-eslint/visitor-keys": "8.38.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/project-service": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.38.0.tgz",
      "integrity": "sha512-dbK7Jvqcb8c9QfH01YB6pORpqX1mn5gDZc9n63Ak/+jD67oWXn3Gs0M6vddAN+eDXBCS5EmNWzbSxsn9SzFWWg==",
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/tsconfig-utils": "^8.38.0",
        "@typescript-eslint/types": "^8.38.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.38.0.tgz",
      "integrity": "sha512-WJw3AVlFFcdT9Ri1xs/lg8LwDqgekWXWhH3iAF+1ZM+QPd7oxQ6jvtW/JPwzAScxitILUIFs0/AnQ/UWHzbATQ==",
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.38.0",
        "@typescript-eslint/visitor-keys": "8.38.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/tsconfig-utils": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.38.0.tgz",
      "integrity": "sha512-Lum9RtSE3EroKk/bYns+sPOodqb2Fv50XOl/gMviMKNvanETUuUcC9ObRbzrJ4VSd2JalPqgSAavwrPiPvnAiQ==",
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/type-utils": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.38.0.tgz",
      "integrity": "sha512-c7jAvGEZVf0ao2z+nnz8BUaHZD09Agbh+DY7qvBQqLiz8uJzRgVPj5YvOh8I8uEiH8oIUGIfHzMwUcGVco/SJg==",
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.38.0",
        "@typescript-eslint/typescript-estree": "8.38.0",
        "@typescript-eslint/utils": "8.38.0",
        "debug": "^4.3.4",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.38.0.tgz",
      "integrity": "sha512-wzkUfX3plUqij4YwWaJyqhiPE5UCRVlFpKn1oCRn2O1bJ592XxWJj8ROQ3JD5MYXLORW84063z3tZTb/cs4Tyw==",
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.38.0.tgz",
      "integrity": "sha512-fooELKcAKzxux6fA6pxOflpNS0jc+nOQEEOipXFNjSlBS6fqrJOVY/whSn70SScHrcJ2LDsxWrneFoWYSVfqhQ==",
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/project-service": "8.38.0",
        "@typescript-eslint/tsconfig-utils": "8.38.0",
        "@typescript-eslint/types": "8.38.0",
        "@typescript-eslint/visitor-keys": "8.38.0",
        "debug": "^4.3.4",
        "fast-glob": "^3.3.2",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/utils": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.38.0.tgz",
      "integrity": "sha512-hHcMA86Hgt+ijJlrD8fX0j1j8w4C92zue/8LOPAFioIno+W0+L7KqE8QZKCcPGc/92Vs9x36w/4MPTJhqXdyvg==",
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.7.0",
        "@typescript-eslint/scope-manager": "8.38.0",
        "@typescript-eslint/types": "8.38.0",
        "@typescript-eslint/typescript-estree": "8.38.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <5.9.0"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "8.38.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.38.0.tgz",
      "integrity": "sha512-pWrTcoFNWuwHlA9CvlfSsGWs14JxfN1TH25zM5L7o0pRLhsoZkDnTsXfQRJBEWJoV5DL0jf+Z+sxiud+K0mq1g==",
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.38.0",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys/node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@whiskeysockets/baileys": {
      "version": "6.7.18",
      "resolved": "https://registry.npmjs.org/@whiskeysockets/baileys/-/baileys-6.7.18.tgz",
      "integrity": "sha512-lstyxtAdOC7vuI9dWyxDg9DQlYSz8MhVsBkQUTX9EWt0GY0IJIa2Rnu4psGXa1OxgNvYwLaGSHiQBRil8mGb8g==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "@cacheable/node-cache": "^1.4.0",
        "@hapi/boom": "^9.1.3",
        "@whiskeysockets/eslint-config": "github:whiskeysockets/eslint-config",
        "async-mutex": "^0.5.0",
        "axios": "^1.6.0",
        "libsignal": "github:WhiskeySockets/libsignal-node",
        "lodash": "^4.17.21",
        "music-metadata": "^7.12.3",
        "pino": "^9.6",
        "protobufjs": "^7.2.4",
        "ws": "^8.13.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "audio-decode": "^2.1.3",
        "jimp": "^0.16.1",
        "link-preview-js": "^3.0.0",
        "sharp": "^0.32.6"
      },
      "peerDependenciesMeta": {
        "audio-decode": {
          "optional": true
        },
        "jimp": {
          "optional": true
        },
        "link-preview-js": {
          "optional": true
        },
        "sharp": {
          "optional": true
        }
      }
    },
    "node_modules/@whiskeysockets/baileys/node_modules/axios": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.11.0.tgz",
      "integrity": "sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.4",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/@whiskeysockets/baileys/node_modules/on-exit-leak-free": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/on-exit-leak-free/-/on-exit-leak-free-2.1.2.tgz",
      "integrity": "sha512-0eJJY6hXLGf1udHwfNftBqH+g73EU4B504nZeKpz1sYRKafAghwxEJunB2O7rDZkL4PGfsMVnTXZ2EjibbqcsA==",
      "license": "MIT",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@whiskeysockets/baileys/node_modules/pino": {
      "version": "9.7.0",
      "resolved": "https://registry.npmjs.org/pino/-/pino-9.7.0.tgz",
      "integrity": "sha512-vnMCM6xZTb1WDmLvtG2lE/2p+t9hDEIvTWJsu6FejkE62vB7gDhvzrpFR4Cw2to+9JNQxVnkAKVPA1KPB98vWg==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0",
        "fast-redact": "^3.1.1",
        "on-exit-leak-free": "^2.1.0",
        "pino-abstract-transport": "^2.0.0",
        "pino-std-serializers": "^7.0.0",
        "process-warning": "^5.0.0",
        "quick-format-unescaped": "^4.0.3",
        "real-require": "^0.2.0",
        "safe-stable-stringify": "^2.3.1",
        "sonic-boom": "^4.0.1",
        "thread-stream": "^3.0.0"
      },
      "bin": {
        "pino": "bin.js"
      }
    },
    "node_modules/@whiskeysockets/baileys/node_modules/pino-abstract-transport": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/pino-abstract-transport/-/pino-abstract-transport-2.0.0.tgz",
      "integrity": "sha512-F63x5tizV6WCh4R6RHyi2Ml+M70DNRXt/+HANowMflpgGFMAym/VKm6G7ZOQRjqN7XbGxK1Lg9t6ZrtzOaivMw==",
      "license": "MIT",
      "dependencies": {
        "split2": "^4.0.0"
      }
    },
    "node_modules/@whiskeysockets/baileys/node_modules/pino-std-serializers": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-7.0.0.tgz",
      "integrity": "sha512-e906FRY0+tV27iq4juKzSYPbUj2do2X2JX4EzSca1631EB2QJQUqGbDuERal7LCtOpxl6x3+nvo9NPZcmjkiFA==",
      "license": "MIT"
    },
    "node_modules/@whiskeysockets/baileys/node_modules/process-warning": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-5.0.0.tgz",
      "integrity": "sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ],
      "license": "MIT"
    },
    "node_modules/@whiskeysockets/baileys/node_modules/real-require": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/real-require/-/real-require-0.2.0.tgz",
      "integrity": "sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==",
      "license": "MIT",
      "engines": {
        "node": ">= 12.13.0"
      }
    },
    "node_modules/@whiskeysockets/baileys/node_modules/sonic-boom": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-4.2.0.tgz",
      "integrity": "sha512-INb7TM37/mAcsGmc9hyyI6+QR3rR1zVRu36B0NeGXKnOOLiZOfER5SA+N7X7k3yUYRzLWafduTDvJAfDswwEww==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0"
      }
    },
    "node_modules/@whiskeysockets/baileys/node_modules/thread-stream": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/thread-stream/-/thread-stream-3.1.0.tgz",
      "integrity": "sha512-OqyPZ9u96VohAyMfJykzmivOrY2wfMSf3C5TtFJVgN+Hm6aj+voFhlK+kZEIv2FBh1X6Xp3DlnCOfEQ3B2J86A==",
      "license": "MIT",
      "dependencies": {
        "real-require": "^0.2.0"
      }
    },
    "node_modules/@whiskeysockets/eslint-config": {
      "version": "1.0.0",
      "resolved": "git+ssh://git@github.com/whiskeysockets/eslint-config.git#299e8389baf62f9aa3034de18ff0d62cc0a5e838",
      "dependencies": {
        "@typescript-eslint/eslint-plugin": "^8.37.0",
        "@typescript-eslint/parser": "^8.37.0",
        "eslint-plugin-simple-import-sort": "^12.1.1"
      },
      "peerDependencies": {
        "eslint": "^9.31.0",
        "typescript": ">=4"
      }
    },
    "node_modules/@xmldom/xmldom": {
      "version": "0.8.10",
      "resolved": "https://registry.npmjs.org/@xmldom/xmldom/-/xmldom-0.8.10.tgz",
      "integrity": "sha512-2WALfTl4xo2SkGCYRt6rDTFfk9R1czmBvUQy12gK2KuRKIpWEhcbbzy8EZXtz/jkRqHX8bFEc6FC1HjX4TUWYw==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/abab": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/abab/-/abab-2.0.6.tgz",
      "integrity": "sha512-j2afSsaIENvHZN2B8GOpF566vZ5WVk5opAiMTvWgaQT8DkbOqsTfvNAvHoRGU2zzP8cPoqys+xHTRDWW8L+/BA==",
      "deprecated": "Use your platform's native atob() and btoa() methods instead",
      "license": "BSD-3-Clause"
    },
    "node_modules/abort-controller": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
      "integrity": "sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==",
      "license": "MIT",
      "dependencies": {
        "event-target-shim": "^5.0.0"
      },
      "engines": {
        "node": ">=6.5"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "license": "MIT",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-globals": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-6.0.0.tgz",
      "integrity": "sha512-ZQl7LOWaF5ePqqcX4hLuv/bLXYQNfNWw2c0/yX/TsPRKamzHcTGQnlCjHT3TsmkOUVEPS3crCxiPfdzE/Trlhg==",
      "license": "MIT",
      "dependencies": {
        "acorn": "^7.1.1",
        "acorn-walk": "^7.1.1"
      }
    },
    "node_modules/acorn-globals/node_modules/acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "license": "MIT",
      "peer": true,
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/acorn-node": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/acorn-node/-/acorn-node-1.8.2.tgz",
      "integrity": "sha512-8mt+fslDufLYntIoPAaIMUe/lrbrehIiwmR3t2k9LljIzoigEPF27eLk2hy8zSGzmR/ogr7zbRKINMo1u0yh5A==",
      "license": "Apache-2.0",
      "dependencies": {
        "acorn": "^7.0.0",
        "acorn-walk": "^7.0.0",
        "xtend": "^4.0.2"
      }
    },
    "node_modules/acorn-node/node_modules/acorn": {
      "version": "7.4.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz",
      "integrity": "sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==",
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-walk": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
      "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-align": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-align/-/ansi-align-3.0.1.tgz",
      "integrity": "sha512-IOfwwBF5iczOjp/WeY4YxyjqAFMQoZufdQWDd19SEExbVLNXqvpzSJ/M7Za4/sCPmQ0+GRquoA7bGcINcxew6w==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.1.0"
      }
    },
    "node_modules/ansi-align/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-align/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/ansi-align/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-align/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-escapes": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
      "license": "MIT",
      "dependencies": {
        "type-fest": "^0.21.3"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-escapes/node_modules/type-fest": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz",
      "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-base": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/any-base/-/any-base-1.1.0.tgz",
      "integrity": "sha512-uMgjozySS8adZZYePpaWs8cxB9/kdzmpX6SgJZ+wbz1K5eYk5QMYDVJaZKhxyIHUdnnJkfR7SVgStgH7LkGUyg==",
      "license": "MIT"
    },
    "node_modules/app-path": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/app-path/-/app-path-4.0.0.tgz",
      "integrity": "sha512-mgBO9PZJ3MpbKbwFTljTi36ZKBvG5X/fkVR1F85ANsVcVllEb+C0LGNdJfGUm84GpC4xxgN6HFkmkMU8VEO4mA==",
      "license": "MIT",
      "dependencies": {
        "execa": "^5.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "license": "Python-2.0",
      "peer": true
    },
    "node_modules/args": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/args/-/args-5.0.3.tgz",
      "integrity": "sha512-h6k/zfFgusnv3i5TU08KQkVKuCPBtL/PWQbWkHUxvJrZ2nAyeaUupneemcrgn1xmqxPQsPIzwkUhOpoqPDRZuA==",
      "license": "MIT",
      "dependencies": {
        "camelcase": "5.0.0",
        "chalk": "2.4.2",
        "leven": "2.1.0",
        "mri": "1.1.4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/args/node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/args/node_modules/camelcase": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.0.0.tgz",
      "integrity": "sha512-faqwZqnWxbxn+F1d399ygeamQNy3lPp/H9H6rNrqYh4FSVCtcY+3cub1MxA8o9mDd55mM8Aghuu/kuyYA6VTsA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/args/node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/args/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/args/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "license": "MIT"
    },
    "node_modules/args/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
      "license": "MIT"
    },
    "node_modules/array-range": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/array-range/-/array-range-1.0.1.tgz",
      "integrity": "sha512-shdaI1zT3CVNL2hnx9c0JMc0ZogGaxDs5e85akgHWKYa0yVbIyp06Ind3dVkTj/uuFrzaHBOyqFzo+VV6aXgtA==",
      "license": "MIT"
    },
    "node_modules/asn1": {
      "version": "0.2.6",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz",
      "integrity": "sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": "~2.1.0"
      }
    },
    "node_modules/assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/astral-regex": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz",
      "integrity": "sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/async": {
      "version": "0.2.10",
      "resolved": "https://registry.npmjs.org/async/-/async-0.2.10.tgz",
      "integrity": "sha512-eAkdoKxU6/LkKDBzLpT+t6Ff5EtfSF4wx1WfJiPEEV7WNLnDaRXk0oVysiEPm262roaachGexwUv94WhSgN5TQ=="
    },
    "node_modules/async-mutex": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/async-mutex/-/async-mutex-0.5.0.tgz",
      "integrity": "sha512-1A94B18jkJ3DYq284ohPxoXbfTA5HsQ7/Mf4DEhcyLx3Bz27Rh59iScbB6EPiP+B+joue6YCxcMXSbFC1tZKwA==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/async.parallellimit": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.parallellimit/-/async.parallellimit-0.5.2.tgz",
      "integrity": "sha512-4Di2nFsb3jL7aUIICvRSvtw/oynpMIx0JrwYn5hqJI661Dd+mYBi2ElOukOQgRHihU1SCTapb86Vx/Snva5M1w==",
      "license": "MIT",
      "dependencies": {
        "async.util.eachoflimit": "0.5.2",
        "async.util.parallel": "0.5.2"
      }
    },
    "node_modules/async.util.eachoflimit": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.eachoflimit/-/async.util.eachoflimit-0.5.2.tgz",
      "integrity": "sha512-oZksH0sBW0AEOJKgBCQ79io9DZruoRBLTAea/Ik36pejR7pDpByvtXeuJsoZdPwSVslsrQcsUfucbUaiXYBnAQ==",
      "license": "MIT",
      "dependencies": {
        "async.util.keyiterator": "0.5.2",
        "async.util.noop": "0.5.2",
        "async.util.once": "0.5.2",
        "async.util.onlyonce": "0.5.2"
      }
    },
    "node_modules/async.util.isarray": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.isarray/-/async.util.isarray-0.5.2.tgz",
      "integrity": "sha512-wbUzlrwON8RUgi+v/rhF0U99Ce8Osjcn+JP/mFNg6ymvShcobAOvE6cvLajSY5dPqKCOE1xfdhefgBif11zZgw==",
      "license": "MIT"
    },
    "node_modules/async.util.isarraylike": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.isarraylike/-/async.util.isarraylike-0.5.2.tgz",
      "integrity": "sha512-DbFpsz3ZFNkohAW8IpGTlm8gotU32zpqe3Y2XkEA/G3XNO6rmUTKPpo7XgXUruoI+AsGi8+0zWpJHe7t1sLiAg==",
      "license": "MIT",
      "dependencies": {
        "async.util.isarray": "0.5.2"
      }
    },
    "node_modules/async.util.keyiterator": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.keyiterator/-/async.util.keyiterator-0.5.2.tgz",
      "integrity": "sha512-cktrETawCwgu13y3KZs2uMGFnNHc+IjKPZsavtRaoCjLELkePb2co4zrr+ghPvEqLXZIJPTKqC2HFZgJTssMVw==",
      "license": "MIT",
      "dependencies": {
        "async.util.isarraylike": "0.5.2",
        "async.util.keys": "0.5.2"
      }
    },
    "node_modules/async.util.keys": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.keys/-/async.util.keys-0.5.2.tgz",
      "integrity": "sha512-umCOCRCRYwIC2Ho3fbuhKwIIe7OhQsVoVKGoF5GoQiGJUmjP4TG0Bmmcdpm7yW/znoIGKpnjKzVQz0niH4tfqw==",
      "license": "MIT"
    },
    "node_modules/async.util.noop": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.noop/-/async.util.noop-0.5.2.tgz",
      "integrity": "sha512-AdwShXwE0KoskgqVJAck8zcM32nIHj3AC8ZN62ZaR5srhrY235Nw18vOJZWxcOfhxdVM0hRVKM8kMx7lcl7cCQ==",
      "license": "MIT"
    },
    "node_modules/async.util.once": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.once/-/async.util.once-0.5.2.tgz",
      "integrity": "sha512-YQ5WPzDTt2jlblUDkq2I5RV/KiAJErJ4/0cEFhYPaZzqIuF/xDzdGvnEKe7UeuoMszsVPeajzcpKgkbwdb9MUA==",
      "license": "MIT"
    },
    "node_modules/async.util.onlyonce": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.onlyonce/-/async.util.onlyonce-0.5.2.tgz",
      "integrity": "sha512-UgQvkU9JZ+I0Cm1f56XyGXcII+J3d/5XWUuHpcevlItuA3WFSJcqZrsyAUck2FkRSD8BwYQX1zUTDp3SJMVESg==",
      "license": "MIT"
    },
    "node_modules/async.util.parallel": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.parallel/-/async.util.parallel-0.5.2.tgz",
      "integrity": "sha512-0bEvwmQ8fxsTYNwacw5iq0i3PvGryRkXxZ01Rvox21izdMdls9IH2rAZjfunbgI8j6nFRyIdCmMINQ9kka99ow==",
      "license": "MIT",
      "dependencies": {
        "async.util.isarraylike": "0.5.2",
        "async.util.noop": "0.5.2",
        "async.util.restparam": "0.5.2"
      }
    },
    "node_modules/async.util.restparam": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/async.util.restparam/-/async.util.restparam-0.5.2.tgz",
      "integrity": "sha512-Q9Z+zgmtMxFX5i7CnBvNOkgrL5hptztCqwarQluyNudUUk4iCmyjmsQl8MuQEjNh3gGqP5ayvDaextL1VXXgIg==",
      "license": "MIT"
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "license": "MIT"
    },
    "node_modules/atomic-sleep": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/atomic-sleep/-/atomic-sleep-1.0.0.tgz",
      "integrity": "sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/awesome-phonenumber": {
      "version": "2.73.0",
      "resolved": "https://registry.npmjs.org/awesome-phonenumber/-/awesome-phonenumber-2.73.0.tgz",
      "integrity": "sha512-zirkzWFUheNnnPY1QE05PQd+5drn+5kVy76gZ3WyXnLwzXOguw6sqksyZGO1qyNnYj3Y/SDITXnS/TCk/hJXpQ==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==",
      "license": "Apache-2.0",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/aws4": {
      "version": "1.13.2",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.13.2.tgz",
      "integrity": "sha512-lHe62zvbTB5eEABUVi/AwVh0ZKY9rMMDhmm+eeyuuUQbQ3+J+fONVQOZyj+DdrvD4BY33uYniyRJ4UJIaSKAfw==",
      "license": "MIT"
    },
    "node_modules/axios": {
      "version": "0.24.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.24.0.tgz",
      "integrity": "sha512-Q6cWsys88HoPgAaFAVUb0WpPk0O8iTeisR9IMqy9G8AbO4NlpVknrnQS03zzF9PGAWgO3cgletO3VjV/P7VztA==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.14.4"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "license": "MIT"
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/base64id": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/base64id/-/base64id-2.0.0.tgz",
      "integrity": "sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==",
      "license": "MIT",
      "engines": {
        "node": "^4.5.0 || >= 5.9"
      }
    },
    "node_modules/bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "tweetnacl": "^0.14.3"
      }
    },
    "node_modules/bmp-js": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/bmp-js/-/bmp-js-0.1.0.tgz",
      "integrity": "sha512-vHdS19CnY3hwiNdkaqk93DvjVLfbEcI8mys4UjuWrlX1haDmroo8o4xCzh4wD6DGV6HxRCyauwhHRqMTfERtjw==",
      "license": "MIT"
    },
    "node_modules/body-parser": {
      "version": "1.20.3",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.5",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.13.0",
        "raw-body": "2.5.2",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/body-parser/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/body-parser/node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/body-parser/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==",
      "license": "ISC"
    },
    "node_modules/boolstring": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/boolstring/-/boolstring-2.0.1.tgz",
      "integrity": "sha512-tpNlEZsRdZzIP7KElpv0GRiRsnkh7+Ko+W2ohZt2DcH3/z/Gya1r+0dlSSNc5GWGSt0zG7c4JV02U7ZCk/1lWw==",
      "license": "MIT"
    },
    "node_modules/bowser": {
      "version": "2.11.0",
      "resolved": "https://registry.npmjs.org/bowser/-/bowser-2.11.0.tgz",
      "integrity": "sha512-AlcaJBi/pqqJBIQ8U9Mcpc9i8Aqxn88Skv5d+xBX006BY5u8N3mGLHa5Lgppa7L/HfwgwLgZ6NYs+Ag6uUmJRA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/boxen": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/boxen/-/boxen-8.0.1.tgz",
      "integrity": "sha512-F3PH5k5juxom4xktynS7MoFY+NUWH5LC4CnH11YB8NPew+HLpmBLCybSAEyb2F+4pRXhuhWqFesoQd6DAyc2hw==",
      "license": "MIT",
      "dependencies": {
        "ansi-align": "^3.0.1",
        "camelcase": "^8.0.0",
        "chalk": "^5.3.0",
        "cli-boxes": "^3.0.0",
        "string-width": "^7.2.0",
        "type-fest": "^4.21.0",
        "widest-line": "^5.0.0",
        "wrap-ansi": "^9.0.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browser-process-hrtime": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-1.0.0.tgz",
      "integrity": "sha512-9o5UecI3GhkpM6DrXr69PblIuWxPKk9Y0jHBRhdocZ2y7YECBFCsHm79Pr3OyR2AvjhDkabFJaDJMYRazHgsow==",
      "license": "BSD-2-Clause"
    },
    "node_modules/bson": {
      "version": "4.7.2",
      "resolved": "https://registry.npmjs.org/bson/-/bson-4.7.2.tgz",
      "integrity": "sha512-Ry9wCtIZ5kGqkJoi6aD8KjxFZEx78guTQDnpXWiNthsxzrxAK/i8E6pCHAIZTbaEFWcOCvbecMukfK7XUvyLpQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "buffer": "^5.6.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/buffer-equal": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/buffer-equal/-/buffer-equal-0.0.1.tgz",
      "integrity": "sha512-RgSV6InVQ9ODPdLWJ5UAqBqJBOg370Nz6ZQtRzpt6nUjc8v0St97uJ4PYC6NztqIScrAXafKM3mZPMygSe1ggA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/cacheable": {
      "version": "1.10.3",
      "resolved": "https://registry.npmjs.org/cacheable/-/cacheable-1.10.3.tgz",
      "integrity": "sha512-M6p10iJ/VT0wT7TLIGUnm958oVrU2cUK8pQAVU21Zu7h8rbk/PeRtRWrvHJBql97Bhzk3g1N6+2VKC+Rjxna9Q==",
      "license": "MIT",
      "dependencies": {
        "hookified": "^1.10.0",
        "keyv": "^5.4.0"
      }
    },
    "node_modules/cacheable-lookup": {
      "version": "5.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz",
      "integrity": "sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==",
      "license": "MIT",
      "engines": {
        "node": ">=10.6.0"
      }
    },
    "node_modules/cacheable-request": {
      "version": "7.0.4",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.4.tgz",
      "integrity": "sha512-v+p6ongsrp0yTGbJXjgxPow2+DL93DASP4kXCDKb8/bwRtt9OEF3whggkkDkGNzgcWy2XaF4a8nZglC7uElscg==",
      "license": "MIT",
      "dependencies": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^4.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^6.0.1",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cacheable-request/node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-8.0.0.tgz",
      "integrity": "sha512-8WB3Jcas3swSvjIeA2yvCJ+Miyz5l1ZmB6HFb9R1317dt9LCQoswg/BGrmAmkWVEszSrrg4RwmO46qIm2OEnSA==",
      "license": "MIT",
      "engines": {
        "node": ">=16"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw==",
      "license": "Apache-2.0"
    },
    "node_modules/centra": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/centra/-/centra-2.7.0.tgz",
      "integrity": "sha512-PbFMgMSrmgx6uxCdm57RUos9Tc3fclMvhLSATYN39XsDV29B89zZ3KA89jmY0vwSGazyU+uerqwa6t+KaodPcg==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.15.6"
      }
    },
    "node_modules/cfonts": {
      "version": "2.10.1",
      "resolved": "https://registry.npmjs.org/cfonts/-/cfonts-2.10.1.tgz",
      "integrity": "sha512-l5IcLv4SaOdL/EGR6BpOF5SEro88VcGJJ6+xbvJb+wXi19YC6UeHE/brv7a4vIcLZopnt3Ys3zWeNnyfB04UPg==",
      "license": "GPL-2.0",
      "dependencies": {
        "chalk": "^4",
        "window-size": "^1.1.1"
      },
      "bin": {
        "cfonts": "bin/index.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/cfonts/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/cfonts/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cfonts/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/chalk": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-5.5.0.tgz",
      "integrity": "sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==",
      "license": "MIT",
      "engines": {
        "node": "^12.17.0 || ^14.13 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/cheerio": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/cheerio/-/cheerio-1.1.2.tgz",
      "integrity": "sha512-IkxPpb5rS/d1IiLbHMgfPuS0FgiWTtFIm/Nj+2woXDLTZ7fOT2eqzgYbdMlLweqlHbsZjxEChoVK+7iph7jyQg==",
      "license": "MIT",
      "dependencies": {
        "cheerio-select": "^2.1.0",
        "dom-serializer": "^2.0.0",
        "domhandler": "^5.0.3",
        "domutils": "^3.2.2",
        "encoding-sniffer": "^0.2.1",
        "htmlparser2": "^10.0.0",
        "parse5": "^7.3.0",
        "parse5-htmlparser2-tree-adapter": "^7.1.0",
        "parse5-parser-stream": "^7.1.2",
        "undici": "^7.12.0",
        "whatwg-mimetype": "^4.0.0"
      },
      "engines": {
        "node": ">=20.18.1"
      },
      "funding": {
        "url": "https://github.com/cheeriojs/cheerio?sponsor=1"
      }
    },
    "node_modules/cheerio-select": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/cheerio-select/-/cheerio-select-2.1.0.tgz",
      "integrity": "sha512-9v9kG0LvzrlcungtnJtpGNxY+fzECQKhK4EGJX2vByejiMX84MFNQw4UxPJl3bFbTMw+Dfs37XaIkCwTZfLh4g==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "boolbase": "^1.0.0",
        "css-select": "^5.1.0",
        "css-what": "^6.1.0",
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.3",
        "domutils": "^3.0.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/fb55"
      }
    },
    "node_modules/cli-boxes": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cli-boxes/-/cli-boxes-3.0.0.tgz",
      "integrity": "sha512-/lzGpEWL/8PfI0BmBOPRwp0c/wFNX1RdUML3jK/RcSBA9T8mZDdQpqYBKtCFTOfQbwPqWEOpjqW+Fnayc0969g==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cli-cursor": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-5.0.0.tgz",
      "integrity": "sha512-aCj4O5wKyszjMmDT4tZj93kxyydN/K5zPWSCe6/0AV/AA1pqe5ZBIw0a2ZfPQV7lL5/yb5HsUreJ6UFAF1tEQw==",
      "license": "MIT",
      "dependencies": {
        "restore-cursor": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cli-spinners": {
      "version": "2.9.2",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.9.2.tgz",
      "integrity": "sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/cliui/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/cliui/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/clone-response": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.3.tgz",
      "integrity": "sha512-ROoL94jJH2dUVML2Y/5PEDNaSHgeOdSDicUyS7izcF63G6sTc/FTjLub4b8Il9S8S0beOfYt0TaA5qvFK+w0wA==",
      "license": "MIT",
      "dependencies": {
        "mimic-response": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/colorette": {
      "version": "2.0.20",
      "resolved": "https://registry.npmjs.org/colorette/-/colorette-2.0.20.tgz",
      "integrity": "sha512-IfEDxwoWIjkeXL1eXcDiow4UbKjhLdq6/EuSVR9GMN7KVH3r9gQ83e73hsz1Nd1T3ijd5xv1wcWRYO+D6kCI2w==",
      "license": "MIT"
    },
    "node_modules/colors": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
      "integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.1.90"
      }
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "license": "MIT",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "license": "MIT"
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
      "license": "MIT"
    },
    "node_modules/core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
      "license": "MIT"
    },
    "node_modules/cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "license": "MIT",
      "dependencies": {
        "object-assign": "^4",
        "vary": "^1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/css-select": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/css-select/-/css-select-5.2.2.tgz",
      "integrity": "sha512-TizTzUddG/xYLA3NXodFM0fSbNizXjOKhqiQQwvhlspadZokn1KDy0NZFS0wuEubIYAV5/c1/lAr0TaaFXEXzw==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "boolbase": "^1.0.0",
        "css-what": "^6.1.0",
        "domhandler": "^5.0.2",
        "domutils": "^3.0.1",
        "nth-check": "^2.0.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/fb55"
      }
    },
    "node_modules/css-what": {
      "version": "6.2.2",
      "resolved": "https://registry.npmjs.org/css-what/-/css-what-6.2.2.tgz",
      "integrity": "sha512-u/O3vwbptzhMs3L1fQE82ZSLHQQfto5gyZzwteVIEyeaY5Fc7R4dapF/BvRoSYFeqfBk4m0V1Vafq5Pjv25wvA==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">= 6"
      },
      "funding": {
        "url": "https://github.com/sponsors/fb55"
      }
    },
    "node_modules/cssom": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.5.0.tgz",
      "integrity": "sha512-iKuQcq+NdHqlAcwUY0o/HL69XQrUaQdMjmStJ8JFmUaiiQErlhrmuigkg/CU4E2J0IyUKUrMAgl36TvN67MqTw==",
      "license": "MIT"
    },
    "node_modules/cssstyle": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-2.3.0.tgz",
      "integrity": "sha512-AZL67abkUzIuvcHqk7c09cezpGNcxUxU4Ioi/05xHk4DQeTkWmGYftIE6ctU6AEt+Gn4n1lDStOtj7FKycP71A==",
      "license": "MIT",
      "dependencies": {
        "cssom": "~0.3.6"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cssstyle/node_modules/cssom": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.8.tgz",
      "integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==",
      "license": "MIT"
    },
    "node_modules/curve25519-js": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/curve25519-js/-/curve25519-js-0.0.4.tgz",
      "integrity": "sha512-axn2UMEnkhyDUPWOwVKBMVIzSQy2ejH2xRGy1wq81dqRwApXfIzfbE3hIX0ZRFBIihf/KDqK158DLwESu4AK1w==",
      "license": "MIT"
    },
    "node_modules/cycled": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/cycled/-/cycled-1.2.0.tgz",
      "integrity": "sha512-/BOOCEohSBflVHHtY/wUc1F6YDYPqyVs/A837gDoq4H1pm72nU/yChyGt91V4ML+MbbAmHs8uo2l1yJkkTIUdg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/dargs": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/dargs/-/dargs-7.0.0.tgz",
      "integrity": "sha512-2iy1EkLdlBzQGvbweYRFxmFath8+K7+AKB0TlhHWkNuH+TmovaMH/Wp7V7R4u7f4SnX3OgLsU9t1NI9ioDnUpg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==",
      "license": "MIT",
      "dependencies": {
        "assert-plus": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/dasu": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/dasu/-/dasu-0.4.3.tgz",
      "integrity": "sha512-AFwspl5k7V8MW8H7tyIGJ0gtOauUg7JC+DgiRFUIXvPNNDFXTMtvnCkZY0macN6JLGqBjNP38WVnQN7Iv3RSlg==",
      "license": "MIT"
    },
    "node_modules/data-uri-to-buffer": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
      "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==",
      "license": "MIT",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/data-urls": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-3.0.2.tgz",
      "integrity": "sha512-Jy/tj3ldjZJo63sVAvg6LHt2mHvl4V6AgRAmNDtLdm7faqtsx+aJG42rsyCo9JCoRVKwPFzKlIPx3DIibwSIaQ==",
      "license": "MIT",
      "dependencies": {
        "abab": "^2.0.6",
        "whatwg-mimetype": "^3.0.0",
        "whatwg-url": "^11.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/data-urls/node_modules/whatwg-mimetype": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-3.0.0.tgz",
      "integrity": "sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/data-urls/node_modules/whatwg-url": {
      "version": "11.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-11.0.0.tgz",
      "integrity": "sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==",
      "license": "MIT",
      "dependencies": {
        "tr46": "^3.0.0",
        "webidl-conversions": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/dateformat": {
      "version": "4.6.3",
      "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-4.6.3.tgz",
      "integrity": "sha512-2P0p0pFGzHS5EMnhdxQi7aJN+iMheud0UhG4dlE1DLAlvL8JHjJJTX/CSm4JXwV0Ka5nGk3zC5mcb5bUQUxxMA==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/decimal.js": {
      "version": "10.6.0",
      "resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.6.0.tgz",
      "integrity": "sha512-YpgQiITW3JXGntzdUmyUR1V812Hn8T1YVXhCu+wO3OpS4eU9l4YdD3qjyiKdV6mvV29zapkMeD390UVEf2lkUg==",
      "license": "MIT"
    },
    "node_modules/decode-gif": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/decode-gif/-/decode-gif-1.0.1.tgz",
      "integrity": "sha512-L0MT527mwlkil9TiN1xwnJXzUxCup55bUT91CPmQlc9zYejXJ8xp17d5EVnwM80JOIGImBUk1ptJQ+hDihyzwg==",
      "license": "MIT",
      "dependencies": {
        "array-range": "^1.0.1",
        "omggif": "^1.0.10"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/decompress-response": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
      "license": "MIT",
      "dependencies": {
        "mimic-response": "^3.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/decompress-response/node_modules/mimic-response": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/defer-to-connect": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz",
      "integrity": "sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/define-property": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
      "integrity": "sha512-cZTYKFWspt9jZsMscWo8sc/5lbPC9Q0N5nBLgb+Yd915iL3udB1uFgS3B8YCx66UVHq018DAVFoee7x+gxggeA==",
      "license": "MIT",
      "dependencies": {
        "is-descriptor": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/delay": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/delay/-/delay-4.4.1.tgz",
      "integrity": "sha512-aL3AhqtfhOlT/3ai6sWXeqwnw63ATNpnUiN4HL7x9q+My5QtHlO3OIkasmug9LKzpheLdmUKGRKnYXYAS7FQkQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/dijkstrajs": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/dijkstrajs/-/dijkstrajs-1.0.3.tgz",
      "integrity": "sha512-qiSlmBq9+BCdCA/L46dw8Uy93mloxsPSbwnm5yrKn2vMPiy8KyAskTF6zuV/j5BMsmOGZDPs7KjU+mjb670kfA==",
      "license": "MIT"
    },
    "node_modules/dom-serializer": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-2.0.0.tgz",
      "integrity": "sha512-wIkAryiqt/nV5EQKqQpo3SToSOV9J0DnbJqwK7Wv/Trc92zIAYZ4FlMu+JPFW1DfGFt81ZTCGgDEabffXeLyJg==",
      "license": "MIT",
      "dependencies": {
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.2",
        "entities": "^4.2.0"
      },
      "funding": {
        "url": "https://github.com/cheeriojs/dom-serializer?sponsor=1"
      }
    },
    "node_modules/dom-walk": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.2.tgz",
      "integrity": "sha512-6QvTW9mrGeIegrFXdtQi9pk7O/nSK6lSdXW2eqUspN5LWD7UTji2Fqw5V2YLjBpHEoU9Xl/eUWNpDeZvoyOv2w=="
    },
    "node_modules/domelementtype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.3.0.tgz",
      "integrity": "sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "license": "BSD-2-Clause"
    },
    "node_modules/domexception": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/domexception/-/domexception-4.0.0.tgz",
      "integrity": "sha512-A2is4PLG+eeSfoTMA95/s4pvAoSo2mKtiM5jlHkAVewmiO8ISFTFKZjH7UAM1Atli/OT/7JHOrJRJiMKUZKYBw==",
      "deprecated": "Use your platform's native DOMException instead",
      "license": "MIT",
      "dependencies": {
        "webidl-conversions": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/domhandler": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-5.0.3.tgz",
      "integrity": "sha512-cgwlv/1iFQiFnU96XXgROh8xTeetsnJiDsTc7TYCLFd9+/WNkIqPTxiM/8pSd8VIrhXGTf1Ny1q1hquVqDJB5w==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "domelementtype": "^2.3.0"
      },
      "engines": {
        "node": ">= 4"
      },
      "funding": {
        "url": "https://github.com/fb55/domhandler?sponsor=1"
      }
    },
    "node_modules/domutils": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-3.2.2.tgz",
      "integrity": "sha512-6kZKyUajlDuqlHKVX1w7gyslj9MPIXzIFiz/rGu35uC1wMi+kMhQwGhl4lt9unC9Vb9INnY9Z3/ZA3+FhASLaw==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "dom-serializer": "^2.0.0",
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.3"
      },
      "funding": {
        "url": "https://github.com/fb55/domutils?sponsor=1"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/duplexify": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-4.1.3.tgz",
      "integrity": "sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==",
      "license": "MIT",
      "dependencies": {
        "end-of-stream": "^1.4.1",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1",
        "stream-shift": "^1.0.2"
      }
    },
    "node_modules/duplexify/node_modules/readable-stream": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
      "license": "MIT",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==",
      "license": "MIT",
      "dependencies": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "node_modules/ecc-jsbn/node_modules/jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg==",
      "license": "MIT"
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
      "license": "MIT"
    },
    "node_modules/emoji-api": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/emoji-api/-/emoji-api-1.0.2.tgz",
      "integrity": "sha512-rdrUna1hnIyCHi/7YwM30vrbg/qcopvGeCSrTDG79SKmZAyDG2MniKvHVSk542VTqDmyl4CWZQbb9hp3gNv3xA==",
      "license": "GPL-3.0",
      "dependencies": {
        "jsdom": "^16.4.0",
        "node-fetch": "^2.6.1"
      }
    },
    "node_modules/emoji-api/node_modules/@tootallnate/once": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@tootallnate/once/-/once-1.1.2.tgz",
      "integrity": "sha512-RbzJvlNzmRq5c3O09UipeuXno4tA1FE6ikOjxZK0tuxVv3412l64l5t1W5pj4+rJq9vpkm/kwiR07aZXnsKPxw==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/emoji-api/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/emoji-api/node_modules/cssom": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.4.4.tgz",
      "integrity": "sha512-p3pvU7r1MyyqbTk+WbNJIgJjG2VmTIaB10rI93LzVPrmDJKkzKYMtxxyAvQXR/NS6otuzveI7+7BBq3SjBS2mw==",
      "license": "MIT"
    },
    "node_modules/emoji-api/node_modules/data-urls": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-2.0.0.tgz",
      "integrity": "sha512-X5eWTSXO/BJmpdIKCRuKUgSCgAN0OwliVK3yPKbwIWU1Tdw5BRajxlzMidvh+gwko9AfQ9zIj52pzF91Q3YAvQ==",
      "license": "MIT",
      "dependencies": {
        "abab": "^2.0.3",
        "whatwg-mimetype": "^2.3.0",
        "whatwg-url": "^8.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/emoji-api/node_modules/domexception": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/domexception/-/domexception-2.0.1.tgz",
      "integrity": "sha512-yxJ2mFy/sibVQlu5qHjOkf9J3K6zgmCxgJ94u2EdvDOV09H+32LtRswEcUsmUWN72pVLOEnTSRaIVVzVQgS0dg==",
      "deprecated": "Use your platform's native DOMException instead",
      "license": "MIT",
      "dependencies": {
        "webidl-conversions": "^5.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/emoji-api/node_modules/domexception/node_modules/webidl-conversions": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-5.0.0.tgz",
      "integrity": "sha512-VlZwKPCkYKxQgeSbH5EyngOmRp7Ww7I9rQLERETtf5ofd9pGeswWiOtogpEO850jziPRarreGxn5QIiTqpb2wA==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/emoji-api/node_modules/form-data": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-3.0.4.tgz",
      "integrity": "sha512-f0cRzm6dkyVYV3nPoooP8XlccPQukegwhAnpoLcXy+X+A8KfpGOoXwDr9FLZd3wzgLaBGQBE3lY93Zm/i1JvIQ==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.35"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/emoji-api/node_modules/html-encoding-sniffer": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-2.0.1.tgz",
      "integrity": "sha512-D5JbOMBIR/TVZkubHT+OyT2705QvogUW4IBn6nHd756OwieSF9aDYFj4dv6HHEVGYbHaLETa3WggZYWWMyy3ZQ==",
      "license": "MIT",
      "dependencies": {
        "whatwg-encoding": "^1.0.5"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/emoji-api/node_modules/http-proxy-agent": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-4.0.1.tgz",
      "integrity": "sha512-k0zdNgqWTGA6aeIRVpvfVob4fL52dTfaehylg0Y4UvSySvOq/Y+BOyPrgpUrA7HylqvU8vIZGsRuXmspskV0Tg==",
      "license": "MIT",
      "dependencies": {
        "@tootallnate/once": "1",
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/emoji-api/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/emoji-api/node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/emoji-api/node_modules/jsdom": {
      "version": "16.7.0",
      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-16.7.0.tgz",
      "integrity": "sha512-u9Smc2G1USStM+s/x1ru5Sxrl6mPYCbByG1U/hUmqaVsm4tbNyS7CicOSRyuGQYZhTu0h84qkZZQ/I+dzizSVw==",
      "license": "MIT",
      "dependencies": {
        "abab": "^2.0.5",
        "acorn": "^8.2.4",
        "acorn-globals": "^6.0.0",
        "cssom": "^0.4.4",
        "cssstyle": "^2.3.0",
        "data-urls": "^2.0.0",
        "decimal.js": "^10.2.1",
        "domexception": "^2.0.1",
        "escodegen": "^2.0.0",
        "form-data": "^3.0.0",
        "html-encoding-sniffer": "^2.0.1",
        "http-proxy-agent": "^4.0.1",
        "https-proxy-agent": "^5.0.0",
        "is-potential-custom-element-name": "^1.0.1",
        "nwsapi": "^2.2.0",
        "parse5": "6.0.1",
        "saxes": "^5.0.1",
        "symbol-tree": "^3.2.4",
        "tough-cookie": "^4.0.0",
        "w3c-hr-time": "^1.0.2",
        "w3c-xmlserializer": "^2.0.0",
        "webidl-conversions": "^6.1.0",
        "whatwg-encoding": "^1.0.5",
        "whatwg-mimetype": "^2.3.0",
        "whatwg-url": "^8.5.0",
        "ws": "^7.4.6",
        "xml-name-validator": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "canvas": "^2.5.0"
      },
      "peerDependenciesMeta": {
        "canvas": {
          "optional": true
        }
      }
    },
    "node_modules/emoji-api/node_modules/node-fetch": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/emoji-api/node_modules/node-fetch/node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/emoji-api/node_modules/node-fetch/node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/emoji-api/node_modules/node-fetch/node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/emoji-api/node_modules/parse5": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-6.0.1.tgz",
      "integrity": "sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw==",
      "license": "MIT"
    },
    "node_modules/emoji-api/node_modules/tough-cookie": {
      "version": "4.1.4",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.4.tgz",
      "integrity": "sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "psl": "^1.1.33",
        "punycode": "^2.1.1",
        "universalify": "^0.2.0",
        "url-parse": "^1.5.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/emoji-api/node_modules/tr46": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-2.1.0.tgz",
      "integrity": "sha512-15Ih7phfcdP5YxqiB+iDtLoaTz4Nd35+IiAv0kQ5FNKHzXgdWqPoTIqEDDJmXceQt4JZk6lVPT8lnDlPpGDppw==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/emoji-api/node_modules/universalify": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
      "integrity": "sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==",
      "license": "MIT",
      "engines": {
        "node": ">= 4.0.0"
      }
    },
    "node_modules/emoji-api/node_modules/w3c-xmlserializer": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-2.0.0.tgz",
      "integrity": "sha512-4tzD0mF8iSiMiNs30BiLO3EpfGLZUT2MSX/G+o7ZywDzliWQ3OPtTZ0PTC3B3ca1UAf4cJMHB+2Bf56EriJuRA==",
      "license": "MIT",
      "dependencies": {
        "xml-name-validator": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/emoji-api/node_modules/webidl-conversions": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-6.1.0.tgz",
      "integrity": "sha512-qBIvFLGiBpLjfwmYAaHPXsn+ho5xZnGvyGvsarywGNc8VyQJUMHJ8OBKGGrPER0okBeMDaan4mNBlgBROxuI8w==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=10.4"
      }
    },
    "node_modules/emoji-api/node_modules/whatwg-encoding": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-1.0.5.tgz",
      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/KNh8rxSo9DKQrnUEw==",
      "license": "MIT",
      "dependencies": {
        "iconv-lite": "0.4.24"
      }
    },
    "node_modules/emoji-api/node_modules/whatwg-mimetype": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-2.3.0.tgz",
      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV/vi0IC5lEAGFgrjGv/g==",
      "license": "MIT"
    },
    "node_modules/emoji-api/node_modules/whatwg-url": {
      "version": "8.7.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-8.7.0.tgz",
      "integrity": "sha512-gAojqb/m9Q8a5IV96E3fHJM70AzCkgt4uXYX2O7EmuyOnLrViCQlsEBmF9UQIu3/aeAIp2U17rtbpZWNntQqdg==",
      "license": "MIT",
      "dependencies": {
        "lodash": "^4.7.0",
        "tr46": "^2.1.0",
        "webidl-conversions": "^6.1.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/emoji-api/node_modules/ws": {
      "version": "7.5.10",
      "resolved": "https://registry.npmjs.org/ws/-/ws-7.5.10.tgz",
      "integrity": "sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8.3.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/emoji-api/node_modules/xml-name-validator": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz",
      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz/qizqzJKOMIfUJHETbBw/sFaDxgd6fxm1ewUaM0jZ444Fc5vC5ROYurg/4Pw==",
      "license": "Apache-2.0"
    },
    "node_modules/emoji-regex": {
      "version": "10.4.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-10.4.0.tgz",
      "integrity": "sha512-EC+0oUMY1Rqm4O6LLrgjtYDvcVYTy7chDnM4Q7030tP4Kwj3u/pR6gP9ygnp2CJMK5Gq+9Q2oqmrFJAz01DXjw==",
      "license": "MIT"
    },
    "node_modules/encodeurl": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/encoding-sniffer": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/encoding-sniffer/-/encoding-sniffer-0.2.1.tgz",
      "integrity": "sha512-5gvq20T6vfpekVtqrYQsSCFZ1wEg5+wW0/QaZMWkFr6BqD3NfKs0rLCx4rrVlSWJeZb5NBJgVLswK/w2MWU+Gw==",
      "license": "MIT",
      "dependencies": {
        "iconv-lite": "^0.6.3",
        "whatwg-encoding": "^3.1.1"
      },
      "funding": {
        "url": "https://github.com/fb55/encoding-sniffer?sponsor=1"
      }
    },
    "node_modules/end-of-stream": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.5.tgz",
      "integrity": "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==",
      "license": "MIT",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/engine.io": {
      "version": "6.6.4",
      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-6.6.4.tgz",
      "integrity": "sha512-ZCkIjSYNDyGn0R6ewHDtXgns/Zre/NT6Agvq1/WobF7JXgFff4SeDroKiCO3fNJreU9YG429Sc81o4w5ok/W5g==",
      "license": "MIT",
      "dependencies": {
        "@types/cors": "^2.8.12",
        "@types/node": ">=10.0.0",
        "accepts": "~1.3.4",
        "base64id": "2.0.0",
        "cookie": "~0.7.2",
        "cors": "~2.8.5",
        "debug": "~4.3.1",
        "engine.io-parser": "~5.2.1",
        "ws": "~8.17.1"
      },
      "engines": {
        "node": ">=10.2.0"
      }
    },
    "node_modules/engine.io-parser": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-5.2.3.tgz",
      "integrity": "sha512-HqD3yTBfnBxIrbnM1DoD6Pcq8NECnh8d4As1Qgh0z5Gg3jRRIqijury0CL3ghu/edArpUYiYqQiDUQBIs4np3Q==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/engine.io/node_modules/cookie": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/engine.io/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/engine.io/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/entities": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-4.5.0.tgz",
      "integrity": "sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
      "license": "MIT"
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/escodegen": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-2.1.0.tgz",
      "integrity": "sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "esprima": "^4.0.1",
        "estraverse": "^5.2.0",
        "esutils": "^2.0.2"
      },
      "bin": {
        "escodegen": "bin/escodegen.js",
        "esgenerate": "bin/esgenerate.js"
      },
      "engines": {
        "node": ">=6.0"
      },
      "optionalDependencies": {
        "source-map": "~0.6.1"
      }
    },
    "node_modules/eslint": {
      "version": "9.32.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.32.0.tgz",
      "integrity": "sha512-LSehfdpgMeWcTZkWZVIJl+tkZ2nuSkyyB9C27MZqFWXuph7DvaowgcTvKqxvpLW1JZIk8PN7hFY3Rj9LQ7m7lg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.21.0",
        "@eslint/config-helpers": "^0.3.0",
        "@eslint/core": "^0.15.0",
        "@eslint/eslintrc": "^3.3.1",
        "@eslint/js": "9.32.0",
        "@eslint/plugin-kit": "^0.3.4",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.4.0",
        "eslint-visitor-keys": "^4.2.1",
        "espree": "^10.4.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-plugin-simple-import-sort": {
      "version": "12.1.1",
      "resolved": "https://registry.npmjs.org/eslint-plugin-simple-import-sort/-/eslint-plugin-simple-import-sort-12.1.1.tgz",
      "integrity": "sha512-6nuzu4xwQtE3332Uz0to+TxDQYRLTKRESSc2hefVT48Zc8JthmN23Gx9lnYhu0FtkRSL1oxny3kJ2aveVhmOVA==",
      "license": "MIT",
      "peerDependencies": {
        "eslint": ">=5.0.0"
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/eslint/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/eslint/node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/eslint/node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/eslint/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/eslint/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/espree": {
      "version": "10.4.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "acorn": "^8.15.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree/node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "license": "Apache-2.0",
      "peer": true,
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "license": "BSD-2-Clause",
      "bin": {
        "esparse": "bin/esparse.js",
        "esvalidate": "bin/esvalidate.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "license": "BSD-3-Clause",
      "peer": true,
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "license": "BSD-2-Clause",
      "peer": true,
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/event-target-shim": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/event-target-shim/-/event-target-shim-5.0.1.tgz",
      "integrity": "sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/events": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.x"
      }
    },
    "node_modules/execa": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/execa/-/execa-5.1.1.tgz",
      "integrity": "sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==",
      "license": "MIT",
      "dependencies": {
        "cross-spawn": "^7.0.3",
        "get-stream": "^6.0.0",
        "human-signals": "^2.1.0",
        "is-stream": "^2.0.0",
        "merge-stream": "^2.0.0",
        "npm-run-path": "^4.0.1",
        "onetime": "^5.1.2",
        "signal-exit": "^3.0.3",
        "strip-final-newline": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/execa?sponsor=1"
      }
    },
    "node_modules/execa/node_modules/get-stream": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz",
      "integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/execa/node_modules/onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "license": "MIT",
      "dependencies": {
        "mimic-fn": "^2.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/execa/node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "license": "ISC"
    },
    "node_modules/exif-parser": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/exif-parser/-/exif-parser-0.1.12.tgz",
      "integrity": "sha512-c2bQfLNbMzLPmzQuOr8fy0csy84WmwnER81W88DzTp9CYNPJ6yzOj2EZAh9pywYpqHnshVLHQJ8WzldAyfY+Iw=="
    },
    "node_modules/express": {
      "version": "4.21.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.3",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.7.1",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.3.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.3",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.12",
        "proxy-addr": "~2.0.7",
        "qs": "6.13.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.19.0",
        "serve-static": "1.16.2",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/express"
      }
    },
    "node_modules/express/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/express/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
      "license": "MIT"
    },
    "node_modules/extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==",
      "engines": [
        "node >=0.6.0"
      ],
      "license": "MIT"
    },
    "node_modules/fake-useragent": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/fake-useragent/-/fake-useragent-1.0.1.tgz",
      "integrity": "sha512-BOQh1TM//DhrVaeZ+b3w3s4E40rfYcDTn5aoSM2w1xVsZVGglNOzPR5H8KDO8NmF8sT4ppxyb4/MHGIHfZsVDA==",
      "license": "Apache-2.0"
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "license": "MIT"
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/fast-redact": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/fast-redact/-/fast-redact-3.5.0.tgz",
      "integrity": "sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-safe-stringify": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/fast-safe-stringify/-/fast-safe-stringify-2.1.1.tgz",
      "integrity": "sha512-W+KJc2dmILlPplD/H4K9l9LcAHAfPtP6BY84uVLXQ6Evcz9Lcg33Y2z1IVblT6xdY54PXYVHEv+0Wpq8Io6zkA==",
      "license": "MIT"
    },
    "node_modules/fast-xml-parser": {
      "version": "5.2.5",
      "resolved": "https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-5.2.5.tgz",
      "integrity": "sha512-pfX9uG9Ki0yekDHx2SiuRIyFdyAr1kMIMitPvb0YBo8SUfKvia7w7FIyd/l6av85pFYRhZscS75MwMnbvY+hcQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/NaturalIntelligence"
        }
      ],
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "strnum": "^2.1.0"
      },
      "bin": {
        "fxparser": "src/cli/cli.js"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fetch-blob": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
      "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/jimmywarting"
        },
        {
          "type": "paypal",
          "url": "https://paypal.me/jimmywarting"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "node-domexception": "^1.0.0",
        "web-streams-polyfill": "^3.0.3"
      },
      "engines": {
        "node": "^12.20 || >= 14.13"
      }
    },
    "node_modules/fetch-blob/node_modules/web-streams-polyfill": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.3.3.tgz",
      "integrity": "sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/figlet": {
      "version": "1.8.2",
      "resolved": "https://registry.npmjs.org/figlet/-/figlet-1.8.2.tgz",
      "integrity": "sha512-iPCpE9B/rOcjewIzDnagP9F2eySzGeHReX8WlrZQJkqFBk2wvq8gY0c6U6Hd2y9HnX1LQcYSeP7aEHoPt6sVKQ==",
      "license": "MIT",
      "bin": {
        "figlet": "bin/index.js"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/file-type": {
      "version": "17.1.6",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-17.1.6.tgz",
      "integrity": "sha512-hlDw5Ev+9e883s0pwUsuuYNu4tD7GgpUnOvykjv1Gya0ZIjuKumthDRua90VUn6/nlRKAjcxLUnHNTIUWwWIiw==",
      "license": "MIT",
      "dependencies": {
        "readable-web-to-node-stream": "^3.0.2",
        "strtok3": "^7.0.0-alpha.9",
        "token-types": "^5.0.0-alpha.2"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/file-type?sponsor=1"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/finalhandler/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/finalhandler/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flat-cache/node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "license": "ISC",
      "peer": true
    },
    "node_modules/fluent-ffmpeg": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/fluent-ffmpeg/-/fluent-ffmpeg-2.1.3.tgz",
      "integrity": "sha512-Be3narBNt2s6bsaqP6Jzq91heDgOEaDCJAXcE3qcma/EJBSy5FB4cvO31XBInuAuKBx8Kptf8dkhjK0IOru39Q==",
      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.",
      "license": "MIT",
      "dependencies": {
        "async": "^0.2.9",
        "which": "^1.1.1"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/fluent-ffmpeg/node_modules/which": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "which": "bin/which"
      }
    },
    "node_modules/follow-redirects": {
      "version": "1.15.11",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.11.tgz",
      "integrity": "sha512-deG2P0JfjrTxl50XGCDyfI97ZGVCxIpfKYmfyrQ54n5FO/0gfIES8C/Psl6kWVDolizcaaxZJnTS0QSMxvnsBQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==",
      "license": "Apache-2.0",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/form-data": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
      "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/formdata-node": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/formdata-node/-/formdata-node-4.4.1.tgz",
      "integrity": "sha512-0iirZp3uVDjVGt9p49aTaqjk84TrglENEDuqfdlZQ1roC9CWlPk6Avf8EEnZNcAqPonwkG35x4n3ww/1THYAeQ==",
      "license": "MIT",
      "dependencies": {
        "node-domexception": "1.0.0",
        "web-streams-polyfill": "4.0.0-beta.3"
      },
      "engines": {
        "node": ">= 12.20"
      }
    },
    "node_modules/formdata-polyfill": {
      "version": "4.0.10",
      "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
      "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
      "license": "MIT",
      "dependencies": {
        "fetch-blob": "^3.1.2"
      },
      "engines": {
        "node": ">=12.20.0"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fs-extra": {
      "version": "11.3.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-11.3.0.tgz",
      "integrity": "sha512-Z4XaCL6dUDHfP/jT25jJKMmtxvuwbkrD1vNSMFlo9lNLY2c5FHYSQgHPRZUjAB26TpDEoW9HCOgplrdbaPV/ew==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      },
      "engines": {
        "node": ">=14.14"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-east-asian-width": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-east-asian-width/-/get-east-asian-width-1.3.0.tgz",
      "integrity": "sha512-vpeMIQKxczTD/0s2CdEWHcb0eeJe6TFjxb+J5xgX7hScxqrGuyjmv4c1D4A/gelKfyox0gJJwIHF+fLjeaM8kQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "license": "MIT",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==",
      "license": "MIT",
      "dependencies": {
        "assert-plus": "^1.0.0"
      }
    },
    "node_modules/gifwrap": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/gifwrap/-/gifwrap-0.9.4.tgz",
      "integrity": "sha512-MDMwbhASQuVeD4JKd1fKgNgCRL3fGqMM4WaqpNhWO0JiMOAjbQdumbs4BbBZEy9/M00EHEjKN3HieVhCUlwjeQ==",
      "license": "MIT",
      "dependencies": {
        "image-q": "^4.0.0",
        "omggif": "^1.0.10"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "license": "ISC",
      "peer": true,
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/global": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/global/-/global-4.4.0.tgz",
      "integrity": "sha512-wv/LAoHdRE3BeTGz53FAamhGlPLhlssK45usmGFThIi4XqnBmjKQ16u+RNbP7WvigRZDxUsM0J3gcQ5yicaL0w==",
      "license": "MIT",
      "dependencies": {
        "min-document": "^2.19.0",
        "process": "^0.11.10"
      }
    },
    "node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/got": {
      "version": "11.8.6",
      "resolved": "https://registry.npmjs.org/got/-/got-11.8.6.tgz",
      "integrity": "sha512-6tfZ91bOr7bOXnK7PRDCGBLa1H4U080YHNaAQ2KsMGlLEzRbk44nsZF2E1IeRc3vtJHPVbKCYgdFbaGO2ljd8g==",
      "license": "MIT",
      "dependencies": {
        "@sindresorhus/is": "^4.0.0",
        "@szmarczak/http-timer": "^4.0.5",
        "@types/cacheable-request": "^6.0.1",
        "@types/responselike": "^1.0.0",
        "cacheable-lookup": "^5.0.3",
        "cacheable-request": "^7.0.2",
        "decompress-response": "^6.0.0",
        "http2-wrapper": "^1.0.0-beta.5.2",
        "lowercase-keys": "^2.0.0",
        "p-cancelable": "^2.0.0",
        "responselike": "^2.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/got?sponsor=1"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/gradient-string": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/gradient-string/-/gradient-string-3.0.0.tgz",
      "integrity": "sha512-frdKI4Qi8Ihp4C6wZNB565de/THpIaw3DjP5ku87M+N9rNSGmPTjfkq61SdRXB7eCaL8O1hkKDvf6CDMtOzIAg==",
      "license": "MIT",
      "dependencies": {
        "chalk": "^5.3.0",
        "tinygradient": "^1.1.5"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "license": "MIT"
    },
    "node_modules/har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q==",
      "license": "ISC",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/har-validator": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
      "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
      "deprecated": "this library is no longer supported",
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.3",
        "har-schema": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hookified": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/hookified/-/hookified-1.11.0.tgz",
      "integrity": "sha512-aDdIN3GyU5I6wextPplYdfmWCo+aLmjjVbntmX6HLD5RCi/xKsivYEBhnRD+d9224zFf008ZpLMPlWF0ZodYZw==",
      "license": "MIT"
    },
    "node_modules/html-encoding-sniffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-3.0.0.tgz",
      "integrity": "sha512-oWv4T4yJ52iKrufjnyZPkrN0CH3QnrUqdB6In1g5Fe1mia8GmF36gnfNySxoZtxD5+NmYw1EElVXiBk93UeskA==",
      "license": "MIT",
      "dependencies": {
        "whatwg-encoding": "^2.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/html-encoding-sniffer/node_modules/whatwg-encoding": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-2.0.0.tgz",
      "integrity": "sha512-p41ogyeMUrw3jWclHWTQg1k05DSVXPLcVxRTYsXUk+ZooOCZLcoYgPZ/HL/D/N+uQPOtcp1me1WhBEaX02mhWg==",
      "license": "MIT",
      "dependencies": {
        "iconv-lite": "0.6.3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/htmlparser2": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-10.0.0.tgz",
      "integrity": "sha512-TwAZM+zE5Tq3lrEHvOlvwgj1XLWQCtaaibSN11Q+gGBAS7Y1uZSWwXXRe4iF6OXnaq1riyQAPFOBtYc77Mxq0g==",
      "funding": [
        "https://github.com/fb55/htmlparser2?sponsor=1",
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.3",
        "domutils": "^3.2.1",
        "entities": "^6.0.0"
      }
    },
    "node_modules/htmlparser2/node_modules/entities": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/entities/-/entities-6.0.1.tgz",
      "integrity": "sha512-aN97NXWF6AWBTahfVOIrB/NShkzi5H7F9r1s9mD3cDj4Ko5f2qhhVoYMibXF7GlLveb/D2ioWay8lxI97Ven3g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/http-cache-semantics": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.2.0.tgz",
      "integrity": "sha512-dTxcvPXqPvXBQpq5dUr6mEMJX4oIEFv6bwom3FDwKRDsuIjjJGANqhBuoAn9c1RQJIdAKav33ED65E2ys+87QQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/http-cookie-agent": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/http-cookie-agent/-/http-cookie-agent-7.0.2.tgz",
      "integrity": "sha512-aHaES6SOFtnSlmWu0yEaaQvu+QexUG2gscSAvMhJ7auzW8r/jYOgGrzuAm9G9nHbksuhz7Lw4zOwDHmfQaxZvw==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.4"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/3846masa"
      },
      "peerDependencies": {
        "tough-cookie": "^4.0.0 || ^5.0.0",
        "undici": "^7.0.0"
      },
      "peerDependenciesMeta": {
        "undici": {
          "optional": true
        }
      }
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "license": "MIT",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/http-proxy-agent": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-5.0.0.tgz",
      "integrity": "sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==",
      "license": "MIT",
      "dependencies": {
        "@tootallnate/once": "2",
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/http-proxy-agent/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha512-CAbnr6Rz4CYQkLYUtSNXxQPUH2gK8f3iWexVlsnMeD+GjlsQ0Xsy1cOX+mN3dtxYomRy21CiOzU8Uhw6OwncEQ==",
      "license": "MIT",
      "dependencies": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      },
      "engines": {
        "node": ">=0.8",
        "npm": ">=1.3.7"
      }
    },
    "node_modules/http2-wrapper": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz",
      "integrity": "sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==",
      "license": "MIT",
      "dependencies": {
        "quick-lru": "^5.1.1",
        "resolve-alpn": "^1.0.0"
      },
      "engines": {
        "node": ">=10.19.0"
      }
    },
    "node_modules/https-proxy-agent": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
      "integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/human-readable": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/human-readable/-/human-readable-0.2.1.tgz",
      "integrity": "sha512-uFtz4WZlB1M5xI45MZ5AjyAzfrrgLOdty4363Jd0LQ5NGXa+UiKaD0EQXQeDfCinodrpePFk/vKjzBlDTZdZQQ==",
      "license": "MIT"
    },
    "node_modules/human-signals": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz",
      "integrity": "sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=10.17.0"
      }
    },
    "node_modules/human-time": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/human-time/-/human-time-0.0.2.tgz",
      "integrity": "sha512-sbYI90YhYmstslPTb70BLGjy6mdESa0lxL7uDR4fIVAx9Iobz8fLEqi7FqF4Q/6vblrzZALg//MsYJlIPBU8SA==",
      "license": "MIT"
    },
    "node_modules/hxz-api": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/hxz-api/-/hxz-api-1.0.1.tgz",
      "integrity": "sha512-/3Z9KiN+YR63ySvX3Tj+h8xX/nCxrKOwqmHtzsPom/haAf4D49oGlxdhuxRQhjUCFkTN5FKHoJhwwiBYyrRrZQ==",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.21.1",
        "cheerio": "^1.0.0-rc.10",
        "qs": "^6.10.1"
      }
    },
    "node_modules/hxz-api/node_modules/axios": {
      "version": "0.21.4",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.21.4.tgz",
      "integrity": "sha512-ut5vewkiu8jjGBdqpM44XxjuCjq9LAKeHVmoVfHVzy8eHgxxq8SbAVQNovDA8mVi05kP0Ea/n/UzcSHcTJQfNg==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.14.0"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "BSD-3-Clause"
    },
    "node_modules/ignore": {
      "version": "7.0.5",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz",
      "integrity": "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==",
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/image-q": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/image-q/-/image-q-4.0.0.tgz",
      "integrity": "sha512-PfJGVgIfKQJuq3s0tTDOKtztksibuUEbJQIYT3by6wctQo+Rdlh7ef4evJ5NCdxY4CfMbvFkocEwbl4BF8RlJw==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "16.9.1"
      }
    },
    "node_modules/image-q/node_modules/@types/node": {
      "version": "16.9.1",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-16.9.1.tgz",
      "integrity": "sha512-QpLcX9ZSsq3YYUUnD3nFDY8H7wctAhQj/TFKL8Ya8v5fMm3CFXxo8zStsLAl780ltoYoo1WvKUVGBQK+1ifr7g==",
      "license": "MIT"
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/ip-address": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz",
      "integrity": "sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==",
      "license": "MIT",
      "dependencies": {
        "jsbn": "1.1.0",
        "sprintf-js": "^1.1.3"
      },
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/ip-regex": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-4.3.0.tgz",
      "integrity": "sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-accessor-descriptor": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.1.tgz",
      "integrity": "sha512-YBUanLI8Yoihw923YeFUS5fs0fF2f5TSFTNiYAAzhhDscDa3lEqYuz1pDOEP5KvX94I9ey3vsqjJcLVFVU+3QA==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.0"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
      "license": "MIT"
    },
    "node_modules/is-data-descriptor": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.1.tgz",
      "integrity": "sha512-bc4NlCDiCr28U4aEsQ3Qs2491gVq4V8G7MQyws968ImqjKuYtTJXrl7Vq7jsN7Ly/C3xj5KWFrY7sHNeDkAzXw==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-descriptor": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.3.tgz",
      "integrity": "sha512-JCNNGbwWZEVaSPtS45mdtrneRWJFp07LLmykxeFV5F6oBvNF8vHSfJuJgoT472pSfk+Mf8VnlrspaFBHWM8JAw==",
      "license": "MIT",
      "dependencies": {
        "is-accessor-descriptor": "^1.0.1",
        "is-data-descriptor": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-function": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-function/-/is-function-1.0.2.tgz",
      "integrity": "sha512-lw7DUp0aWXYg+CBCN+JKkcE0Q2RayZnSvnZBlwgxHBQhqt5pZNVy4Ri7H9GmmXkdu7LUthszM+Tor1u/2iBcpQ==",
      "license": "MIT"
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-interactive": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-2.0.0.tgz",
      "integrity": "sha512-qP1vozQRI+BMOPcjFzrjXuQvdak2pHNUMZoeG2eRbiSqyvbEf/wQtEOTOX1guk6E3t36RkaqiSt8A/6YElNxLQ==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-potential-custom-element-name": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-potential-custom-element-name/-/is-potential-custom-element-name-1.0.1.tgz",
      "integrity": "sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==",
      "license": "MIT"
    },
    "node_modules/is-stream": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==",
      "license": "MIT"
    },
    "node_modules/is-unicode-supported": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-2.1.0.tgz",
      "integrity": "sha512-mE00Gnza5EEB3Ds0HfMyllZzbBrmLOX3vfWoj9A9PEnTfratQ/BcaJOuMhnkhjXvb2+FkY3VuHqtAGpTPmglFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-unix": {
      "version": "2.0.10",
      "resolved": "https://registry.npmjs.org/is-unix/-/is-unix-2.0.10.tgz",
      "integrity": "sha512-CcasZSEOQUoE7JHy56se4wyRhdJfjohuMWYmceSTaDY4naKyd1fpLiY8rJsIT6AKfVstQAhHJOfPx7jcUxK61Q==",
      "license": "MIT",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
      "license": "MIT"
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "license": "ISC"
    },
    "node_modules/isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g==",
      "license": "MIT"
    },
    "node_modules/iterm2-version": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/iterm2-version/-/iterm2-version-5.0.0.tgz",
      "integrity": "sha512-WdLXcMYvN3SXT6vEtuW78vnZs4pVWm2nBnb4VKjOPPXmdlR1xTHmBgqKacOzAe4RXOiY/V+0u/0zsU3LoGQoBg==",
      "license": "MIT",
      "dependencies": {
        "app-path": "^4.0.0",
        "plist": "^3.0.2"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/jimp": {
      "version": "0.16.13",
      "resolved": "https://registry.npmjs.org/jimp/-/jimp-0.16.13.tgz",
      "integrity": "sha512-Bxz8q7V4rnCky9A0ktTNGA9SkNFVWRHodddI/DaAWZJzF7sVUlFYKQ60y9JGqrKpi48ECA/TnfMzzc5C70VByA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/custom": "^0.16.13",
        "@jimp/plugins": "^0.16.13",
        "@jimp/types": "^0.16.13",
        "regenerator-runtime": "^0.13.3"
      }
    },
    "node_modules/joycon": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/joycon/-/joycon-3.1.1.tgz",
      "integrity": "sha512-34wB/Y7MW7bzjKRjUKTa46I2Z7eV62Rkhva+KkopW7Qvv/OSWBqvkSY7vusOPrNuZcUG3tApvdVgNB8POj3SPw==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/jpeg-js": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/jpeg-js/-/jpeg-js-0.4.4.tgz",
      "integrity": "sha512-WZzeDOEtTOBK4Mdsar0IqEU5sMr3vSV2RqkAIzUEV2BHnUfKGyswWFPFwK5EeDo93K3FohSHbLAjj0s1Wzd+dg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsbn": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz",
      "integrity": "sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==",
      "license": "MIT"
    },
    "node_modules/jsdom": {
      "version": "19.0.0",
      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-19.0.0.tgz",
      "integrity": "sha512-RYAyjCbxy/vri/CfnjUWJQQtZ3LKlLnDqj+9XLNnJPgEGeirZs3hllKR20re8LUZ6o1b1X4Jat+Qd26zmP41+A==",
      "license": "MIT",
      "dependencies": {
        "abab": "^2.0.5",
        "acorn": "^8.5.0",
        "acorn-globals": "^6.0.0",
        "cssom": "^0.5.0",
        "cssstyle": "^2.3.0",
        "data-urls": "^3.0.1",
        "decimal.js": "^10.3.1",
        "domexception": "^4.0.0",
        "escodegen": "^2.0.0",
        "form-data": "^4.0.0",
        "html-encoding-sniffer": "^3.0.0",
        "http-proxy-agent": "^5.0.0",
        "https-proxy-agent": "^5.0.0",
        "is-potential-custom-element-name": "^1.0.1",
        "nwsapi": "^2.2.0",
        "parse5": "6.0.1",
        "saxes": "^5.0.1",
        "symbol-tree": "^3.2.4",
        "tough-cookie": "^4.0.0",
        "w3c-hr-time": "^1.0.2",
        "w3c-xmlserializer": "^3.0.0",
        "webidl-conversions": "^7.0.0",
        "whatwg-encoding": "^2.0.0",
        "whatwg-mimetype": "^3.0.0",
        "whatwg-url": "^10.0.0",
        "ws": "^8.2.3",
        "xml-name-validator": "^4.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "peerDependencies": {
        "canvas": "^2.5.0"
      },
      "peerDependenciesMeta": {
        "canvas": {
          "optional": true
        }
      }
    },
    "node_modules/jsdom/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/jsdom/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/jsdom/node_modules/parse5": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-6.0.1.tgz",
      "integrity": "sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw==",
      "license": "MIT"
    },
    "node_modules/jsdom/node_modules/tough-cookie": {
      "version": "4.1.4",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.4.tgz",
      "integrity": "sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "psl": "^1.1.33",
        "punycode": "^2.1.1",
        "universalify": "^0.2.0",
        "url-parse": "^1.5.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsdom/node_modules/universalify": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
      "integrity": "sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==",
      "license": "MIT",
      "engines": {
        "node": ">= 4.0.0"
      }
    },
    "node_modules/jsdom/node_modules/whatwg-encoding": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-2.0.0.tgz",
      "integrity": "sha512-p41ogyeMUrw3jWclHWTQg1k05DSVXPLcVxRTYsXUk+ZooOCZLcoYgPZ/HL/D/N+uQPOtcp1me1WhBEaX02mhWg==",
      "license": "MIT",
      "dependencies": {
        "iconv-lite": "0.6.3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/jsdom/node_modules/whatwg-mimetype": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-3.0.0.tgz",
      "integrity": "sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/jsep": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/jsep/-/jsep-1.4.0.tgz",
      "integrity": "sha512-B7qPcEVE3NVkmSJbaYxvv4cHkVW7DQsZz13pUMrfS8z8Q/BuShN+gcTXrUlPiGqM2/t/EEaI030bpxMqY8gMlw==",
      "license": "MIT",
      "engines": {
        "node": ">= 10.16.0"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "license": "MIT"
    },
    "node_modules/json-schema": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
      "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==",
      "license": "(AFL-2.1 OR BSD-3-Clause)"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==",
      "license": "ISC"
    },
    "node_modules/jsonfile": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
      "license": "MIT",
      "dependencies": {
        "universalify": "^2.0.0"
      },
      "optionalDependencies": {
        "graceful-fs": "^4.1.6"
      }
    },
    "node_modules/jsonpath-plus": {
      "version": "10.3.0",
      "resolved": "https://registry.npmjs.org/jsonpath-plus/-/jsonpath-plus-10.3.0.tgz",
      "integrity": "sha512-8TNmfeTCk2Le33A3vRRwtuworG/L5RrgMvdjhKZxvyShO+mBu2fP50OWUjRLNtvw344DdDarFh9buFAZs5ujeA==",
      "license": "MIT",
      "dependencies": {
        "@jsep-plugin/assignment": "^1.3.0",
        "@jsep-plugin/regex": "^1.0.4",
        "jsep": "^1.4.0"
      },
      "bin": {
        "jsonpath": "bin/jsonpath-cli.js",
        "jsonpath-plus": "bin/jsonpath-cli.js"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/jsprim": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz",
      "integrity": "sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==",
      "license": "MIT",
      "dependencies": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.4.0",
        "verror": "1.10.0"
      },
      "engines": {
        "node": ">=0.6.0"
      }
    },
    "node_modules/kareem": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/kareem/-/kareem-2.5.1.tgz",
      "integrity": "sha512-7jFxRVm+jD+rkq3kY0iZDJfsO2/t4BBPeEb2qKn2lR/9KhuksYk5hxzfRYWMPV8P/x2d0kHD306YyWLzjjH+uA==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/keypress": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/keypress/-/keypress-0.2.1.tgz",
      "integrity": "sha512-HjorDJFNhnM4SicvaUXac0X77NiskggxJdesG72+O5zBKpSqKFCrqmndKVqpu3pFqkla0St6uGk8Ju0sCurrmg==",
      "license": "MIT"
    },
    "node_modules/keyv": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-5.5.0.tgz",
      "integrity": "sha512-QG7qR2tijh1ftOvClut4YKKg1iW6cx3GZsKoGyJPxHkGWK9oJhG9P3j5deP0QQOGDowBMVQFaP+Vm4NpGYvmIQ==",
      "license": "MIT",
      "dependencies": {
        "@keyv/serialize": "^1.1.0"
      }
    },
    "node_modules/kind-of": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
      "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
      "license": "MIT",
      "dependencies": {
        "is-buffer": "^1.1.5"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/leven": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/leven/-/leven-2.1.0.tgz",
      "integrity": "sha512-nvVPLpIHUxCUoRLrFqTgSxXJ614d8AgQoWl7zPe/2VadE8+1dpU3LBhowRuBAcuwruWtOdD8oYC9jDNJjXDPyA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/levenshtein-edit-distance": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/levenshtein-edit-distance/-/levenshtein-edit-distance-2.0.5.tgz",
      "integrity": "sha512-Yuraz7QnMX/JENJU1HA6UtdsbhRzoSFnGpVGVryjQgHtl2s/YmVgmNYkVs5yzVZ9aAvQR9wPBUH3lG755ylxGA==",
      "license": "MIT",
      "bin": {
        "levenshtein-edit-distance": "cli.js"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/wooorm"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/libsignal": {
      "name": "@whiskeysockets/libsignal-node",
      "version": "2.0.1",
      "resolved": "git+ssh://git@github.com/WhiskeySockets/libsignal-node.git#4d08331a833727c338c1a90041d17b870210dfae",
      "license": "GPL-3.0",
      "dependencies": {
        "curve25519-js": "^0.0.4",
        "protobufjs": "6.8.8"
      }
    },
    "node_modules/libsignal/node_modules/@types/node": {
      "version": "10.17.60",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-10.17.60.tgz",
      "integrity": "sha512-F0KIgDJfy2nA3zMLmWGKxcH2ZVEtCZXHHdOQs2gSaQ27+lNeEfGxzkIw90aXswATX7AZ33tahPbzy6KAfUreVw==",
      "license": "MIT"
    },
    "node_modules/libsignal/node_modules/long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA==",
      "license": "Apache-2.0"
    },
    "node_modules/libsignal/node_modules/protobufjs": {
      "version": "6.8.8",
      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-6.8.8.tgz",
      "integrity": "sha512-AAmHtD5pXgZfi7GMpllpO3q1Xw1OYldr+dMUlAnffGTAhqkg72WdmSY71uKBF/JuyiKs8psYbtKrhi0ASCD8qw==",
      "hasInstallScript": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.2",
        "@protobufjs/base64": "^1.1.2",
        "@protobufjs/codegen": "^2.0.4",
        "@protobufjs/eventemitter": "^1.1.0",
        "@protobufjs/fetch": "^1.1.0",
        "@protobufjs/float": "^1.0.2",
        "@protobufjs/inquire": "^1.1.0",
        "@protobufjs/path": "^1.1.2",
        "@protobufjs/pool": "^1.1.0",
        "@protobufjs/utf8": "^1.1.0",
        "@types/long": "^4.0.0",
        "@types/node": "^10.1.0",
        "long": "^4.0.0"
      },
      "bin": {
        "pbjs": "bin/pbjs",
        "pbts": "bin/pbts"
      }
    },
    "node_modules/link-preview-js": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/link-preview-js/-/link-preview-js-3.1.0.tgz",
      "integrity": "sha512-hSvdHCy7tZJ8ohdgN5WcTBKaubpX7saYBzrSmNDDHnC7P6q+F4we+dwXuEr9LuplnkiGxkD4SaO4rrschfCZ2A==",
      "license": "MIT",
      "dependencies": {
        "cheerio": "1.0.0-rc.11",
        "url": "0.11.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/link-preview-js/node_modules/cheerio": {
      "version": "1.0.0-rc.11",
      "resolved": "https://registry.npmjs.org/cheerio/-/cheerio-1.0.0-rc.11.tgz",
      "integrity": "sha512-bQwNaDIBKID5ts/DsdhxrjqFXYfLw4ste+wMKqWA8DyKcS4qwsPP4Bk8ZNaTJjvpiX/qW3BT4sU7d6Bh5i+dag==",
      "license": "MIT",
      "dependencies": {
        "cheerio-select": "^2.1.0",
        "dom-serializer": "^2.0.0",
        "domhandler": "^5.0.3",
        "domutils": "^3.0.1",
        "htmlparser2": "^8.0.1",
        "parse5": "^7.0.0",
        "parse5-htmlparser2-tree-adapter": "^7.0.0",
        "tslib": "^2.4.0"
      },
      "engines": {
        "node": ">= 6"
      },
      "funding": {
        "url": "https://github.com/cheeriojs/cheerio?sponsor=1"
      }
    },
    "node_modules/link-preview-js/node_modules/htmlparser2": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-8.0.2.tgz",
      "integrity": "sha512-GYdjWKDkbRLkZ5geuHs5NY1puJ+PXwP7+fHPRz06Eirsb9ugf6d8kkXav6ADhcODhFFPMIXyxkxSuMf3D6NCFA==",
      "funding": [
        "https://github.com/fb55/htmlparser2?sponsor=1",
        {
          "type": "github",
          "url": "https://github.com/sponsors/fb55"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "domelementtype": "^2.3.0",
        "domhandler": "^5.0.3",
        "domutils": "^3.0.1",
        "entities": "^4.4.0"
      }
    },
    "node_modules/load-bmfont": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/load-bmfont/-/load-bmfont-1.4.2.tgz",
      "integrity": "sha512-qElWkmjW9Oq1F9EI5Gt7aD9zcdHb9spJCW1L/dmPf7KzCCEJxq8nhHz5eCgI9aMf7vrG/wyaCqdsI+Iy9ZTlog==",
      "license": "MIT",
      "dependencies": {
        "buffer-equal": "0.0.1",
        "mime": "^1.3.4",
        "parse-bmfont-ascii": "^1.0.3",
        "parse-bmfont-binary": "^1.0.5",
        "parse-bmfont-xml": "^1.1.4",
        "phin": "^3.7.1",
        "xhr": "^2.0.1",
        "xtend": "^4.0.0"
      }
    },
    "node_modules/load-bmfont/node_modules/phin": {
      "version": "3.7.1",
      "resolved": "https://registry.npmjs.org/phin/-/phin-3.7.1.tgz",
      "integrity": "sha512-GEazpTWwTZaEQ9RhL7Nyz0WwqilbqgLahDM3D0hxWwmVDI52nXEybHqiN6/elwpkJBhcuj+WbBu+QfT0uhPGfQ==",
      "license": "MIT",
      "dependencies": {
        "centra": "^2.7.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/log-symbols": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-6.0.0.tgz",
      "integrity": "sha512-i24m8rpwhmPIS4zscNzK6MSEhk0DUWa/8iYQWxhffV8jkI4Phvs3F+quL5xvS0gdQR0FyTCMMH33Y78dDTzzIw==",
      "license": "MIT",
      "dependencies": {
        "chalk": "^5.3.0",
        "is-unicode-supported": "^1.3.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/log-symbols/node_modules/is-unicode-supported": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-1.3.0.tgz",
      "integrity": "sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/log-update": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/log-update/-/log-update-4.0.0.tgz",
      "integrity": "sha512-9fkkDevMefjg0mmzWFBW8YkFP91OrizzkW3diF7CpG+S2EYdy4+TVfGwz1zeF8x7hCx1ovSPTOE9Ngib74qqUg==",
      "license": "MIT",
      "dependencies": {
        "ansi-escapes": "^4.3.0",
        "cli-cursor": "^3.1.0",
        "slice-ansi": "^4.0.0",
        "wrap-ansi": "^6.2.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/log-update/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/log-update/node_modules/cli-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
      "license": "MIT",
      "dependencies": {
        "restore-cursor": "^3.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/log-update/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/log-update/node_modules/onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "license": "MIT",
      "dependencies": {
        "mimic-fn": "^2.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/log-update/node_modules/restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "license": "MIT",
      "dependencies": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/log-update/node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "license": "ISC"
    },
    "node_modules/log-update/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/log-update/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/log-update/node_modules/wrap-ansi": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/long": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/long/-/long-5.3.2.tgz",
      "integrity": "sha512-mNAgZ1GmyNhD7AuqnTG3/VQ26o760+ZYBPKjPvugO8+nLbYfX6TVpJPseBvopbdY+qpZ/lKUnmEc1LeZYS3QAA==",
      "license": "Apache-2.0"
    },
    "node_modules/lowdb": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/lowdb/-/lowdb-3.0.0.tgz",
      "integrity": "sha512-9KZRulmIcU8fZuWiaM0d5e2/nPnrFyXkeXVpqT+MJS+vgbgOf1EbtvgQmba8HwUFgDl1oeZR6XqEJnkJmQdKmg==",
      "license": "MIT",
      "dependencies": {
        "steno": "^2.1.0"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/typicode"
      }
    },
    "node_modules/lowercase-keys": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
      "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/m3u8stream": {
      "version": "0.8.6",
      "resolved": "https://registry.npmjs.org/m3u8stream/-/m3u8stream-0.8.6.tgz",
      "integrity": "sha512-LZj8kIVf9KCphiHmH7sbFQTVe4tOemb202fWwvJwR9W5ENW/1hxJN6ksAWGhQgSBSa3jyWhnjKU1Fw1GaOdbyA==",
      "license": "MIT",
      "dependencies": {
        "miniget": "^4.2.2",
        "sax": "^1.2.4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/media-typer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-1.1.0.tgz",
      "integrity": "sha512-aisnrDP4GNe06UcKFnV5bfMNPBUw4jsLGaWwWfnH3v02GnBuXX2MCVn5RbrWo0j3pczUilYblq7fQ7Nw2t5XKw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/memory-pager": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/memory-pager/-/memory-pager-1.5.0.tgz",
      "integrity": "sha512-ZS4Bp4r/Zoeq6+NLJpP+0Zzm0pR8whtGPf1XExKLJBAczGMnSi3It14OiNCStjQjM6NU1okjQGSxgEZN8eBYKg==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
      "license": "MIT"
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "license": "MIT",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/mimic-function": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/mimic-function/-/mimic-function-5.0.1.tgz",
      "integrity": "sha512-VP79XUPxV2CigYP3jWwAUFSku2aKqBH7uTAapFWCBqutsbmDo96KY5o8uh6U+/YSIn5OxJnXp73beVkpqMIGhA==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/min-document": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
      "integrity": "sha512-9Wy1B3m3f66bPPmU5hdA4DR4PB2OfDU/+GS3yAB7IQozE3tqXaVv2zOjgla7MEGSRv95+ILmOuvhLkOK6wJtCQ==",
      "dependencies": {
        "dom-walk": "^0.1.0"
      }
    },
    "node_modules/miniget": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/miniget/-/miniget-4.2.3.tgz",
      "integrity": "sha512-SjbDPDICJ1zT+ZvQwK0hUcRY4wxlhhNpHL9nJOB2MEAXRGagTljsO8MEDzQMTFf0Q8g4QNi8P9lEm/g7e+qgzA==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.6"
      },
      "bin": {
        "mkdirp": "bin/cmd.js"
      }
    },
    "node_modules/mongodb": {
      "version": "4.17.2",
      "resolved": "https://registry.npmjs.org/mongodb/-/mongodb-4.17.2.tgz",
      "integrity": "sha512-mLV7SEiov2LHleRJPMPrK2PMyhXFZt2UQLC4VD4pnth3jMjYKHhtqfwwkkvS/NXuo/Fp3vbhaNcXrIDaLRb9Tg==",
      "license": "Apache-2.0",
      "dependencies": {
        "bson": "^4.7.2",
        "mongodb-connection-string-url": "^2.6.0",
        "socks": "^2.7.1"
      },
      "engines": {
        "node": ">=12.9.0"
      },
      "optionalDependencies": {
        "@aws-sdk/credential-providers": "^3.186.0",
        "@mongodb-js/saslprep": "^1.1.0"
      }
    },
    "node_modules/mongodb-connection-string-url": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/mongodb-connection-string-url/-/mongodb-connection-string-url-2.6.0.tgz",
      "integrity": "sha512-WvTZlI9ab0QYtTYnuMLgobULWhokRjtC7db9LtcVfJ+Hsnyr5eo6ZtNAt3Ly24XZScGMelOcGtm7lSn0332tPQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@types/whatwg-url": "^8.2.1",
        "whatwg-url": "^11.0.0"
      }
    },
    "node_modules/mongodb-connection-string-url/node_modules/whatwg-url": {
      "version": "11.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-11.0.0.tgz",
      "integrity": "sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==",
      "license": "MIT",
      "dependencies": {
        "tr46": "^3.0.0",
        "webidl-conversions": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/mongoose": {
      "version": "6.13.8",
      "resolved": "https://registry.npmjs.org/mongoose/-/mongoose-6.13.8.tgz",
      "integrity": "sha512-JHKco/533CyVrqCbyQsnqMpLn8ZCiKrPDTd2mvo2W7ygIvhygWjX2wj+RPjn6upZZgw0jC6U51RD7kUsyK8NBg==",
      "license": "MIT",
      "dependencies": {
        "bson": "^4.7.2",
        "kareem": "2.5.1",
        "mongodb": "4.17.2",
        "mpath": "0.9.0",
        "mquery": "4.0.3",
        "ms": "2.1.3",
        "sift": "16.0.1"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/mongoose"
      }
    },
    "node_modules/mpath": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/mpath/-/mpath-0.9.0.tgz",
      "integrity": "sha512-ikJRQTk8hw5DEoFVxHG1Gn9T/xcjtdnOKIU1JTmGjZZlg9LST2mBLmcX3/ICIbgJydT2GOc15RnNy5mHmzfSew==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/mquery": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/mquery/-/mquery-4.0.3.tgz",
      "integrity": "sha512-J5heI+P08I6VJ2Ky3+33IpCdAvlYGTSUjwTPxkAr8i8EoduPMBX2OY/wa3IKZIQl7MU4SbFk8ndgSKyB/cl1zA==",
      "license": "MIT",
      "dependencies": {
        "debug": "4.x"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/mri": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/mri/-/mri-1.1.4.tgz",
      "integrity": "sha512-6y7IjGPm8AzlvoUrwAaw1tLnUBudaS3752vcd8JtrpGGQn+rXIe63LFVHm/YMwtqAuh+LJPCFdlLYPWM1nYn6w==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/multistream": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/multistream/-/multistream-2.1.1.tgz",
      "integrity": "sha512-xasv76hl6nr1dEy3lPvy7Ej7K/Lx3O/FCvwge8PeVJpciPPoNCbaANcNiBug3IpdvTveZUcAV0DJzdnUDMesNQ==",
      "license": "MIT",
      "dependencies": {
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.5"
      }
    },
    "node_modules/music-metadata": {
      "version": "7.14.0",
      "resolved": "https://registry.npmjs.org/music-metadata/-/music-metadata-7.14.0.tgz",
      "integrity": "sha512-xrm3w7SV0Wk+OythZcSbaI8mcr/KHd0knJieu8bVpaPfMv/Agz5EooCAPz3OR5hbYMiUG6dgAPKZKnMzV+3amA==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "content-type": "^1.0.5",
        "debug": "^4.3.4",
        "file-type": "^16.5.4",
        "media-typer": "^1.1.0",
        "strtok3": "^6.3.0",
        "token-types": "^4.2.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/music-metadata/node_modules/file-type": {
      "version": "16.5.4",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-16.5.4.tgz",
      "integrity": "sha512-/yFHK0aGjFEgDJjEKP0pWCplsPFPhwyfwevf/pVxiN0tmE4L9LmwWxWukdJSHdoCli4VgQLehjJtwQBnqmsKcw==",
      "license": "MIT",
      "dependencies": {
        "readable-web-to-node-stream": "^3.0.0",
        "strtok3": "^6.2.4",
        "token-types": "^4.1.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sindresorhus/file-type?sponsor=1"
      }
    },
    "node_modules/music-metadata/node_modules/peek-readable": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/peek-readable/-/peek-readable-4.1.0.tgz",
      "integrity": "sha512-ZI3LnwUv5nOGbQzD9c2iDG6toheuXSZP5esSHBjopsXH4dg19soufvpUGA3uohi5anFtGb2lhAVdHzH6R/Evvg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/music-metadata/node_modules/strtok3": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/strtok3/-/strtok3-6.3.0.tgz",
      "integrity": "sha512-fZtbhtvI9I48xDSywd/somNqgUHl2L2cstmXCCif0itOf96jeW18MBSyrLuNicYQVkvpOxkZtkzujiTJ9LW5Jw==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "peek-readable": "^4.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/music-metadata/node_modules/token-types": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/token-types/-/token-types-4.2.1.tgz",
      "integrity": "sha512-6udB24Q737UD/SDsKAHI9FCRP7Bqc9D/MQUV02ORQg5iskjtLJlZJNdN4kKtcdtwCeWIwIHDGaUsTsCCAa8sFQ==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "ieee754": "^1.2.1"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "license": "MIT"
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/node-domexception": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
      "deprecated": "Use your platform's native DOMException instead",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/jimmywarting"
        },
        {
          "type": "github",
          "url": "https://paypal.me/jimmywarting"
        }
      ],
      "license": "MIT",
      "engines": {
        "node": ">=10.5.0"
      }
    },
    "node_modules/node-fetch": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.2.tgz",
      "integrity": "sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==",
      "license": "MIT",
      "dependencies": {
        "data-uri-to-buffer": "^4.0.0",
        "fetch-blob": "^3.1.4",
        "formdata-polyfill": "^4.0.10"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/node-fetch"
      }
    },
    "node_modules/node-fzf": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/node-fzf/-/node-fzf-0.14.0.tgz",
      "integrity": "sha512-VZU+nuj8zzEEtGzeYGGzKdSmj7W9oHm9xK2A1g1kEPmlyK3726T1iT1e9FCxWiaKKjEn3oqR+p3So7EjU94JaA==",
      "license": "MIT",
      "dependencies": {
        "keypress": "~0.2.1",
        "minimist": "~1.2.5",
        "picocolors": "~1.1.1",
        "redstar": "0.0.2",
        "restore-cursor": "~3.1.0",
        "string-width": "~2.1.1",
        "ttys": "0.0.3"
      },
      "bin": {
        "nfzf": "bin/cli.js"
      }
    },
    "node_modules/node-fzf/node_modules/ansi-regex": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.1.tgz",
      "integrity": "sha512-+O9Jct8wf++lXxxFc4hc8LsjaSq0HFzzL7cVsw8pRDIPdjKD2mT4ytDZlLuSBZ4cLKZFXIrMGO7DbQCtMJJMKw==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/node-fzf/node_modules/is-fullwidth-code-point": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
      "integrity": "sha512-VHskAKYM8RfSFXwee5t5cbN5PZeq1Wrh6qd5bkyiXIf6UQcN6w/A0eXM9r6t8d+GYOh+o6ZhiEnb88LN/Y8m2w==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/node-fzf/node_modules/onetime": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz",
      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
      "license": "MIT",
      "dependencies": {
        "mimic-fn": "^2.1.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/node-fzf/node_modules/restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "license": "MIT",
      "dependencies": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/node-fzf/node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
      "license": "ISC"
    },
    "node_modules/node-fzf/node_modules/string-width": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
      "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
      "license": "MIT",
      "dependencies": {
        "is-fullwidth-code-point": "^2.0.0",
        "strip-ansi": "^4.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/node-fzf/node_modules/strip-ansi": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
      "integrity": "sha512-4XaJ2zQdCzROZDivEVIDPkcQn8LMFSa8kj8Gxb/Lnwzv9A8VctNZ+lfivC/sV3ivW8ElJTERXZoPBRrZKkNKow==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/node-gtts": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/node-gtts/-/node-gtts-2.0.2.tgz",
      "integrity": "sha512-g1EVgKgUJvbLheD3378SYQpUIca6U9F2VBzMzk5WxxSWzZb+IRGVSMoVGPwvpg4buZxE/FCL13tzzg2j1FAvbQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "async": "^2.4.1",
        "escape-string-regexp": "^1.0.5",
        "fake-useragent": "^1.0.1",
        "multistream": "^2.1.0",
        "request": "^2.81.0"
      },
      "bin": {
        "node-gtts": "bin.js"
      }
    },
    "node_modules/node-gtts/node_modules/async": {
      "version": "2.6.4",
      "resolved": "https://registry.npmjs.org/async/-/async-2.6.4.tgz",
      "integrity": "sha512-mzo5dfJYwAn29PeiJ0zvwTo04zj8HDJj0Mn8TD7sno7q12prdbnasKJHhkm2c1LgrhlJ0teaea8860oxi51mGA==",
      "license": "MIT",
      "dependencies": {
        "lodash": "^4.17.14"
      }
    },
    "node_modules/node-gtts/node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/node-webpmux": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/node-webpmux/-/node-webpmux-3.2.1.tgz",
      "integrity": "sha512-MKgpq9nFgo44pIVNx/umD3nkqb2E8oqQTfmstVsfNdx9uV4cX7a4LqA+d8AZd3v5tgJXwENKUFsXNP3bRLP8nQ==",
      "license": "LGPL-3.0-or-later"
    },
    "node_modules/normalize-url": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz",
      "integrity": "sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/npm-run-path": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz",
      "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/nth-check": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
      "integrity": "sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "boolbase": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/fb55/nth-check?sponsor=1"
      }
    },
    "node_modules/nwsapi": {
      "version": "2.2.21",
      "resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.21.tgz",
      "integrity": "sha512-o6nIY3qwiSXl7/LuOU0Dmuctd34Yay0yeuZRLFmDPrrdHpXKFndPj3hM+YEPVHYC5fx2otBx4Ilc/gyYSAUaIA==",
      "license": "MIT"
    },
    "node_modules/oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
      "license": "Apache-2.0",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/omggif": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/omggif/-/omggif-1.0.10.tgz",
      "integrity": "sha512-LMJTtvgc/nugXj0Vcrrs68Mn2D1r0zf630VNtqtpI1FEO7e+O9FP4gqs9AcnBaSEeoHIPm28u6qgPR0oyEpGSw==",
      "license": "MIT"
    },
    "node_modules/on-exit-leak-free": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/on-exit-leak-free/-/on-exit-leak-free-0.2.0.tgz",
      "integrity": "sha512-dqaz3u44QbRXQooZLTUKU41ZrzYrcvLISVgbrzbyCMxpmSLJvZ3ZamIJIZ29P6OhZIkNIQKosdeM6t1LYbA9hg==",
      "license": "MIT"
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "license": "MIT",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "license": "ISC",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/onetime": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-7.0.0.tgz",
      "integrity": "sha512-VXJjc87FScF88uafS3JllDgvAm+c/Slfz06lorj2uAY34rlUu0Nt+v8wreiImcrgAjjIHp1rXpTDlLOGw29WwQ==",
      "license": "MIT",
      "dependencies": {
        "mimic-function": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/ora": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/ora/-/ora-8.2.0.tgz",
      "integrity": "sha512-weP+BZ8MVNnlCm8c0Qdc1WSWq4Qn7I+9CJGm7Qali6g44e/PUzbjNqJX5NJ9ljlNMosfJvg1fKEGILklK9cwnw==",
      "license": "MIT",
      "dependencies": {
        "chalk": "^5.3.0",
        "cli-cursor": "^5.0.0",
        "cli-spinners": "^2.9.2",
        "is-interactive": "^2.0.0",
        "is-unicode-supported": "^2.0.0",
        "log-symbols": "^6.0.0",
        "stdin-discarder": "^0.2.2",
        "string-width": "^7.2.0",
        "strip-ansi": "^7.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-cancelable": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz",
      "integrity": "sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/pako": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
      "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
      "license": "(MIT AND Zlib)"
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-bmfont-ascii": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/parse-bmfont-ascii/-/parse-bmfont-ascii-1.0.6.tgz",
      "integrity": "sha512-U4RrVsUFCleIOBsIGYOMKjn9PavsGOXxbvYGtMOEfnId0SVNsgehXh1DxUdVPLoxd5mvcEtvmKs2Mmf0Mpa1ZA==",
      "license": "MIT"
    },
    "node_modules/parse-bmfont-binary": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/parse-bmfont-binary/-/parse-bmfont-binary-1.0.6.tgz",
      "integrity": "sha512-GxmsRea0wdGdYthjuUeWTMWPqm2+FAd4GI8vCvhgJsFnoGhTrLhXDDupwTo7rXVAgaLIGoVHDZS9p/5XbSqeWA==",
      "license": "MIT"
    },
    "node_modules/parse-bmfont-xml": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/parse-bmfont-xml/-/parse-bmfont-xml-1.1.6.tgz",
      "integrity": "sha512-0cEliVMZEhrFDwMh4SxIyVJpqYoOWDJ9P895tFuS+XuNzI5UBmBk5U5O4KuJdTnZpSBI4LFA2+ZiJaiwfSwlMA==",
      "license": "MIT",
      "dependencies": {
        "xml-parse-from-string": "^1.0.0",
        "xml2js": "^0.5.0"
      }
    },
    "node_modules/parse-headers": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.6.tgz",
      "integrity": "sha512-Tz11t3uKztEW5FEVZnj1ox8GKblWn+PvHY9TmJV5Mll2uHEwRdR/5Li1OlXoECjLYkApdhWy44ocONwXLiKO5A==",
      "license": "MIT"
    },
    "node_modules/parse5": {
      "version": "7.3.0",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-7.3.0.tgz",
      "integrity": "sha512-IInvU7fabl34qmi9gY8XOVxhYyMyuH2xUNpb2q8/Y+7552KlejkRvqvD19nMoUW/uQGGbqNpA6Tufu5FL5BZgw==",
      "license": "MIT",
      "dependencies": {
        "entities": "^6.0.0"
      },
      "funding": {
        "url": "https://github.com/inikulin/parse5?sponsor=1"
      }
    },
    "node_modules/parse5-htmlparser2-tree-adapter": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/parse5-htmlparser2-tree-adapter/-/parse5-htmlparser2-tree-adapter-7.1.0.tgz",
      "integrity": "sha512-ruw5xyKs6lrpo9x9rCZqZZnIUntICjQAd0Wsmp396Ul9lN/h+ifgVV1x1gZHi8euej6wTfpqX8j+BFQxF0NS/g==",
      "license": "MIT",
      "dependencies": {
        "domhandler": "^5.0.3",
        "parse5": "^7.0.0"
      },
      "funding": {
        "url": "https://github.com/inikulin/parse5?sponsor=1"
      }
    },
    "node_modules/parse5-parser-stream": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/parse5-parser-stream/-/parse5-parser-stream-7.1.2.tgz",
      "integrity": "sha512-JyeQc9iwFLn5TbvvqACIF/VXG6abODeB3Fwmv/TGdLk2LfbWkaySGY72at4+Ty7EkPZj854u4CrICqNk2qIbow==",
      "license": "MIT",
      "dependencies": {
        "parse5": "^7.0.0"
      },
      "funding": {
        "url": "https://github.com/inikulin/parse5?sponsor=1"
      }
    },
    "node_modules/parse5/node_modules/entities": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/entities/-/entities-6.0.1.tgz",
      "integrity": "sha512-aN97NXWF6AWBTahfVOIrB/NShkzi5H7F9r1s9mD3cDj4Ko5f2qhhVoYMibXF7GlLveb/D2ioWay8lxI97Ven3g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
      "license": "MIT"
    },
    "node_modules/peek-readable": {
      "version": "5.4.2",
      "resolved": "https://registry.npmjs.org/peek-readable/-/peek-readable-5.4.2.tgz",
      "integrity": "sha512-peBp3qZyuS6cNIJ2akRNG1uo1WJ1d0wTxg/fxMdZ0BqCVhx242bSFHM9eNqflfJVS9SsgkzgT/1UgnsurBOTMg==",
      "license": "MIT",
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/perf_hooks": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/perf_hooks/-/perf_hooks-0.0.1.tgz",
      "integrity": "sha512-qG/D9iA4KDme+KF4vCObJy6Bouu3BlQnmJ8jPydVPm32NJBD9ZK1ZNgXSYaZKHkVC1sKSqUiLgFvAZPUiIEnBw==",
      "license": "MIT"
    },
    "node_modules/performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow==",
      "license": "MIT"
    },
    "node_modules/phin": {
      "version": "2.9.3",
      "resolved": "https://registry.npmjs.org/phin/-/phin-2.9.3.tgz",
      "integrity": "sha512-CzFr90qM24ju5f88quFC/6qohjC144rehe5n6DH900lgXmUe86+xCKc10ev56gRKC4/BkHUoG4uSiQgBiIXwDA==",
      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.",
      "license": "MIT"
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pino": {
      "version": "7.11.0",
      "resolved": "https://registry.npmjs.org/pino/-/pino-7.11.0.tgz",
      "integrity": "sha512-dMACeu63HtRLmCG8VKdy4cShCPKaYDR4youZqoSWLxl5Gu99HUw8bw75thbPv9Nip+H+QYX8o3ZJbTdVZZ2TVg==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0",
        "fast-redact": "^3.0.0",
        "on-exit-leak-free": "^0.2.0",
        "pino-abstract-transport": "v0.5.0",
        "pino-std-serializers": "^4.0.0",
        "process-warning": "^1.0.0",
        "quick-format-unescaped": "^4.0.3",
        "real-require": "^0.1.0",
        "safe-stable-stringify": "^2.1.0",
        "sonic-boom": "^2.2.1",
        "thread-stream": "^0.15.1"
      },
      "bin": {
        "pino": "bin.js"
      }
    },
    "node_modules/pino-abstract-transport": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/pino-abstract-transport/-/pino-abstract-transport-0.5.0.tgz",
      "integrity": "sha512-+KAgmVeqXYbTtU2FScx1XS3kNyfZ5TrXY07V96QnUSFqo2gAqlvmaxH67Lj7SWazqsMabf+58ctdTcBgnOLUOQ==",
      "license": "MIT",
      "dependencies": {
        "duplexify": "^4.1.2",
        "split2": "^4.0.0"
      }
    },
    "node_modules/pino-pretty": {
      "version": "7.6.1",
      "resolved": "https://registry.npmjs.org/pino-pretty/-/pino-pretty-7.6.1.tgz",
      "integrity": "sha512-H7N6ZYkiyrfwBGW9CSjx0uyO9Q2Lyt73881+OTYk8v3TiTdgN92QHrWlEq/LeWw5XtDP64jeSk3mnc6T+xX9/w==",
      "license": "MIT",
      "dependencies": {
        "args": "^5.0.1",
        "colorette": "^2.0.7",
        "dateformat": "^4.6.3",
        "fast-safe-stringify": "^2.0.7",
        "joycon": "^3.1.1",
        "on-exit-leak-free": "^0.2.0",
        "pino-abstract-transport": "^0.5.0",
        "pump": "^3.0.0",
        "readable-stream": "^3.6.0",
        "rfdc": "^1.3.0",
        "secure-json-parse": "^2.4.0",
        "sonic-boom": "^2.2.0",
        "strip-json-comments": "^3.1.1"
      },
      "bin": {
        "pino-pretty": "bin.js"
      }
    },
    "node_modules/pino-pretty/node_modules/readable-stream": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
      "license": "MIT",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/pino-std-serializers": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-4.0.0.tgz",
      "integrity": "sha512-cK0pekc1Kjy5w9V2/n+8MkZwusa6EyyxfeQCB799CQRhRt/CqYKiWs5adeu8Shve2ZNffvfC/7J64A2PJo1W/Q==",
      "license": "MIT"
    },
    "node_modules/pixelmatch": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/pixelmatch/-/pixelmatch-4.0.2.tgz",
      "integrity": "sha512-J8B6xqiO37sU/gkcMglv6h5Jbd9xNER7aHzpfRdNmV4IbQBzBpe4l9XmbG+xPF/znacgu2jfEw+wHffaq/YkXA==",
      "license": "ISC",
      "dependencies": {
        "pngjs": "^3.0.0"
      },
      "bin": {
        "pixelmatch": "bin/pixelmatch"
      }
    },
    "node_modules/plist": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/plist/-/plist-3.1.0.tgz",
      "integrity": "sha512-uysumyrvkUX0rX/dEVqt8gC3sTBzd4zoWfLeS29nb53imdaXVvLINYXTI2GNqzaMuvacNx4uJQ8+b3zXR0pkgQ==",
      "license": "MIT",
      "dependencies": {
        "@xmldom/xmldom": "^0.8.8",
        "base64-js": "^1.5.1",
        "xmlbuilder": "^15.1.1"
      },
      "engines": {
        "node": ">=10.4.0"
      }
    },
    "node_modules/pngjs": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-3.4.0.tgz",
      "integrity": "sha512-NCrCHhWmnQklfH4MtJMRjZ2a8c80qXeMlQMv2uVp9ISJMTt562SbGd6n2oq0PaPgKm7Z6pL9E2UlLIhC+SHL3w==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6.0"
      }
    },
    "node_modules/process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
      "license": "MIT"
    },
    "node_modules/process-warning": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-1.0.0.tgz",
      "integrity": "sha512-du4wfLyj4yCZq1VupnVSZmRsPJsNuxoDQFdCFHLaYiEbFBD7QE0a+I4D7hOxrVnh78QE/YipFAj9lXHiXocV+Q==",
      "license": "MIT"
    },
    "node_modules/protobufjs": {
      "version": "7.5.3",
      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-7.5.3.tgz",
      "integrity": "sha512-sildjKwVqOI2kmFDiXQ6aEB0fjYTafpEvIBs8tOR8qI4spuL9OPROLVu2qZqi/xgCfsHIwVqlaF8JBjWFHnKbw==",
      "hasInstallScript": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.2",
        "@protobufjs/base64": "^1.1.2",
        "@protobufjs/codegen": "^2.0.4",
        "@protobufjs/eventemitter": "^1.1.0",
        "@protobufjs/fetch": "^1.1.0",
        "@protobufjs/float": "^1.0.2",
        "@protobufjs/inquire": "^1.1.0",
        "@protobufjs/path": "^1.1.2",
        "@protobufjs/pool": "^1.1.0",
        "@protobufjs/utf8": "^1.1.0",
        "@types/node": ">=13.7.0",
        "long": "^5.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "license": "MIT",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==",
      "license": "MIT"
    },
    "node_modules/psl": {
      "version": "1.15.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.15.0.tgz",
      "integrity": "sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.3.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/lupomontero"
      }
    },
    "node_modules/pump": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.3.tgz",
      "integrity": "sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==",
      "license": "MIT",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/qrcode": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/qrcode/-/qrcode-1.5.4.tgz",
      "integrity": "sha512-1ca71Zgiu6ORjHqFBDpnSMTR2ReToX4l1Au1VFLyVeBTFavzQnv5JxMFr3ukHVKpSrSA2MCk0lNJSykjUfz7Zg==",
      "license": "MIT",
      "dependencies": {
        "dijkstrajs": "^1.0.1",
        "pngjs": "^5.0.0",
        "yargs": "^15.3.1"
      },
      "bin": {
        "qrcode": "bin/qrcode"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/qrcode-terminal": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/qrcode-terminal/-/qrcode-terminal-0.12.0.tgz",
      "integrity": "sha512-EXtzRZmC+YGmGlDFbXKxQiMZNwCLEO6BANKXG4iCtSIM0yqc/pappSx3RIKr4r0uh5JsBckOXeKrB3Iz7mdQpQ==",
      "bin": {
        "qrcode-terminal": "bin/qrcode-terminal.js"
      }
    },
    "node_modules/qrcode/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/qrcode/node_modules/cliui": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.0",
        "wrap-ansi": "^6.2.0"
      }
    },
    "node_modules/qrcode/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/qrcode/node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "license": "MIT",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "license": "MIT",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "license": "MIT",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/qrcode/node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "license": "MIT",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/pngjs": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-5.0.0.tgz",
      "integrity": "sha512-40QW5YalBNfQo5yRYmiw7Yz6TKKVr3h6970B2YE+3fQpsWcrbj1PzJgxeJ19DRQjhMbKPIuMY8rFaXc8moolVw==",
      "license": "MIT",
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/qrcode/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/wrap-ansi": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/y18n": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==",
      "license": "ISC"
    },
    "node_modules/qrcode/node_modules/yargs": {
      "version": "15.4.1",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^6.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^4.1.0",
        "get-caller-file": "^2.0.1",
        "require-directory": "^2.1.1",
        "require-main-filename": "^2.0.0",
        "set-blocking": "^2.0.0",
        "string-width": "^4.2.0",
        "which-module": "^2.0.0",
        "y18n": "^4.0.0",
        "yargs-parser": "^18.1.2"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/qrcode/node_modules/yargs-parser": {
      "version": "18.1.3",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
      "license": "ISC",
      "dependencies": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/qs": {
      "version": "6.13.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.0.6"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/querystring": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
      "integrity": "sha512-X/xY82scca2tau62i9mDyU9K+I+djTMUsvwf7xnUX5GLvVzgJybOJf4Y6o9Zx3oJK/LSXg5tTZBjwzqVPaPO2g==",
      "deprecated": "The querystring API is considered Legacy. new code should use the URLSearchParams API instead.",
      "engines": {
        "node": ">=0.4.x"
      }
    },
    "node_modules/querystringify": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz",
      "integrity": "sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==",
      "license": "MIT"
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/quick-format-unescaped": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/quick-format-unescaped/-/quick-format-unescaped-4.0.4.tgz",
      "integrity": "sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==",
      "license": "MIT"
    },
    "node_modules/quick-lru": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz",
      "integrity": "sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
      "license": "MIT",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/raw-body/node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "license": "MIT",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/readable-stream": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
      "license": "MIT",
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/readable-stream/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT"
    },
    "node_modules/readable-web-to-node-stream": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/readable-web-to-node-stream/-/readable-web-to-node-stream-3.0.4.tgz",
      "integrity": "sha512-9nX56alTf5bwXQ3ZDipHJhusu9NTQJ/CVPtb/XHAJCXihZeitfJvIRS4GqQ/mfIoOE3IelHMrpayVrosdHBuLw==",
      "license": "MIT",
      "dependencies": {
        "readable-stream": "^4.7.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/readable-web-to-node-stream/node_modules/buffer": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz",
      "integrity": "sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.2.1"
      }
    },
    "node_modules/readable-web-to-node-stream/node_modules/readable-stream": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-4.7.0.tgz",
      "integrity": "sha512-oIGGmcpTLwPga8Bn6/Z75SVaH1z5dUut2ibSyAMVhmUggWpmDn2dapB0n7f8nwaSiRtepAsfJyfXIO5DCVAODg==",
      "license": "MIT",
      "dependencies": {
        "abort-controller": "^3.0.0",
        "buffer": "^6.0.3",
        "events": "^3.3.0",
        "process": "^0.11.10",
        "string_decoder": "^1.3.0"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      }
    },
    "node_modules/readable-web-to-node-stream/node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/readline": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/readline/-/readline-1.3.0.tgz",
      "integrity": "sha512-k2d6ACCkiNYz222Fs/iNze30rRJ1iIicW7JuX/7/cozvih6YCkFZH+J6mAFDVgv0dRBaAyr4jDqC95R2y4IADg==",
      "license": "BSD"
    },
    "node_modules/real-require": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/real-require/-/real-require-0.1.0.tgz",
      "integrity": "sha512-r/H9MzAWtrv8aSVjPCMFpDMl5q66GqtmmRkRjpHTsp4zBAa+snZyiQNlMONiUmEJcsnaw0wCauJ2GWODr/aFkg==",
      "license": "MIT",
      "engines": {
        "node": ">= 12.13.0"
      }
    },
    "node_modules/redstar": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/redstar/-/redstar-0.0.2.tgz",
      "integrity": "sha512-VNvLaLxMJMYiAasJX5Q/GC+Os7FXL0yPWFDuTodhR7Na9wqzrXsePPWC+EtIv4t3q5DyAK00w423xi5mQN2fqg==",
      "license": "MIT",
      "dependencies": {
        "minimatch": "~3.0.4"
      }
    },
    "node_modules/redstar/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/redstar/node_modules/minimatch": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.8.tgz",
      "integrity": "sha512-6FsRAQsxQ61mw+qP1ZzbL9Bc78x2p5OqNgNpnoAFLTrX8n5Kxph0CsnhmKKNXTWjXqU5L0pGPR7hYk+XWZr60Q==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.13.11",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
      "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==",
      "license": "MIT"
    },
    "node_modules/render-gif": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/render-gif/-/render-gif-2.0.4.tgz",
      "integrity": "sha512-l5X7EwbEvdflnvVAzjL7njizwZN8ATqJ0rdaQ5WwMJ55vyWXIXIUE9Ut7W6hm+KE+HMYn5C0a+7t0B6JjGfxQA==",
      "license": "MIT",
      "dependencies": {
        "cycled": "^1.2.0",
        "decode-gif": "^1.0.1",
        "delay": "^4.3.0",
        "jimp": "^0.14.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/bmp": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/bmp/-/bmp-0.14.0.tgz",
      "integrity": "sha512-5RkX6tSS7K3K3xNEb2ygPuvyL9whjanhoaB/WmmXlJS6ub4DjTqrapu8j4qnIWmO4YYtFeTbDTXV6v9P1yMA5A==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0",
        "bmp-js": "^0.1.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/core": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/core/-/core-0.14.0.tgz",
      "integrity": "sha512-S62FcKdtLtj3yWsGfJRdFXSutjvHg7aQNiFogMbwq19RP4XJWqS2nOphu7ScB8KrSlyy5nPF2hkWNhLRLyD82w==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0",
        "any-base": "^1.1.0",
        "buffer": "^5.2.0",
        "exif-parser": "^0.1.12",
        "file-type": "^9.0.0",
        "load-bmfont": "^1.3.1",
        "mkdirp": "^0.5.1",
        "phin": "^2.9.1",
        "pixelmatch": "^4.0.2",
        "tinycolor2": "^1.4.1"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/custom": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/custom/-/custom-0.14.0.tgz",
      "integrity": "sha512-kQJMeH87+kWJdVw8F9GQhtsageqqxrvzg7yyOw3Tx/s7v5RToe8RnKyMM+kVtBJtNAG+Xyv/z01uYQ2jiZ3GwA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/core": "^0.14.0"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/gif": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/gif/-/gif-0.14.0.tgz",
      "integrity": "sha512-DHjoOSfCaCz72+oGGEh8qH0zE6pUBaBxPxxmpYJjkNyDZP7RkbBkZJScIYeQ7BmJxmGN4/dZn+MxamoQlr+UYg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0",
        "gifwrap": "^0.9.2",
        "omggif": "^1.0.9"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/jpeg": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/jpeg/-/jpeg-0.14.0.tgz",
      "integrity": "sha512-561neGbr+87S/YVQYnZSTyjWTHBm9F6F1obYHiyU3wVmF+1CLbxY3FQzt4YolwyQHIBv36Bo0PY2KkkU8BEeeQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0",
        "jpeg-js": "^0.4.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-blit": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-blit/-/plugin-blit-0.14.0.tgz",
      "integrity": "sha512-YoYOrnVHeX3InfgbJawAU601iTZMwEBZkyqcP1V/S33Qnz9uzH1Uj1NtC6fNgWzvX6I4XbCWwtr4RrGFb5CFrw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-blur": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-blur/-/plugin-blur-0.14.0.tgz",
      "integrity": "sha512-9WhZcofLrT0hgI7t0chf7iBQZib//0gJh9WcQMUt5+Q1Bk04dWs8vTgLNj61GBqZXgHSPzE4OpCrrLDBG8zlhQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-circle": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-circle/-/plugin-circle-0.14.0.tgz",
      "integrity": "sha512-o5L+wf6QA44tvTum5HeLyLSc5eVfIUd5ZDVi5iRfO4o6GT/zux9AxuTSkKwnjhsG8bn1dDmywAOQGAx7BjrQVA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-color": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-color/-/plugin-color-0.14.0.tgz",
      "integrity": "sha512-JJz512SAILYV0M5LzBb9sbOm/XEj2fGElMiHAxb7aLI6jx+n0agxtHpfpV/AePTLm1vzzDxx6AJxXbKv355hBQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0",
        "tinycolor2": "^1.4.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-contain": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.14.0.tgz",
      "integrity": "sha512-RX2q233lGyaxiMY6kAgnm9ScmEkNSof0hdlaJAVDS1OgXphGAYAeSIAwzESZN4x3ORaWvkFefeVH9O9/698Evg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5",
        "@jimp/plugin-scale": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-cover": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-cover/-/plugin-cover-0.14.0.tgz",
      "integrity": "sha512-0P/5XhzWES4uMdvbi3beUgfvhn4YuQ/ny8ijs5kkYIw6K8mHcl820HahuGpwWMx56DJLHRl1hFhJwo9CeTRJtQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-crop": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5",
        "@jimp/plugin-scale": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-crop": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-crop/-/plugin-crop-0.14.0.tgz",
      "integrity": "sha512-Ojtih+XIe6/XSGtpWtbAXBozhCdsDMmy+THUJAGu2x7ZgKrMS0JotN+vN2YC3nwDpYkM+yOJImQeptSfZb2Sug==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-displace": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-displace/-/plugin-displace-0.14.0.tgz",
      "integrity": "sha512-c75uQUzMgrHa8vegkgUvgRL/PRvD7paFbFJvzW0Ugs8Wl+CDMGIPYQ3j7IVaQkIS+cAxv+NJ3TIRBQyBrfVEOg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-dither": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-dither/-/plugin-dither-0.14.0.tgz",
      "integrity": "sha512-g8SJqFLyYexXQQsoh4dc1VP87TwyOgeTElBcxSXX2LaaMZezypmxQfLTzOFzZoK8m39NuaoH21Ou1Ftsq7LzVQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-fisheye": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-fisheye/-/plugin-fisheye-0.14.0.tgz",
      "integrity": "sha512-BFfUZ64EikCaABhCA6mR3bsltWhPpS321jpeIQfJyrILdpFsZ/OccNwCgpW1XlbldDHIoNtXTDGn3E+vCE7vDg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-flip": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-flip/-/plugin-flip-0.14.0.tgz",
      "integrity": "sha512-WtL1hj6ryqHhApih+9qZQYA6Ye8a4HAmdTzLbYdTMrrrSUgIzFdiZsD0WeDHpgS/+QMsWwF+NFmTZmxNWqKfXw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-rotate": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-gaussian": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-gaussian/-/plugin-gaussian-0.14.0.tgz",
      "integrity": "sha512-uaLwQ0XAQoydDlF9tlfc7iD9drYPriFe+jgYnWm8fbw5cN+eOIcnneEX9XCOOzwgLPkNCxGox6Kxjn8zY6GxtQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-invert": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-invert/-/plugin-invert-0.14.0.tgz",
      "integrity": "sha512-UaQW9X9vx8orQXYSjT5VcITkJPwDaHwrBbxxPoDG+F/Zgv4oV9fP+udDD6qmkgI9taU+44Fy+zm/J/gGcMWrdg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-mask": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-mask/-/plugin-mask-0.14.0.tgz",
      "integrity": "sha512-tdiGM69OBaKtSPfYSQeflzFhEpoRZ+BvKfDEoivyTjauynbjpRiwB1CaiS8En1INTDwzLXTT0Be9SpI3LkJoEA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-normalize": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-normalize/-/plugin-normalize-0.14.0.tgz",
      "integrity": "sha512-AfY8sqlsbbdVwFGcyIPy5JH/7fnBzlmuweb+Qtx2vn29okq6+HelLjw2b+VT2btgGUmWWHGEHd86oRGSoWGyEQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-print": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-print/-/plugin-print-0.14.0.tgz",
      "integrity": "sha512-MwP3sH+VS5AhhSTXk7pui+tEJFsxnTKFY3TraFJb8WFbA2Vo2qsRCZseEGwpTLhENB7p/JSsLvWoSSbpmxhFAQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0",
        "load-bmfont": "^1.4.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-resize": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-resize/-/plugin-resize-0.14.0.tgz",
      "integrity": "sha512-qFeMOyXE/Bk6QXN0GQo89+CB2dQcXqoxUcDb2Ah8wdYlKqpi53skABkgVy5pW3EpiprDnzNDboMltdvDslNgLQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-rotate": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-rotate/-/plugin-rotate-0.14.0.tgz",
      "integrity": "sha512-aGaicts44bvpTcq5Dtf93/8TZFu5pMo/61lWWnYmwJJU1RqtQlxbCLEQpMyRhKDNSfPbuP8nyGmaqXlM/82J0Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blit": ">=0.3.5",
        "@jimp/plugin-crop": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-scale": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-scale/-/plugin-scale-0.14.0.tgz",
      "integrity": "sha512-ZcJk0hxY5ZKZDDwflqQNHEGRblgaR+piePZm7dPwPUOSeYEH31P0AwZ1ziceR74zd8N80M0TMft+e3Td6KGBHw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-shadow": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-shadow/-/plugin-shadow-0.14.0.tgz",
      "integrity": "sha512-p2igcEr/iGrLiTu0YePNHyby0WYAXM14c5cECZIVnq/UTOOIQ7xIcWZJ1lRbAEPxVVXPN1UibhZAbr3HAb5BjQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-blur": ">=0.3.5",
        "@jimp/plugin-resize": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugin-threshold": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugin-threshold/-/plugin-threshold-0.14.0.tgz",
      "integrity": "sha512-N4BlDgm/FoOMV/DQM2rSpzsgqAzkP0DXkWZoqaQrlRxQBo4zizQLzhEL00T/YCCMKnddzgEhnByaocgaaa0fKw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5",
        "@jimp/plugin-color": ">=0.8.0",
        "@jimp/plugin-resize": ">=0.8.0"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/plugins": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/plugins/-/plugins-0.14.0.tgz",
      "integrity": "sha512-vDO3XT/YQlFlFLq5TqNjQkISqjBHT8VMhpWhAfJVwuXIpilxz5Glu4IDLK6jp4IjPR6Yg2WO8TmRY/HI8vLrOw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/plugin-blit": "^0.14.0",
        "@jimp/plugin-blur": "^0.14.0",
        "@jimp/plugin-circle": "^0.14.0",
        "@jimp/plugin-color": "^0.14.0",
        "@jimp/plugin-contain": "^0.14.0",
        "@jimp/plugin-cover": "^0.14.0",
        "@jimp/plugin-crop": "^0.14.0",
        "@jimp/plugin-displace": "^0.14.0",
        "@jimp/plugin-dither": "^0.14.0",
        "@jimp/plugin-fisheye": "^0.14.0",
        "@jimp/plugin-flip": "^0.14.0",
        "@jimp/plugin-gaussian": "^0.14.0",
        "@jimp/plugin-invert": "^0.14.0",
        "@jimp/plugin-mask": "^0.14.0",
        "@jimp/plugin-normalize": "^0.14.0",
        "@jimp/plugin-print": "^0.14.0",
        "@jimp/plugin-resize": "^0.14.0",
        "@jimp/plugin-rotate": "^0.14.0",
        "@jimp/plugin-scale": "^0.14.0",
        "@jimp/plugin-shadow": "^0.14.0",
        "@jimp/plugin-threshold": "^0.14.0",
        "timm": "^1.6.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/png": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/png/-/png-0.14.0.tgz",
      "integrity": "sha512-0RV/mEIDOrPCcNfXSPmPBqqSZYwGADNRVUTyMt47RuZh7sugbYdv/uvKmQSiqRdR0L1sfbCBMWUEa5G/8MSbdA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/utils": "^0.14.0",
        "pngjs": "^3.3.3"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/tiff": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/tiff/-/tiff-0.14.0.tgz",
      "integrity": "sha512-zBYDTlutc7j88G/7FBCn3kmQwWr0rmm1e0FKB4C3uJ5oYfT8645lftUsvosKVUEfkdmOaMAnhrf4ekaHcb5gQw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "utif": "^2.0.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/types": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/types/-/types-0.14.0.tgz",
      "integrity": "sha512-hx3cXAW1KZm+b+XCrY3LXtdWy2U+hNtq0rPyJ7NuXCjU7lZR3vIkpz1DLJ3yDdS70hTi5QDXY3Cd9kd6DtloHQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/bmp": "^0.14.0",
        "@jimp/gif": "^0.14.0",
        "@jimp/jpeg": "^0.14.0",
        "@jimp/png": "^0.14.0",
        "@jimp/tiff": "^0.14.0",
        "timm": "^1.6.1"
      },
      "peerDependencies": {
        "@jimp/custom": ">=0.3.5"
      }
    },
    "node_modules/render-gif/node_modules/@jimp/utils": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@jimp/utils/-/utils-0.14.0.tgz",
      "integrity": "sha512-MY5KFYUru0y74IsgM/9asDwb3ERxWxXEu3CRCZEvE7DtT86y1bR1XgtlSliMrptjz4qbivNGMQSvUBpEFJDp1A==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "regenerator-runtime": "^0.13.3"
      }
    },
    "node_modules/render-gif/node_modules/file-type": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-9.0.0.tgz",
      "integrity": "sha512-Qe/5NJrgIOlwijpq3B7BEpzPFcgzggOTagZmkXQY4LA6bsXKTUstK7Wp12lEJ/mLKTpvIZxmIuRcLYWT6ov9lw==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/render-gif/node_modules/jimp": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/jimp/-/jimp-0.14.0.tgz",
      "integrity": "sha512-8BXU+J8+SPmwwyq9ELihpSV4dWPTiOKBWCEgtkbnxxAVMjXdf3yGmyaLSshBfXc8sP/JQ9OZj5R8nZzz2wPXgA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@jimp/custom": "^0.14.0",
        "@jimp/plugins": "^0.14.0",
        "@jimp/types": "^0.14.0",
        "regenerator-runtime": "^0.13.3"
      }
    },
    "node_modules/request": {
      "version": "2.88.2",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
      "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142",
      "license": "Apache-2.0",
      "dependencies": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.3",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.5.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/request/node_modules/form-data": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.6",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 0.12"
      }
    },
    "node_modules/request/node_modules/qs": {
      "version": "6.5.3",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.3.tgz",
      "integrity": "sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/request/node_modules/tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/request/node_modules/uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
      "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
      "license": "MIT",
      "bin": {
        "uuid": "bin/uuid"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/require-main-filename": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
      "license": "ISC"
    },
    "node_modules/requires-port": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
      "integrity": "sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==",
      "license": "MIT"
    },
    "node_modules/resolve-alpn": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz",
      "integrity": "sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==",
      "license": "MIT"
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/responselike": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-2.0.1.tgz",
      "integrity": "sha512-4gl03wn3hj1HP3yzgdI7d3lCkF95F21Pz4BPGvKHinyQzALR5CapwC8yIi0Rh58DEMQ/SguC03wFj2k0M/mHhw==",
      "license": "MIT",
      "dependencies": {
        "lowercase-keys": "^2.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/restore-cursor": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-5.1.0.tgz",
      "integrity": "sha512-oMA2dcrw6u0YfxJQXm342bFKX/E4sG9rbTzO9ptUcR/e8A33cHuvStiYOwH7fszkZlZ1z/ta9AAoPk2F4qIOHA==",
      "license": "MIT",
      "dependencies": {
        "onetime": "^7.0.0",
        "signal-exit": "^4.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rfdc": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/rfdc/-/rfdc-1.4.1.tgz",
      "integrity": "sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA==",
      "license": "MIT"
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-stable-stringify": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz",
      "integrity": "sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "license": "MIT"
    },
    "node_modules/sax": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.4.1.tgz",
      "integrity": "sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg==",
      "license": "ISC"
    },
    "node_modules/saxes": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/saxes/-/saxes-5.0.1.tgz",
      "integrity": "sha512-5LBh1Tls8c9xgGjw3QrMwETmTMVk0oFgvrFSvWx62llR2hcEInrKNZ2GZCCuuy2lvWrdl5jhbpeqc5hRYKFOcw==",
      "license": "ISC",
      "dependencies": {
        "xmlchars": "^2.2.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/secure-json-parse": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/secure-json-parse/-/secure-json-parse-2.7.0.tgz",
      "integrity": "sha512-6aU+Rwsezw7VR8/nyvKTx8QpWH9FrcYiXXlqC4z5d5XQBDRqtbfsRjnwGyqbi3gddNtWHuEk9OANUotL26qKUw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/send": {
      "version": "0.19.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
      "license": "MIT",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "license": "MIT",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/send/node_modules/debug/node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
      "license": "MIT"
    },
    "node_modules/send/node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/serve-static": {
      "version": "1.16.2",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
      "license": "MIT",
      "dependencies": {
        "encodeurl": "~2.0.0",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.19.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
      "license": "ISC"
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
      "license": "ISC"
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/sift": {
      "version": "16.0.1",
      "resolved": "https://registry.npmjs.org/sift/-/sift-16.0.1.tgz",
      "integrity": "sha512-Wv6BjQ5zbhW7VFefWusVP33T/EM0vYikCaQ2qR8yULbsilAT8/wQaXvuQ3ptGLpoKx+lihJE3y2UTgKDyyNHZQ==",
      "license": "MIT"
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/similarity": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/similarity/-/similarity-1.2.1.tgz",
      "integrity": "sha512-lMOpWVaWrTnyL+tkvDs8oGV/KAUBQ3wfbZtdiwDcC+KYGlwO8kgtiyag1B6akAjALDMwn5rN5YHHei1hr4X7nw==",
      "license": "ISC",
      "dependencies": {
        "levenshtein-edit-distance": "^2.0.0"
      },
      "bin": {
        "similarity": "cli.js"
      }
    },
    "node_modules/slice-ansi": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-4.0.0.tgz",
      "integrity": "sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "astral-regex": "^2.0.0",
        "is-fullwidth-code-point": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/slice-ansi?sponsor=1"
      }
    },
    "node_modules/smart-buffer": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz",
      "integrity": "sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==",
      "license": "MIT",
      "engines": {
        "node": ">= 6.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/socket.io": {
      "version": "4.8.1",
      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-4.8.1.tgz",
      "integrity": "sha512-oZ7iUCxph8WYRHHcjBEc9unw3adt5CmSNlppj/5Q4k2RIrhl8Z5yY2Xr4j9zj0+wzVZ0bxmYoGSzKJnRl6A4yg==",
      "license": "MIT",
      "dependencies": {
        "accepts": "~1.3.4",
        "base64id": "~2.0.0",
        "cors": "~2.8.5",
        "debug": "~4.3.2",
        "engine.io": "~6.6.0",
        "socket.io-adapter": "~2.5.2",
        "socket.io-parser": "~4.2.4"
      },
      "engines": {
        "node": ">=10.2.0"
      }
    },
    "node_modules/socket.io-adapter": {
      "version": "2.5.5",
      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-2.5.5.tgz",
      "integrity": "sha512-eLDQas5dzPgOWCk9GuuJC2lBqItuhKI4uxGgo9aIV7MYbk2h9Q6uULEh8WBzThoI7l+qU9Ast9fVUmkqPP9wYg==",
      "license": "MIT",
      "dependencies": {
        "debug": "~4.3.4",
        "ws": "~8.17.1"
      }
    },
    "node_modules/socket.io-adapter/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-adapter/node_modules/ws": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io-parser": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.4.tgz",
      "integrity": "sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==",
      "license": "MIT",
      "dependencies": {
        "@socket.io/component-emitter": "~3.1.0",
        "debug": "~4.3.1"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/socket.io-parser/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socket.io/node_modules/debug": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/socks": {
      "version": "2.8.6",
      "resolved": "https://registry.npmjs.org/socks/-/socks-2.8.6.tgz",
      "integrity": "sha512-pe4Y2yzru68lXCb38aAqRf5gvN8YdjP1lok5o0J7BOHljkyCGKVz7H3vpVIXKD27rj2giOJ7DwVyk/GWrPHDWA==",
      "license": "MIT",
      "dependencies": {
        "ip-address": "^9.0.5",
        "smart-buffer": "^4.2.0"
      },
      "engines": {
        "node": ">= 10.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/sonic-boom": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-2.8.0.tgz",
      "integrity": "sha512-kuonw1YOYYNOve5iHdSahXPOK49GqwA+LZhI6Wz/l0rP57iKyXXIHaRagOBHAPmGwJC6od2Z9zgvZ5loSgMlVg==",
      "license": "MIT",
      "dependencies": {
        "atomic-sleep": "^1.0.0"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "license": "BSD-3-Clause",
      "optional": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/sparse-bitfield": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/sparse-bitfield/-/sparse-bitfield-3.0.3.tgz",
      "integrity": "sha512-kvzhi7vqKTfkh0PZU+2D2PIllw2ymqJKujUcyPMd9Y75Nv4nPbGJZXNhxsgdQab2BmlDct1YnfQCguEvHr7VsQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "memory-pager": "^1.0.2"
      }
    },
    "node_modules/split2": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
      "license": "ISC",
      "engines": {
        "node": ">= 10.x"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz",
      "integrity": "sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/sshpk": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.18.0.tgz",
      "integrity": "sha512-2p2KJZTSqQ/I3+HX42EpYOa2l3f8Erv8MWKsy2I9uf4wA7yFIkXRffYdsx86y6z4vHtV8u7g+pPlr8/4ouAxsQ==",
      "license": "MIT",
      "dependencies": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      },
      "bin": {
        "sshpk-conv": "bin/sshpk-conv",
        "sshpk-sign": "bin/sshpk-sign",
        "sshpk-verify": "bin/sshpk-verify"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/sshpk/node_modules/jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg==",
      "license": "MIT"
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/stdin-discarder": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/stdin-discarder/-/stdin-discarder-0.2.2.tgz",
      "integrity": "sha512-UhDfHmA92YAlNnCfhmq0VeNL5bDbiZGg7sZ2IvPsXubGkiNa9EC+tUTsjBRsYUAz87btI6/1wf4XoVvQ3uRnmQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/steno": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/steno/-/steno-2.1.0.tgz",
      "integrity": "sha512-mauOsiaqTNGFkWqIfwcm3y/fq+qKKaIWf1vf3ocOuTdco9XoHCO2AGF1gFYXuZFSWuP38Q8LBHBGJv2KnJSXyA==",
      "license": "MIT",
      "engines": {
        "node": "^14.13.1 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/typicode"
      }
    },
    "node_modules/stream-shift": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.3.tgz",
      "integrity": "sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==",
      "license": "MIT"
    },
    "node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/string_decoder/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
      "license": "MIT"
    },
    "node_modules/string-width": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-7.2.0.tgz",
      "integrity": "sha512-tsaTIkKW9b4N+AEj+SVA+WhJzV7/zMhcSu78mLKWSk7cXMOSHsBKFWUs0fWwq8QyK3MgJBQRX6Gbi4kYbdvGkQ==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^10.3.0",
        "get-east-asian-width": "^1.0.0",
        "strip-ansi": "^7.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/strip-final-newline": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz",
      "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/strnum": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/strnum/-/strnum-2.1.1.tgz",
      "integrity": "sha512-7ZvoFTiCnGxBtDqJ//Cu6fWtZtc7Y3x+QOirG15wztbdngGSkht27o2pyGWrVy0b4WAy3jbKmnoK6g5VlVNUUw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/NaturalIntelligence"
        }
      ],
      "license": "MIT",
      "optional": true
    },
    "node_modules/strtok3": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/strtok3/-/strtok3-7.1.1.tgz",
      "integrity": "sha512-mKX8HA/cdBqMKUr0MMZAFssCkIGoZeSCMXgnt79yKxNFguMLVFgRe6wB+fsL0NmoHDbeyZXczy7vEPSoo3rkzg==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "peek-readable": "^5.1.3"
      },
      "engines": {
        "node": ">=16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/symbol-tree": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz",
      "integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==",
      "license": "MIT"
    },
    "node_modules/syntax-error": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/syntax-error/-/syntax-error-1.4.0.tgz",
      "integrity": "sha512-YPPlu67mdnHGTup2A8ff7BC2Pjq0e0Yp/IyTFN03zWO0RcK07uLcbi7C2KpGR2FvWbaB0+bfE27a+sBKebSo7w==",
      "license": "MIT",
      "dependencies": {
        "acorn-node": "^1.2.0"
      }
    },
    "node_modules/term-img": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/term-img/-/term-img-6.0.0.tgz",
      "integrity": "sha512-R4c+XtUiN/9lMlw+wldmxjPO/xlG3sIE79tcnE3A8CtcYMTDiOgAKy/EhroI+rmjB3cVyCkYSzTPBBjPsC7YdQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-escapes": "^5.0.0",
        "iterm2-version": "^5.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/term-img/node_modules/ansi-escapes": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-5.0.0.tgz",
      "integrity": "sha512-5GFMVX8HqE/TB+FuBJGuO5XG0WrsA6ptUqoODaT/n9mmUaZFkqnBueB4leqGBCmrUHnCnC4PCZTCd0E7QQ83bA==",
      "license": "MIT",
      "dependencies": {
        "type-fest": "^1.0.2"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/term-img/node_modules/type-fest": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-1.4.0.tgz",
      "integrity": "sha512-yGSza74xk0UG8k+pLh5oeoYirvIiWo5t0/o3zHHAO2tRDiZcxWP7fywNlXhqb6/r6sWvwi+RsyQMWhVLe4BVuA==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/terminal-image": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/terminal-image/-/terminal-image-2.0.0.tgz",
      "integrity": "sha512-25HcdYC79g0rPxk9o7RIp3i0/ebP+viR6vj2Fsxh1a9pE6o7PfXz4HlmdYLGsQsmBeQNK88BA2UJo4IzBRfzaA==",
      "license": "MIT",
      "dependencies": {
        "chalk": "^4.1.1",
        "jimp": "^0.16.1",
        "log-update": "^4.0.0",
        "render-gif": "^2.0.4",
        "term-img": "^6.0.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/terminal-image/node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/terminal-image/node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/terminal-image/node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/thread-stream": {
      "version": "0.15.2",
      "resolved": "https://registry.npmjs.org/thread-stream/-/thread-stream-0.15.2.tgz",
      "integrity": "sha512-UkEhKIg2pD+fjkHQKyJO3yoIvAP3N6RlNFt2dUhcS1FGvCD1cQa1M/PGknCLFIyZdtJOWQjejp7bdNqmN7zwdA==",
      "license": "MIT",
      "dependencies": {
        "real-require": "^0.1.0"
      }
    },
    "node_modules/timm": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/timm/-/timm-1.7.1.tgz",
      "integrity": "sha512-IjZc9KIotudix8bMaBW6QvMuq64BrJWFs1+4V0lXwWGQZwH+LnX87doAYhem4caOEusRP9/g6jVDQmZ8XOk1nw==",
      "license": "MIT"
    },
    "node_modules/tinycolor2": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/tinycolor2/-/tinycolor2-1.6.0.tgz",
      "integrity": "sha512-XPaBkWQJdsf3pLKJV9p4qN/S+fm2Oj8AIPo1BTUhg5oxkvm9+SVEGFdhyOz7tTdUTfvxMiAs4sp6/eZO2Ew+pw==",
      "license": "MIT"
    },
    "node_modules/tinygradient": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/tinygradient/-/tinygradient-1.1.5.tgz",
      "integrity": "sha512-8nIfc2vgQ4TeLnk2lFj4tRLvvJwEfQuabdsmvDdQPT0xlk9TaNtpGd6nNRxXoK6vQhN6RSzj+Cnp5tTQmpxmbw==",
      "license": "MIT",
      "dependencies": {
        "@types/tinycolor2": "^1.4.0",
        "tinycolor2": "^1.0.0"
      }
    },
    "node_modules/tlds": {
      "version": "1.259.0",
      "resolved": "https://registry.npmjs.org/tlds/-/tlds-1.259.0.tgz",
      "integrity": "sha512-AldGGlDP0PNgwppe2quAvuBl18UcjuNtOnDuUkqhd6ipPqrYYBt3aTxK1QTsBVknk97lS2JcafWMghjGWFtunw==",
      "license": "MIT",
      "bin": {
        "tlds": "bin.js"
      }
    },
    "node_modules/tldts": {
      "version": "6.1.86",
      "resolved": "https://registry.npmjs.org/tldts/-/tldts-6.1.86.tgz",
      "integrity": "sha512-WMi/OQ2axVTf/ykqCQgXiIct+mSQDFdH2fkwhPwgEwvJ1kSzZRiinb0zF2Xb8u4+OqPChmyI6MEu4EezNJz+FQ==",
      "license": "MIT",
      "dependencies": {
        "tldts-core": "^6.1.86"
      },
      "bin": {
        "tldts": "bin/cli.js"
      }
    },
    "node_modules/tldts-core": {
      "version": "6.1.86",
      "resolved": "https://registry.npmjs.org/tldts-core/-/tldts-core-6.1.86.tgz",
      "integrity": "sha512-Je6p7pkk+KMzMv2XXKmAE3McmolOQFdxkKw0R8EYNr7sELW46JqnNeTX8ybPiQgvg1ymCoF8LXs5fzFaZvJPTA==",
      "license": "MIT"
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/token-types": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/token-types/-/token-types-5.0.1.tgz",
      "integrity": "sha512-Y2fmSnZjQdDb9W4w4r1tswlMHylzWIeOKpx0aZH9BgGtACHhrk3OkT52AzwcuqTRBZtvvnTjDBh8eynMulu8Vg==",
      "license": "MIT",
      "dependencies": {
        "@tokenizer/token": "^0.3.0",
        "ieee754": "^1.2.1"
      },
      "engines": {
        "node": ">=14.16"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/Borewit"
      }
    },
    "node_modules/tough-cookie": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-5.1.2.tgz",
      "integrity": "sha512-FVDYdxtnj0G6Qm/DhNPSb8Ju59ULcup3tuJxkFb5K8Bv2pUXILbf0xZWU8PX8Ov19OXljbUyveOFwRMwkXzO+A==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "tldts": "^6.1.32"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/tr46": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-3.0.0.tgz",
      "integrity": "sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==",
      "license": "MIT",
      "dependencies": {
        "punycode": "^2.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/translate-google-api": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/translate-google-api/-/translate-google-api-1.0.4.tgz",
      "integrity": "sha512-KVXmo4+64/H1vIbnzf2zNiJ2JLeEB3jrEnNRP2EFNAGNqna/5bmw/Cps3pCHu0n3BzTOoWh9u6wFvrRYdzQ6Iw==",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.20.0"
      }
    },
    "node_modules/translate-google-api/node_modules/axios": {
      "version": "0.20.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.20.0.tgz",
      "integrity": "sha512-ANA4rr2BDcmmAQLOKft2fufrtuvlqR+cXNNinUmvfeSNCOF98PZL+7M/v1zIdGo7OLjEA9J2gXJL+j4zGsl0bA==",
      "deprecated": "Critical security vulnerability fixed in v0.21.1. For more information, see https://github.com/axios/axios/pull/3410",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.10.0"
      }
    },
    "node_modules/ts-api-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
      "integrity": "sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18.12"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/ttys": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/ttys/-/ttys-0.0.3.tgz",
      "integrity": "sha512-UCqXRZS2S7U4aVB7Salj3ChPRSsb57ogJpJ1eMCvyowxFOBGsaHKcRU8bovcDwajX1mRbv0IpUnYkoG7Ieo5Zg==",
      "engines": {
        "node": ">= 0.6.0"
      }
    },
    "node_modules/tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "license": "Apache-2.0",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA==",
      "license": "Unlicense"
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-fest": {
      "version": "4.41.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz",
      "integrity": "sha512-TeTSQ6H5YHvpqVwBRcnLDCBnDOHWYu7IvGbHT6N8AOymcr9PJGjc1GTtiWZTYg0NCgYwvnYWEkVChQAr9bjfwA==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=16"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/type-is/node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/typescript": {
      "version": "5.8.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
      "license": "Apache-2.0",
      "peer": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/undici": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/undici/-/undici-7.13.0.tgz",
      "integrity": "sha512-l+zSMssRqrzDcb3fjMkjjLGmuiiK2pMIcV++mJaAc9vhjSGpvM7h43QgP+OAMb1GImHmbPyG2tBXeuyG5iY4gA==",
      "license": "MIT",
      "engines": {
        "node": ">=20.18.1"
      }
    },
    "node_modules/undici-types": {
      "version": "7.8.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz",
      "integrity": "sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==",
      "license": "MIT"
    },
    "node_modules/universalify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
      "license": "MIT",
      "engines": {
        "node": ">= 10.0.0"
      }
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/url": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
      "integrity": "sha512-kbailJa29QrtXnxgq+DdCEGlbTeYM2eJUxsz6vjZavrCYPMIFHMKQmSKYAIuUK2i7hgPm28a8piX5NTUtM/LKQ==",
      "license": "MIT",
      "dependencies": {
        "punycode": "1.3.2",
        "querystring": "0.2.0"
      }
    },
    "node_modules/url-parse": {
      "version": "1.5.10",
      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz",
      "integrity": "sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==",
      "license": "MIT",
      "dependencies": {
        "querystringify": "^2.1.1",
        "requires-port": "^1.0.0"
      }
    },
    "node_modules/url-regex-safe": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-regex-safe/-/url-regex-safe-3.0.0.tgz",
      "integrity": "sha512-+2U40NrcmtWFVjuxXVt9bGRw6c7/MgkGKN9xIfPrT/2RX0LTkkae6CCEDp93xqUN0UKm/rr821QnHd2dHQmN3A==",
      "license": "MIT",
      "dependencies": {
        "ip-regex": "4.3.0",
        "tlds": "^1.228.0"
      },
      "engines": {
        "node": ">= 10.12.0"
      },
      "peerDependencies": {
        "re2": "^1.17.2"
      },
      "peerDependenciesMeta": {
        "re2": {
          "optional": true
        }
      }
    },
    "node_modules/url/node_modules/punycode": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
      "integrity": "sha512-RofWgt/7fL5wP1Y7fxE7/EmTLzQVnB0ycyibJ0OOHIlJqTNzglYFxVwETOcIoJqJmpDXJ9xImDv+Fq34F/d4Dw==",
      "license": "MIT"
    },
    "node_modules/utif": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/utif/-/utif-2.0.1.tgz",
      "integrity": "sha512-Z/S1fNKCicQTf375lIP9G8Sa1H/phcysstNrrSdZKj1f9g58J4NMgb5IgiEZN9/nLMPDwF0W7hdOe9Qq2IYoLg==",
      "license": "MIT",
      "dependencies": {
        "pako": "^1.0.5"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "license": "MIT"
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "optional": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
      "engines": [
        "node >=0.6.0"
      ],
      "license": "MIT",
      "dependencies": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      }
    },
    "node_modules/verror/node_modules/core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==",
      "license": "MIT"
    },
    "node_modules/w3c-hr-time": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/w3c-hr-time/-/w3c-hr-time-1.0.2.tgz",
      "integrity": "sha512-z8P5DvDNjKDoFIHK7q8r8lackT6l+jo/Ye3HOle7l9nICP9lf1Ci25fy9vHd0JOWewkIFzXIEig3TdKT7JQ5fQ==",
      "deprecated": "Use your platform's native performance.now() and performance.timeOrigin.",
      "license": "MIT",
      "dependencies": {
        "browser-process-hrtime": "^1.0.0"
      }
    },
    "node_modules/w3c-xmlserializer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-3.0.0.tgz",
      "integrity": "sha512-3WFqGEgSXIyGhOmAFtlicJNMjEps8b1MG31NCA0/vOF9+nKMUW1ckhi9cnNHmf88Rzw5V+dwIwsm2C7X8k9aQg==",
      "license": "MIT",
      "dependencies": {
        "xml-name-validator": "^4.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/web-streams-polyfill": {
      "version": "4.0.0-beta.3",
      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-4.0.0-beta.3.tgz",
      "integrity": "sha512-QW95TCTaHmsYfHDybGMwO5IJIM93I/6vTRk+daHTWFPhwh+C8Cg7j7XyKrwrj8Ib6vYXe0ocYNrmzY4xAAN6ug==",
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
      "integrity": "sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/whatwg-encoding": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-3.1.1.tgz",
      "integrity": "sha512-6qN4hJdMwfYBtE3YBTTHhoeuUrDBPZmbQaxWAqSALV/MeEnR5z1xd8UKud2RAkFoPkmB+hli1TZSnyi84xz1vQ==",
      "license": "MIT",
      "dependencies": {
        "iconv-lite": "0.6.3"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/whatwg-mimetype": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-4.0.0.tgz",
      "integrity": "sha512-QaKxh0eNIi2mE9p2vEdzfagOKHCcj1pJ56EEHGQOVxp8r9/iszLUUV7v89x9O1p/T+NlTM5W7jW6+cz4Fq1YVg==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/whatwg-url": {
      "version": "10.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-10.0.0.tgz",
      "integrity": "sha512-CLxxCmdUby142H5FZzn4D8ikO1cmypvXVQktsgosNy4a4BHrDHeciBBGZhb0bNoR5/MltoCatso+vFjjGx8t0w==",
      "license": "MIT",
      "dependencies": {
        "tr46": "^3.0.0",
        "webidl-conversions": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-module": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.1.tgz",
      "integrity": "sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==",
      "license": "ISC"
    },
    "node_modules/widest-line": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/widest-line/-/widest-line-5.0.0.tgz",
      "integrity": "sha512-c9bZp7b5YtRj2wOe6dlj32MK+Bx/M/d+9VB2SHM1OtsUHR0aV0tdP6DWh/iMt0kWi1t5g1Iudu6hQRNd1A4PVA==",
      "license": "MIT",
      "dependencies": {
        "string-width": "^7.0.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/window-size": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/window-size/-/window-size-1.1.1.tgz",
      "integrity": "sha512-5D/9vujkmVQ7pSmc0SCBmHXbkv6eaHwXEx65MywhmUMsI8sGqJ972APq1lotfcwMKPFLuCFfL8xGHLIp7jaBmA==",
      "license": "MIT",
      "dependencies": {
        "define-property": "^1.0.0",
        "is-number": "^3.0.0"
      },
      "bin": {
        "window-size": "cli.js"
      },
      "engines": {
        "node": ">= 0.10.0"
      }
    },
    "node_modules/window-size/node_modules/is-number": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
      "integrity": "sha512-4cboCqIpliH+mAvFNegjZQ4kgKc3ZUhQVr3HvWbSh5q3WH2v82ct+T2Y1hdU5Gdtorx/cLifQjqCbL7bpznLTg==",
      "license": "MIT",
      "dependencies": {
        "kind-of": "^3.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-9.0.0.tgz",
      "integrity": "sha512-G8ura3S+3Z2G+mkgNRq8dqaFZAuxfsxpBB8OCTGRTCtp+l/v9nbFNmCUP1BZMts3G1142MsZfn6eeUKrr4PD1Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.2.1",
        "string-width": "^7.0.0",
        "strip-ansi": "^7.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "license": "ISC"
    },
    "node_modules/ws": {
      "version": "8.18.3",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.3.tgz",
      "integrity": "sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xhr": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/xhr/-/xhr-2.6.0.tgz",
      "integrity": "sha512-/eCGLb5rxjx5e3mF1A7s+pLlR6CGyqWN91fv1JgER5mVWg1MZmlhBvy9kjcsOdRk8RrIujotWyJamfyrp+WIcA==",
      "license": "MIT",
      "dependencies": {
        "global": "~4.4.0",
        "is-function": "^1.0.1",
        "parse-headers": "^2.0.0",
        "xtend": "^4.0.0"
      }
    },
    "node_modules/xml-name-validator": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-4.0.0.tgz",
      "integrity": "sha512-ICP2e+jsHvAj2E2lIHxa5tjXRlKDJo4IdvPvCXbXQGdzSfmSpNVyIKMvoZHjDY9DP0zV17iI85o90vRFXNccRw==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/xml-parse-from-string": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/xml-parse-from-string/-/xml-parse-from-string-1.0.1.tgz",
      "integrity": "sha512-ErcKwJTF54uRzzNMXq2X5sMIy88zJvfN2DmdoQvy7PAFJ+tPRU6ydWuOKNMyfmOjdyBQTFREi60s0Y0SyI0G0g==",
      "license": "MIT"
    },
    "node_modules/xml2js": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.5.0.tgz",
      "integrity": "sha512-drPFnkQJik/O+uPKpqSgr22mpuFHqKdbS835iAQrUC73L2F5WkboIRd63ai/2Yg6I1jzifPFKH2NTK+cfglkIA==",
      "license": "MIT",
      "dependencies": {
        "sax": ">=0.6.0",
        "xmlbuilder": "~11.0.0"
      },
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/xml2js/node_modules/xmlbuilder": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
      "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/xmlbuilder": {
      "version": "15.1.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-15.1.1.tgz",
      "integrity": "sha512-yMqGBqtXyeN1e3TGYvgNgDVZ3j84W4cwkOXQswghol6APgZWaff9lnbvN7MHYJOiXsvGPXtjTYJEiC9J2wv9Eg==",
      "license": "MIT",
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/xmlchars": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz",
      "integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==",
      "license": "MIT"
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/yargs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "license": "MIT",
      "peer": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/yt-dlp-exec": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/yt-dlp-exec/-/yt-dlp-exec-1.0.2.tgz",
      "integrity": "sha512-swKtruQmGBs+Xrxy0wCZ2FxCT167EpBYIWdj/klTzNB2HrHng/qFlKo/C0WVlopbww8/uMIGQR6grXQ2ObcrAw==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "dargs": "~7.0.0",
        "execa": "~5.1.0",
        "is-unix": "~2.0.1",
        "mkdirp": "~1.0.4",
        "node-fetch": "~2.6.5"
      },
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/yt-dlp-exec/node_modules/mkdirp": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
      "license": "MIT",
      "bin": {
        "mkdirp": "bin/cmd.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yt-dlp-exec/node_modules/node-fetch": {
      "version": "2.6.13",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.13.tgz",
      "integrity": "sha512-StxNAxh15zr77QvvkmveSQ8uCQ4+v5FkvNTj0OESmiHu+VRi/gXArXtkWMElOsOUNLtUEvI4yS+rdtOHZTwlQA==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/yt-dlp-exec/node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/yt-dlp-exec/node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/yt-dlp-exec/node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/yt-search": {
      "version": "2.13.1",
      "resolved": "https://registry.npmjs.org/yt-search/-/yt-search-2.13.1.tgz",
      "integrity": "sha512-iUvUpUYyG1Gk5MxwdxUkSeugXR2DcWX+pEq3rJlsNHHNp4+Lka+fCwNYEdoN5ovxltAzAvx0K3/3MbX7FqDdAw==",
      "license": "MIT",
      "dependencies": {
        "async.parallellimit": "~0.5.2",
        "boolstring": "~2.0.1",
        "cheerio": "^1.0.0-rc.10",
        "dasu": "~0.4.3",
        "human-time": "0.0.2",
        "jsonpath-plus": "~10.3.0",
        "minimist": "~1.2.5",
        "node-fzf": "~0.14.0"
      },
      "bin": {
        "yt-search": "bin/cli.js",
        "yt-search-audio": "bin/mpv_audio.sh",
        "yt-search-video": "bin/mpv_video.sh"
      }
    },
    "node_modules/ytdl-core": {
      "version": "4.11.5",
      "resolved": "https://registry.npmjs.org/ytdl-core/-/ytdl-core-4.11.5.tgz",
      "integrity": "sha512-27LwsW4n4nyNviRCO1hmr8Wr5J1wLLMawHCQvH8Fk0hiRqrxuIu028WzbJetiYH28K8XDbeinYW4/wcHQD1EXA==",
      "license": "MIT",
      "dependencies": {
        "m3u8stream": "^0.8.6",
        "miniget": "^4.2.2",
        "sax": "^1.1.3"
      },
      "engines": {
        "node": ">=12"
      }
    }
  }
}

//----- FIN DEL ARCHIVO: ./npm-shrinkwrap.json -----//

